-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2018.3
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity video_scale is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    start_full_n : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    start_out : OUT STD_LOGIC;
    start_write : OUT STD_LOGIC;
    src_data_stream_0_V_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    src_data_stream_0_V_empty_n : IN STD_LOGIC;
    src_data_stream_0_V_read : OUT STD_LOGIC;
    src_data_stream_1_V_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    src_data_stream_1_V_empty_n : IN STD_LOGIC;
    src_data_stream_1_V_read : OUT STD_LOGIC;
    src_data_stream_2_V_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    src_data_stream_2_V_empty_n : IN STD_LOGIC;
    src_data_stream_2_V_read : OUT STD_LOGIC;
    dst_data_stream_0_V_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    dst_data_stream_0_V_full_n : IN STD_LOGIC;
    dst_data_stream_0_V_write : OUT STD_LOGIC;
    dst_data_stream_1_V_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    dst_data_stream_1_V_full_n : IN STD_LOGIC;
    dst_data_stream_1_V_write : OUT STD_LOGIC;
    dst_data_stream_2_V_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    dst_data_stream_2_V_full_n : IN STD_LOGIC;
    dst_data_stream_2_V_write : OUT STD_LOGIC );
end;


architecture behav of video_scale is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (4 downto 0) := "00010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (4 downto 0) := "00100";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (4 downto 0) := "01000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (4 downto 0) := "10000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv10_0 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    constant ap_const_lv11_0 : STD_LOGIC_VECTOR (10 downto 0) := "00000000000";
    constant ap_const_lv6_3C : STD_LOGIC_VECTOR (5 downto 0) := "111100";
    constant ap_const_lv6_1 : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    constant ap_const_lv10_3C0 : STD_LOGIC_VECTOR (9 downto 0) := "1111000000";
    constant ap_const_lv10_1 : STD_LOGIC_VECTOR (9 downto 0) := "0000000001";
    constant ap_const_lv5_1F : STD_LOGIC_VECTOR (4 downto 0) := "11111";
    constant ap_const_lv11_780 : STD_LOGIC_VECTOR (10 downto 0) := "11110000000";
    constant ap_const_lv11_1 : STD_LOGIC_VECTOR (10 downto 0) := "00000000001";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";

    signal real_start : STD_LOGIC;
    signal start_once_reg : STD_LOGIC := '0';
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal internal_ap_ready : STD_LOGIC;
    signal src_data_stream_0_V_blk_n : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal exitcond_reg_522 : STD_LOGIC_VECTOR (0 downto 0);
    signal src_data_stream_1_V_blk_n : STD_LOGIC;
    signal src_data_stream_2_V_blk_n : STD_LOGIC;
    signal dst_data_stream_0_V_blk_n : STD_LOGIC;
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal exitcond_reg_522_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_3_reg_556 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_3_reg_556_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_8_reg_518 : STD_LOGIC_VECTOR (0 downto 0);
    signal dst_data_stream_1_V_blk_n : STD_LOGIC;
    signal dst_data_stream_2_V_blk_n : STD_LOGIC;
    signal t_V_2_reg_251 : STD_LOGIC_VECTOR (10 downto 0);
    signal c_V_fu_304_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal exitcond1_fu_321_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal r_V_fu_327_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal r_V_reg_513 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_8_fu_333_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_fu_343_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state4_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter2 : BOOLEAN;
    signal ap_predicate_op99_write_state7 : BOOLEAN;
    signal ap_predicate_op100_write_state7 : BOOLEAN;
    signal ap_predicate_op101_write_state7 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal exitcond_reg_522_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal c_V_1_fu_349_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal tmp_6_fu_365_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_6_reg_531 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_6_reg_531_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal sums_val_0_addr_1_reg_538 : STD_LOGIC_VECTOR (5 downto 0);
    signal sums_val_0_addr_1_reg_538_pp0_iter1_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal sums_val_0_addr_1_reg_538_pp0_iter2_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal sums_val_1_addr_1_reg_544 : STD_LOGIC_VECTOR (5 downto 0);
    signal sums_val_1_addr_1_reg_544_pp0_iter1_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal sums_val_1_addr_1_reg_544_pp0_iter2_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal sums_val_2_addr_1_reg_550 : STD_LOGIC_VECTOR (5 downto 0);
    signal sums_val_2_addr_1_reg_550_pp0_iter1_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal sums_val_2_addr_1_reg_550_pp0_iter2_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_3_fu_378_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_3_reg_556_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal sums_val_0_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal current_sum_val_0_reg_560 : STD_LOGIC_VECTOR (31 downto 0);
    signal sums_val_1_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal current_sum_val_1_reg_565 : STD_LOGIC_VECTOR (31 downto 0);
    signal sums_val_2_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal current_sum_val_2_reg_570 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_20_reg_575 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_21_reg_580 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_19_reg_585 : STD_LOGIC_VECTOR (31 downto 0);
    signal current_sum_val_0_1_fu_411_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal current_sum_val_0_1_reg_590 : STD_LOGIC_VECTOR (31 downto 0);
    signal current_sum_val_1_1_fu_416_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal current_sum_val_1_1_reg_596 : STD_LOGIC_VECTOR (31 downto 0);
    signal current_sum_val_2_1_fu_421_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal current_sum_val_2_1_reg_602 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_condition_pp0_exit_iter0_state4 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal sums_val_0_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal sums_val_0_ce0 : STD_LOGIC;
    signal sums_val_0_we0 : STD_LOGIC;
    signal sums_val_0_address1 : STD_LOGIC_VECTOR (5 downto 0);
    signal sums_val_0_ce1 : STD_LOGIC;
    signal sums_val_0_we1 : STD_LOGIC;
    signal sums_val_1_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal sums_val_1_ce0 : STD_LOGIC;
    signal sums_val_1_we0 : STD_LOGIC;
    signal sums_val_1_address1 : STD_LOGIC_VECTOR (5 downto 0);
    signal sums_val_1_ce1 : STD_LOGIC;
    signal sums_val_1_we1 : STD_LOGIC;
    signal sums_val_2_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal sums_val_2_ce0 : STD_LOGIC;
    signal sums_val_2_we0 : STD_LOGIC;
    signal sums_val_2_address1 : STD_LOGIC_VECTOR (5 downto 0);
    signal sums_val_2_ce1 : STD_LOGIC;
    signal sums_val_2_we1 : STD_LOGIC;
    signal t_V_reg_229 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_4_fu_298_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state1 : BOOLEAN;
    signal t_V_1_reg_240 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal ap_phi_reg_pp0_iter0_storemerge2_reg_262 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter1_storemerge2_reg_262 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter2_storemerge2_reg_262 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter3_storemerge2_reg_262 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter0_storemerge1_reg_274 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter1_storemerge1_reg_274 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter2_storemerge1_reg_274 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter3_storemerge1_reg_274 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter0_storemerge_reg_286 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter1_storemerge_reg_286 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter2_storemerge_reg_286 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter3_storemerge_reg_286 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_5_fu_310_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_9_fu_371_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal current_sum_val_2_3_fu_106 : STD_LOGIC_VECTOR (31 downto 0);
    signal current_sum_val_1_3_fu_110 : STD_LOGIC_VECTOR (31 downto 0);
    signal current_sum_val_0_3_fu_114 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_fu_317_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_16_fu_339_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal r_V_2_fu_355_p4 : STD_LOGIC_VECTOR (5 downto 0);
    signal current_sum_val_0_2_fu_393_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal current_sum_val_1_2_fu_399_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal current_sum_val_2_2_fu_405_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_7_fu_441_p4 : STD_LOGIC_VECTOR (21 downto 0);
    signal tmp_11_fu_455_p4 : STD_LOGIC_VECTOR (21 downto 0);
    signal tmp_13_fu_469_p4 : STD_LOGIC_VECTOR (21 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_block_pp0 : BOOLEAN;
    signal ap_enable_operation_106 : BOOLEAN;
    signal ap_enable_state7_pp0_iter3_stage0 : BOOLEAN;
    signal ap_enable_operation_58 : BOOLEAN;
    signal ap_enable_state4_pp0_iter0_stage0 : BOOLEAN;
    signal ap_enable_operation_65 : BOOLEAN;
    signal ap_enable_state5_pp0_iter1_stage0 : BOOLEAN;
    signal ap_enable_operation_107 : BOOLEAN;
    signal ap_enable_operation_60 : BOOLEAN;
    signal ap_enable_operation_66 : BOOLEAN;
    signal ap_enable_operation_108 : BOOLEAN;
    signal ap_enable_operation_62 : BOOLEAN;
    signal ap_enable_operation_67 : BOOLEAN;
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_condition_299 : BOOLEAN;
    signal ap_condition_303 : BOOLEAN;

    component video_scale_sums_cud IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (5 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        address1 : IN STD_LOGIC_VECTOR (5 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (31 downto 0) );
    end component;



begin
    sums_val_0_U : component video_scale_sums_cud
    generic map (
        DataWidth => 32,
        AddressRange => 60,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => sums_val_0_address0,
        ce0 => sums_val_0_ce0,
        we0 => sums_val_0_we0,
        d0 => ap_const_lv32_0,
        q0 => sums_val_0_q0,
        address1 => sums_val_0_address1,
        ce1 => sums_val_0_ce1,
        we1 => sums_val_0_we1,
        d1 => ap_phi_reg_pp0_iter3_storemerge2_reg_262);

    sums_val_1_U : component video_scale_sums_cud
    generic map (
        DataWidth => 32,
        AddressRange => 60,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => sums_val_1_address0,
        ce0 => sums_val_1_ce0,
        we0 => sums_val_1_we0,
        d0 => ap_const_lv32_0,
        q0 => sums_val_1_q0,
        address1 => sums_val_1_address1,
        ce1 => sums_val_1_ce1,
        we1 => sums_val_1_we1,
        d1 => ap_phi_reg_pp0_iter3_storemerge1_reg_274);

    sums_val_2_U : component video_scale_sums_cud
    generic map (
        DataWidth => 32,
        AddressRange => 60,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => sums_val_2_address0,
        ce0 => sums_val_2_ce0,
        we0 => sums_val_2_we0,
        d0 => ap_const_lv32_0,
        q0 => sums_val_2_q0,
        address1 => sums_val_2_address1,
        ce1 => sums_val_2_ce1,
        we1 => sums_val_2_we1,
        d1 => ap_phi_reg_pp0_iter3_storemerge_reg_286);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((exitcond1_fu_321_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state4))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif (((exitcond1_fu_321_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then
                    if ((ap_const_logic_1 = ap_condition_pp0_exit_iter0_state4)) then 
                        ap_enable_reg_pp0_iter1 <= (ap_const_logic_1 xor ap_condition_pp0_exit_iter0_state4);
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                elsif (((exitcond1_fu_321_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                    ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    start_once_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                start_once_reg <= ap_const_logic_0;
            else
                if (((internal_ap_ready = ap_const_logic_0) and (real_start = ap_const_logic_1))) then 
                    start_once_reg <= ap_const_logic_1;
                elsif ((internal_ap_ready = ap_const_logic_1)) then 
                    start_once_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_phi_reg_pp0_iter3_storemerge1_reg_274_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                if ((ap_const_boolean_1 = ap_condition_303)) then 
                    ap_phi_reg_pp0_iter3_storemerge1_reg_274 <= current_sum_val_1_1_fu_416_p2;
                elsif ((ap_const_boolean_1 = ap_condition_299)) then 
                    ap_phi_reg_pp0_iter3_storemerge1_reg_274 <= ap_const_lv32_0;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter3_storemerge1_reg_274 <= ap_phi_reg_pp0_iter2_storemerge1_reg_274;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter3_storemerge2_reg_262_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                if ((ap_const_boolean_1 = ap_condition_303)) then 
                    ap_phi_reg_pp0_iter3_storemerge2_reg_262 <= current_sum_val_0_1_fu_411_p2;
                elsif ((ap_const_boolean_1 = ap_condition_299)) then 
                    ap_phi_reg_pp0_iter3_storemerge2_reg_262 <= ap_const_lv32_0;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter3_storemerge2_reg_262 <= ap_phi_reg_pp0_iter2_storemerge2_reg_262;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter3_storemerge_reg_286_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                if ((ap_const_boolean_1 = ap_condition_303)) then 
                    ap_phi_reg_pp0_iter3_storemerge_reg_286 <= current_sum_val_2_1_fu_421_p2;
                elsif ((ap_const_boolean_1 = ap_condition_299)) then 
                    ap_phi_reg_pp0_iter3_storemerge_reg_286 <= ap_const_lv32_0;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter3_storemerge_reg_286 <= ap_phi_reg_pp0_iter2_storemerge_reg_286;
                end if;
            end if; 
        end if;
    end process;

    t_V_1_reg_240_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_4_fu_298_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                t_V_1_reg_240 <= ap_const_lv10_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
                t_V_1_reg_240 <= r_V_reg_513;
            end if; 
        end if;
    end process;

    t_V_2_reg_251_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_fu_343_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                t_V_2_reg_251 <= c_V_1_fu_349_p2;
            elsif (((exitcond1_fu_321_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                t_V_2_reg_251 <= ap_const_lv11_0;
            end if; 
        end if;
    end process;

    t_V_reg_229_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                t_V_reg_229 <= ap_const_lv6_0;
            elsif (((tmp_4_fu_298_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                t_V_reg_229 <= c_V_fu_304_p2;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                ap_phi_reg_pp0_iter1_storemerge1_reg_274 <= ap_phi_reg_pp0_iter0_storemerge1_reg_274;
                ap_phi_reg_pp0_iter1_storemerge2_reg_262 <= ap_phi_reg_pp0_iter0_storemerge2_reg_262;
                ap_phi_reg_pp0_iter1_storemerge_reg_286 <= ap_phi_reg_pp0_iter0_storemerge_reg_286;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                ap_phi_reg_pp0_iter2_storemerge1_reg_274 <= ap_phi_reg_pp0_iter1_storemerge1_reg_274;
                ap_phi_reg_pp0_iter2_storemerge2_reg_262 <= ap_phi_reg_pp0_iter1_storemerge2_reg_262;
                ap_phi_reg_pp0_iter2_storemerge_reg_286 <= ap_phi_reg_pp0_iter1_storemerge_reg_286;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_reg_522_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                current_sum_val_0_1_reg_590 <= current_sum_val_0_1_fu_411_p2;
                current_sum_val_1_1_reg_596 <= current_sum_val_1_1_fu_416_p2;
                current_sum_val_2_1_reg_602 <= current_sum_val_2_1_fu_421_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_reg_522_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                current_sum_val_0_3_fu_114 <= current_sum_val_0_1_fu_411_p2;
                current_sum_val_1_3_fu_110 <= current_sum_val_1_1_fu_416_p2;
                current_sum_val_2_3_fu_106 <= current_sum_val_2_1_fu_421_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_reg_522 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                current_sum_val_0_reg_560 <= sums_val_0_q0;
                current_sum_val_1_reg_565 <= sums_val_1_q0;
                current_sum_val_2_reg_570 <= sums_val_2_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                exitcond_reg_522 <= exitcond_fu_343_p2;
                exitcond_reg_522_pp0_iter1_reg <= exitcond_reg_522;
                sums_val_0_addr_1_reg_538_pp0_iter1_reg <= sums_val_0_addr_1_reg_538;
                sums_val_1_addr_1_reg_544_pp0_iter1_reg <= sums_val_1_addr_1_reg_544;
                sums_val_2_addr_1_reg_550_pp0_iter1_reg <= sums_val_2_addr_1_reg_550;
                tmp_3_reg_556_pp0_iter1_reg <= tmp_3_reg_556;
                tmp_6_reg_531_pp0_iter1_reg <= tmp_6_reg_531;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                exitcond_reg_522_pp0_iter2_reg <= exitcond_reg_522_pp0_iter1_reg;
                sums_val_0_addr_1_reg_538_pp0_iter2_reg <= sums_val_0_addr_1_reg_538_pp0_iter1_reg;
                sums_val_1_addr_1_reg_544_pp0_iter2_reg <= sums_val_1_addr_1_reg_544_pp0_iter1_reg;
                sums_val_2_addr_1_reg_550_pp0_iter2_reg <= sums_val_2_addr_1_reg_550_pp0_iter1_reg;
                tmp_3_reg_556_pp0_iter2_reg <= tmp_3_reg_556_pp0_iter1_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then
                r_V_reg_513 <= r_V_fu_327_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_fu_343_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                sums_val_0_addr_1_reg_538 <= tmp_9_fu_371_p1(6 - 1 downto 0);
                sums_val_1_addr_1_reg_544 <= tmp_9_fu_371_p1(6 - 1 downto 0);
                sums_val_2_addr_1_reg_550 <= tmp_9_fu_371_p1(6 - 1 downto 0);
                tmp_3_reg_556 <= tmp_3_fu_378_p2;
                tmp_6_reg_531 <= tmp_6_fu_365_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_reg_522 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                tmp_19_reg_585 <= src_data_stream_2_V_dout;
                tmp_20_reg_575 <= src_data_stream_0_V_dout;
                tmp_21_reg_580 <= src_data_stream_1_V_dout;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond1_fu_321_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                tmp_8_reg_518 <= tmp_8_fu_333_p2;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (real_start, ap_done_reg, ap_CS_fsm, ap_CS_fsm_state1, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter3, ap_CS_fsm_state2, exitcond1_fu_321_p2, ap_CS_fsm_state3, exitcond_fu_343_p2, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone, ap_enable_reg_pp0_iter2, tmp_4_fu_298_p2)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((tmp_4_fu_298_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state2;
                end if;
            when ap_ST_fsm_state3 => 
                if (((exitcond1_fu_321_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((exitcond_fu_343_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) and not(((ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif ((((ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1)) or ((exitcond_fu_343_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_state8;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_state8 => 
                ap_NS_fsm <= ap_ST_fsm_state3;
            when others =>  
                ap_NS_fsm <= "XXXXX";
        end case;
    end process;
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(3);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state8 <= ap_CS_fsm(4);

    ap_block_pp0_assign_proc : process(ap_CS_fsm, ap_block_pp0_stage0_subdone)
    begin
                ap_block_pp0 <= ((ap_ST_fsm_pp0_stage0 = ap_CS_fsm) and (ap_const_boolean_1 = ap_block_pp0_stage0_subdone));
    end process;

        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(src_data_stream_0_V_empty_n, src_data_stream_1_V_empty_n, src_data_stream_2_V_empty_n, dst_data_stream_0_V_full_n, dst_data_stream_1_V_full_n, dst_data_stream_2_V_full_n, ap_enable_reg_pp0_iter1, exitcond_reg_522, ap_enable_reg_pp0_iter3, ap_predicate_op99_write_state7, ap_predicate_op100_write_state7, ap_predicate_op101_write_state7)
    begin
                ap_block_pp0_stage0_01001 <= (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (((dst_data_stream_2_V_full_n = ap_const_logic_0) and (ap_predicate_op101_write_state7 = ap_const_boolean_1)) or ((dst_data_stream_1_V_full_n = ap_const_logic_0) and (ap_predicate_op100_write_state7 = ap_const_boolean_1)) or ((dst_data_stream_0_V_full_n = ap_const_logic_0) and (ap_predicate_op99_write_state7 = ap_const_boolean_1)))) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (((exitcond_reg_522 = ap_const_lv1_0) and (src_data_stream_2_V_empty_n = ap_const_logic_0)) or ((exitcond_reg_522 = ap_const_lv1_0) and (src_data_stream_1_V_empty_n = ap_const_logic_0)) or ((exitcond_reg_522 = ap_const_lv1_0) and (src_data_stream_0_V_empty_n = ap_const_logic_0)))));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(src_data_stream_0_V_empty_n, src_data_stream_1_V_empty_n, src_data_stream_2_V_empty_n, dst_data_stream_0_V_full_n, dst_data_stream_1_V_full_n, dst_data_stream_2_V_full_n, ap_enable_reg_pp0_iter1, exitcond_reg_522, ap_enable_reg_pp0_iter3, ap_predicate_op99_write_state7, ap_predicate_op100_write_state7, ap_predicate_op101_write_state7)
    begin
                ap_block_pp0_stage0_11001 <= (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (((dst_data_stream_2_V_full_n = ap_const_logic_0) and (ap_predicate_op101_write_state7 = ap_const_boolean_1)) or ((dst_data_stream_1_V_full_n = ap_const_logic_0) and (ap_predicate_op100_write_state7 = ap_const_boolean_1)) or ((dst_data_stream_0_V_full_n = ap_const_logic_0) and (ap_predicate_op99_write_state7 = ap_const_boolean_1)))) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (((exitcond_reg_522 = ap_const_lv1_0) and (src_data_stream_2_V_empty_n = ap_const_logic_0)) or ((exitcond_reg_522 = ap_const_lv1_0) and (src_data_stream_1_V_empty_n = ap_const_logic_0)) or ((exitcond_reg_522 = ap_const_lv1_0) and (src_data_stream_0_V_empty_n = ap_const_logic_0)))));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(src_data_stream_0_V_empty_n, src_data_stream_1_V_empty_n, src_data_stream_2_V_empty_n, dst_data_stream_0_V_full_n, dst_data_stream_1_V_full_n, dst_data_stream_2_V_full_n, ap_enable_reg_pp0_iter1, exitcond_reg_522, ap_enable_reg_pp0_iter3, ap_predicate_op99_write_state7, ap_predicate_op100_write_state7, ap_predicate_op101_write_state7)
    begin
                ap_block_pp0_stage0_subdone <= (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (((dst_data_stream_2_V_full_n = ap_const_logic_0) and (ap_predicate_op101_write_state7 = ap_const_boolean_1)) or ((dst_data_stream_1_V_full_n = ap_const_logic_0) and (ap_predicate_op100_write_state7 = ap_const_boolean_1)) or ((dst_data_stream_0_V_full_n = ap_const_logic_0) and (ap_predicate_op99_write_state7 = ap_const_boolean_1)))) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (((exitcond_reg_522 = ap_const_lv1_0) and (src_data_stream_2_V_empty_n = ap_const_logic_0)) or ((exitcond_reg_522 = ap_const_lv1_0) and (src_data_stream_1_V_empty_n = ap_const_logic_0)) or ((exitcond_reg_522 = ap_const_lv1_0) and (src_data_stream_0_V_empty_n = ap_const_logic_0)))));
    end process;


    ap_block_state1_assign_proc : process(real_start, ap_done_reg)
    begin
                ap_block_state1 <= ((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1));
    end process;

        ap_block_state4_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state5_pp0_stage0_iter1_assign_proc : process(src_data_stream_0_V_empty_n, src_data_stream_1_V_empty_n, src_data_stream_2_V_empty_n, exitcond_reg_522)
    begin
                ap_block_state5_pp0_stage0_iter1 <= (((exitcond_reg_522 = ap_const_lv1_0) and (src_data_stream_2_V_empty_n = ap_const_logic_0)) or ((exitcond_reg_522 = ap_const_lv1_0) and (src_data_stream_1_V_empty_n = ap_const_logic_0)) or ((exitcond_reg_522 = ap_const_lv1_0) and (src_data_stream_0_V_empty_n = ap_const_logic_0)));
    end process;

        ap_block_state6_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state7_pp0_stage0_iter3_assign_proc : process(dst_data_stream_0_V_full_n, dst_data_stream_1_V_full_n, dst_data_stream_2_V_full_n, ap_predicate_op99_write_state7, ap_predicate_op100_write_state7, ap_predicate_op101_write_state7)
    begin
                ap_block_state7_pp0_stage0_iter3 <= (((dst_data_stream_2_V_full_n = ap_const_logic_0) and (ap_predicate_op101_write_state7 = ap_const_boolean_1)) or ((dst_data_stream_1_V_full_n = ap_const_logic_0) and (ap_predicate_op100_write_state7 = ap_const_boolean_1)) or ((dst_data_stream_0_V_full_n = ap_const_logic_0) and (ap_predicate_op99_write_state7 = ap_const_boolean_1)));
    end process;


    ap_condition_299_assign_proc : process(tmp_8_reg_518, exitcond_reg_522_pp0_iter1_reg, tmp_3_reg_556_pp0_iter1_reg)
    begin
                ap_condition_299 <= ((tmp_8_reg_518 = ap_const_lv1_1) and (tmp_3_reg_556_pp0_iter1_reg = ap_const_lv1_1) and (exitcond_reg_522_pp0_iter1_reg = ap_const_lv1_0));
    end process;


    ap_condition_303_assign_proc : process(tmp_8_reg_518, exitcond_reg_522_pp0_iter1_reg, tmp_3_reg_556_pp0_iter1_reg)
    begin
                ap_condition_303 <= ((tmp_3_reg_556_pp0_iter1_reg = ap_const_lv1_1) and (tmp_8_reg_518 = ap_const_lv1_0) and (exitcond_reg_522_pp0_iter1_reg = ap_const_lv1_0));
    end process;


    ap_condition_pp0_exit_iter0_state4_assign_proc : process(exitcond_fu_343_p2)
    begin
        if ((exitcond_fu_343_p2 = ap_const_lv1_1)) then 
            ap_condition_pp0_exit_iter0_state4 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter0_state4 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_done_reg, exitcond1_fu_321_p2, ap_CS_fsm_state3)
    begin
        if (((exitcond1_fu_321_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;


    ap_enable_operation_106_assign_proc : process(tmp_3_reg_556_pp0_iter2_reg)
    begin
                ap_enable_operation_106 <= (tmp_3_reg_556_pp0_iter2_reg = ap_const_lv1_1);
    end process;


    ap_enable_operation_107_assign_proc : process(tmp_3_reg_556_pp0_iter2_reg)
    begin
                ap_enable_operation_107 <= (tmp_3_reg_556_pp0_iter2_reg = ap_const_lv1_1);
    end process;


    ap_enable_operation_108_assign_proc : process(tmp_3_reg_556_pp0_iter2_reg)
    begin
                ap_enable_operation_108 <= (tmp_3_reg_556_pp0_iter2_reg = ap_const_lv1_1);
    end process;


    ap_enable_operation_58_assign_proc : process(exitcond_fu_343_p2)
    begin
                ap_enable_operation_58 <= (exitcond_fu_343_p2 = ap_const_lv1_0);
    end process;


    ap_enable_operation_60_assign_proc : process(exitcond_fu_343_p2)
    begin
                ap_enable_operation_60 <= (exitcond_fu_343_p2 = ap_const_lv1_0);
    end process;


    ap_enable_operation_62_assign_proc : process(exitcond_fu_343_p2)
    begin
                ap_enable_operation_62 <= (exitcond_fu_343_p2 = ap_const_lv1_0);
    end process;


    ap_enable_operation_65_assign_proc : process(exitcond_reg_522)
    begin
                ap_enable_operation_65 <= (exitcond_reg_522 = ap_const_lv1_0);
    end process;


    ap_enable_operation_66_assign_proc : process(exitcond_reg_522)
    begin
                ap_enable_operation_66 <= (exitcond_reg_522 = ap_const_lv1_0);
    end process;


    ap_enable_operation_67_assign_proc : process(exitcond_reg_522)
    begin
                ap_enable_operation_67 <= (exitcond_reg_522 = ap_const_lv1_0);
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_enable_state4_pp0_iter0_stage0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0)
    begin
                ap_enable_state4_pp0_iter0_stage0 <= ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1));
    end process;


    ap_enable_state5_pp0_iter1_stage0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1)
    begin
                ap_enable_state5_pp0_iter1_stage0 <= ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0));
    end process;


    ap_enable_state7_pp0_iter3_stage0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter3)
    begin
                ap_enable_state7_pp0_iter3_stage0 <= ((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0));
    end process;


    ap_idle_assign_proc : process(real_start, ap_CS_fsm_state1)
    begin
        if (((real_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_phi_reg_pp0_iter0_storemerge1_reg_274 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    ap_phi_reg_pp0_iter0_storemerge2_reg_262 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    ap_phi_reg_pp0_iter0_storemerge_reg_286 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";

    ap_predicate_op100_write_state7_assign_proc : process(exitcond_reg_522_pp0_iter2_reg, tmp_3_reg_556_pp0_iter2_reg, tmp_8_reg_518)
    begin
                ap_predicate_op100_write_state7 <= ((tmp_8_reg_518 = ap_const_lv1_1) and (tmp_3_reg_556_pp0_iter2_reg = ap_const_lv1_1) and (exitcond_reg_522_pp0_iter2_reg = ap_const_lv1_0));
    end process;


    ap_predicate_op101_write_state7_assign_proc : process(exitcond_reg_522_pp0_iter2_reg, tmp_3_reg_556_pp0_iter2_reg, tmp_8_reg_518)
    begin
                ap_predicate_op101_write_state7 <= ((tmp_8_reg_518 = ap_const_lv1_1) and (tmp_3_reg_556_pp0_iter2_reg = ap_const_lv1_1) and (exitcond_reg_522_pp0_iter2_reg = ap_const_lv1_0));
    end process;


    ap_predicate_op99_write_state7_assign_proc : process(exitcond_reg_522_pp0_iter2_reg, tmp_3_reg_556_pp0_iter2_reg, tmp_8_reg_518)
    begin
                ap_predicate_op99_write_state7 <= ((tmp_8_reg_518 = ap_const_lv1_1) and (tmp_3_reg_556_pp0_iter2_reg = ap_const_lv1_1) and (exitcond_reg_522_pp0_iter2_reg = ap_const_lv1_0));
    end process;

    ap_ready <= internal_ap_ready;
    c_V_1_fu_349_p2 <= std_logic_vector(unsigned(ap_const_lv11_1) + unsigned(t_V_2_reg_251));
    c_V_fu_304_p2 <= std_logic_vector(unsigned(t_V_reg_229) + unsigned(ap_const_lv6_1));
    current_sum_val_0_1_fu_411_p2 <= std_logic_vector(unsigned(current_sum_val_0_2_fu_393_p3) + unsigned(tmp_20_reg_575));
    current_sum_val_0_2_fu_393_p3 <= 
        current_sum_val_0_reg_560 when (tmp_6_reg_531_pp0_iter1_reg(0) = '1') else 
        current_sum_val_0_3_fu_114;
    current_sum_val_1_1_fu_416_p2 <= std_logic_vector(unsigned(current_sum_val_1_2_fu_399_p3) + unsigned(tmp_21_reg_580));
    current_sum_val_1_2_fu_399_p3 <= 
        current_sum_val_1_reg_565 when (tmp_6_reg_531_pp0_iter1_reg(0) = '1') else 
        current_sum_val_1_3_fu_110;
    current_sum_val_2_1_fu_421_p2 <= std_logic_vector(unsigned(current_sum_val_2_2_fu_405_p3) + unsigned(tmp_19_reg_585));
    current_sum_val_2_2_fu_405_p3 <= 
        current_sum_val_2_reg_570 when (tmp_6_reg_531_pp0_iter1_reg(0) = '1') else 
        current_sum_val_2_3_fu_106;

    dst_data_stream_0_V_blk_n_assign_proc : process(dst_data_stream_0_V_full_n, ap_block_pp0_stage0, ap_enable_reg_pp0_iter3, exitcond_reg_522_pp0_iter2_reg, tmp_3_reg_556_pp0_iter2_reg, tmp_8_reg_518)
    begin
        if (((tmp_8_reg_518 = ap_const_lv1_1) and (tmp_3_reg_556_pp0_iter2_reg = ap_const_lv1_1) and (exitcond_reg_522_pp0_iter2_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            dst_data_stream_0_V_blk_n <= dst_data_stream_0_V_full_n;
        else 
            dst_data_stream_0_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

        dst_data_stream_0_V_din <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_7_fu_441_p4),32));


    dst_data_stream_0_V_write_assign_proc : process(ap_enable_reg_pp0_iter3, ap_predicate_op99_write_state7, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_predicate_op99_write_state7 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            dst_data_stream_0_V_write <= ap_const_logic_1;
        else 
            dst_data_stream_0_V_write <= ap_const_logic_0;
        end if; 
    end process;


    dst_data_stream_1_V_blk_n_assign_proc : process(dst_data_stream_1_V_full_n, ap_block_pp0_stage0, ap_enable_reg_pp0_iter3, exitcond_reg_522_pp0_iter2_reg, tmp_3_reg_556_pp0_iter2_reg, tmp_8_reg_518)
    begin
        if (((tmp_8_reg_518 = ap_const_lv1_1) and (tmp_3_reg_556_pp0_iter2_reg = ap_const_lv1_1) and (exitcond_reg_522_pp0_iter2_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            dst_data_stream_1_V_blk_n <= dst_data_stream_1_V_full_n;
        else 
            dst_data_stream_1_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

        dst_data_stream_1_V_din <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_11_fu_455_p4),32));


    dst_data_stream_1_V_write_assign_proc : process(ap_enable_reg_pp0_iter3, ap_predicate_op100_write_state7, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_predicate_op100_write_state7 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            dst_data_stream_1_V_write <= ap_const_logic_1;
        else 
            dst_data_stream_1_V_write <= ap_const_logic_0;
        end if; 
    end process;


    dst_data_stream_2_V_blk_n_assign_proc : process(dst_data_stream_2_V_full_n, ap_block_pp0_stage0, ap_enable_reg_pp0_iter3, exitcond_reg_522_pp0_iter2_reg, tmp_3_reg_556_pp0_iter2_reg, tmp_8_reg_518)
    begin
        if (((tmp_8_reg_518 = ap_const_lv1_1) and (tmp_3_reg_556_pp0_iter2_reg = ap_const_lv1_1) and (exitcond_reg_522_pp0_iter2_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            dst_data_stream_2_V_blk_n <= dst_data_stream_2_V_full_n;
        else 
            dst_data_stream_2_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

        dst_data_stream_2_V_din <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_13_fu_469_p4),32));


    dst_data_stream_2_V_write_assign_proc : process(ap_enable_reg_pp0_iter3, ap_predicate_op101_write_state7, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_predicate_op101_write_state7 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            dst_data_stream_2_V_write <= ap_const_logic_1;
        else 
            dst_data_stream_2_V_write <= ap_const_logic_0;
        end if; 
    end process;

    exitcond1_fu_321_p2 <= "1" when (t_V_1_reg_240 = ap_const_lv10_3C0) else "0";
    exitcond_fu_343_p2 <= "1" when (t_V_2_reg_251 = ap_const_lv11_780) else "0";

    internal_ap_ready_assign_proc : process(exitcond1_fu_321_p2, ap_CS_fsm_state3)
    begin
        if (((exitcond1_fu_321_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            internal_ap_ready <= ap_const_logic_1;
        else 
            internal_ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    r_V_2_fu_355_p4 <= t_V_2_reg_251(10 downto 5);
    r_V_fu_327_p2 <= std_logic_vector(unsigned(ap_const_lv10_1) + unsigned(t_V_1_reg_240));

    real_start_assign_proc : process(ap_start, start_full_n, start_once_reg)
    begin
        if (((start_once_reg = ap_const_logic_0) and (start_full_n = ap_const_logic_0))) then 
            real_start <= ap_const_logic_0;
        else 
            real_start <= ap_start;
        end if; 
    end process;


    src_data_stream_0_V_blk_n_assign_proc : process(src_data_stream_0_V_empty_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, exitcond_reg_522)
    begin
        if (((exitcond_reg_522 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            src_data_stream_0_V_blk_n <= src_data_stream_0_V_empty_n;
        else 
            src_data_stream_0_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    src_data_stream_0_V_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, exitcond_reg_522, ap_block_pp0_stage0_11001)
    begin
        if (((exitcond_reg_522 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            src_data_stream_0_V_read <= ap_const_logic_1;
        else 
            src_data_stream_0_V_read <= ap_const_logic_0;
        end if; 
    end process;


    src_data_stream_1_V_blk_n_assign_proc : process(src_data_stream_1_V_empty_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, exitcond_reg_522)
    begin
        if (((exitcond_reg_522 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            src_data_stream_1_V_blk_n <= src_data_stream_1_V_empty_n;
        else 
            src_data_stream_1_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    src_data_stream_1_V_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, exitcond_reg_522, ap_block_pp0_stage0_11001)
    begin
        if (((exitcond_reg_522 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            src_data_stream_1_V_read <= ap_const_logic_1;
        else 
            src_data_stream_1_V_read <= ap_const_logic_0;
        end if; 
    end process;


    src_data_stream_2_V_blk_n_assign_proc : process(src_data_stream_2_V_empty_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, exitcond_reg_522)
    begin
        if (((exitcond_reg_522 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            src_data_stream_2_V_blk_n <= src_data_stream_2_V_empty_n;
        else 
            src_data_stream_2_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    src_data_stream_2_V_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, exitcond_reg_522, ap_block_pp0_stage0_11001)
    begin
        if (((exitcond_reg_522 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            src_data_stream_2_V_read <= ap_const_logic_1;
        else 
            src_data_stream_2_V_read <= ap_const_logic_0;
        end if; 
    end process;

    start_out <= real_start;

    start_write_assign_proc : process(real_start, start_once_reg)
    begin
        if (((start_once_reg = ap_const_logic_0) and (real_start = ap_const_logic_1))) then 
            start_write <= ap_const_logic_1;
        else 
            start_write <= ap_const_logic_0;
        end if; 
    end process;


    sums_val_0_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_CS_fsm_state2, ap_enable_reg_pp0_iter0, tmp_5_fu_310_p1, tmp_9_fu_371_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            sums_val_0_address0 <= tmp_9_fu_371_p1(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            sums_val_0_address0 <= tmp_5_fu_310_p1(6 - 1 downto 0);
        else 
            sums_val_0_address0 <= "XXXXXX";
        end if; 
    end process;

    sums_val_0_address1 <= sums_val_0_addr_1_reg_538_pp0_iter2_reg;

    sums_val_0_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_state2, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            sums_val_0_ce0 <= ap_const_logic_1;
        else 
            sums_val_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    sums_val_0_ce1_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            sums_val_0_ce1 <= ap_const_logic_1;
        else 
            sums_val_0_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    sums_val_0_we0_assign_proc : process(ap_CS_fsm_state2, tmp_4_fu_298_p2)
    begin
        if (((tmp_4_fu_298_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            sums_val_0_we0 <= ap_const_logic_1;
        else 
            sums_val_0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    sums_val_0_we1_assign_proc : process(ap_enable_reg_pp0_iter3, tmp_3_reg_556_pp0_iter2_reg, ap_block_pp0_stage0_11001)
    begin
        if (((tmp_3_reg_556_pp0_iter2_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            sums_val_0_we1 <= ap_const_logic_1;
        else 
            sums_val_0_we1 <= ap_const_logic_0;
        end if; 
    end process;


    sums_val_1_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_CS_fsm_state2, ap_enable_reg_pp0_iter0, tmp_5_fu_310_p1, tmp_9_fu_371_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            sums_val_1_address0 <= tmp_9_fu_371_p1(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            sums_val_1_address0 <= tmp_5_fu_310_p1(6 - 1 downto 0);
        else 
            sums_val_1_address0 <= "XXXXXX";
        end if; 
    end process;

    sums_val_1_address1 <= sums_val_1_addr_1_reg_544_pp0_iter2_reg;

    sums_val_1_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_state2, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            sums_val_1_ce0 <= ap_const_logic_1;
        else 
            sums_val_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    sums_val_1_ce1_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            sums_val_1_ce1 <= ap_const_logic_1;
        else 
            sums_val_1_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    sums_val_1_we0_assign_proc : process(ap_CS_fsm_state2, tmp_4_fu_298_p2)
    begin
        if (((tmp_4_fu_298_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            sums_val_1_we0 <= ap_const_logic_1;
        else 
            sums_val_1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    sums_val_1_we1_assign_proc : process(ap_enable_reg_pp0_iter3, tmp_3_reg_556_pp0_iter2_reg, ap_block_pp0_stage0_11001)
    begin
        if (((tmp_3_reg_556_pp0_iter2_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            sums_val_1_we1 <= ap_const_logic_1;
        else 
            sums_val_1_we1 <= ap_const_logic_0;
        end if; 
    end process;


    sums_val_2_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_CS_fsm_state2, ap_enable_reg_pp0_iter0, tmp_5_fu_310_p1, tmp_9_fu_371_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            sums_val_2_address0 <= tmp_9_fu_371_p1(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            sums_val_2_address0 <= tmp_5_fu_310_p1(6 - 1 downto 0);
        else 
            sums_val_2_address0 <= "XXXXXX";
        end if; 
    end process;

    sums_val_2_address1 <= sums_val_2_addr_1_reg_550_pp0_iter2_reg;

    sums_val_2_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_state2, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            sums_val_2_ce0 <= ap_const_logic_1;
        else 
            sums_val_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    sums_val_2_ce1_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            sums_val_2_ce1 <= ap_const_logic_1;
        else 
            sums_val_2_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    sums_val_2_we0_assign_proc : process(ap_CS_fsm_state2, tmp_4_fu_298_p2)
    begin
        if (((tmp_4_fu_298_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            sums_val_2_we0 <= ap_const_logic_1;
        else 
            sums_val_2_we0 <= ap_const_logic_0;
        end if; 
    end process;


    sums_val_2_we1_assign_proc : process(ap_enable_reg_pp0_iter3, tmp_3_reg_556_pp0_iter2_reg, ap_block_pp0_stage0_11001)
    begin
        if (((tmp_3_reg_556_pp0_iter2_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            sums_val_2_we1 <= ap_const_logic_1;
        else 
            sums_val_2_we1 <= ap_const_logic_0;
        end if; 
    end process;

    tmp_11_fu_455_p4 <= current_sum_val_1_1_reg_596(31 downto 10);
    tmp_13_fu_469_p4 <= current_sum_val_2_1_reg_602(31 downto 10);
    tmp_16_fu_339_p1 <= t_V_2_reg_251(5 - 1 downto 0);
    tmp_3_fu_378_p2 <= "1" when (tmp_16_fu_339_p1 = ap_const_lv5_1F) else "0";
    tmp_4_fu_298_p2 <= "1" when (t_V_reg_229 = ap_const_lv6_3C) else "0";
    tmp_5_fu_310_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(t_V_reg_229),64));
    tmp_6_fu_365_p2 <= "1" when (tmp_16_fu_339_p1 = ap_const_lv5_0) else "0";
    tmp_7_fu_441_p4 <= current_sum_val_0_1_reg_590(31 downto 10);
    tmp_8_fu_333_p2 <= "1" when (tmp_fu_317_p1 = ap_const_lv5_1F) else "0";
    tmp_9_fu_371_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(r_V_2_fu_355_p4),64));
    tmp_fu_317_p1 <= t_V_1_reg_240(5 - 1 downto 0);
end behav;
