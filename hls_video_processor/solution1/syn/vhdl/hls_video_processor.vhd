-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2018.3
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity hls_video_processor is
port (
    stream_in_TDATA : IN STD_LOGIC_VECTOR (23 downto 0);
    stream_in_TKEEP : IN STD_LOGIC_VECTOR (2 downto 0);
    stream_in_TSTRB : IN STD_LOGIC_VECTOR (2 downto 0);
    stream_in_TUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    stream_in_TLAST : IN STD_LOGIC_VECTOR (0 downto 0);
    stream_in_TID : IN STD_LOGIC_VECTOR (0 downto 0);
    stream_in_TDEST : IN STD_LOGIC_VECTOR (0 downto 0);
    stream_out_TDATA : OUT STD_LOGIC_VECTOR (23 downto 0);
    stream_out_TKEEP : OUT STD_LOGIC_VECTOR (2 downto 0);
    stream_out_TSTRB : OUT STD_LOGIC_VECTOR (2 downto 0);
    stream_out_TUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    stream_out_TLAST : OUT STD_LOGIC_VECTOR (0 downto 0);
    stream_out_TID : OUT STD_LOGIC_VECTOR (0 downto 0);
    stream_out_TDEST : OUT STD_LOGIC_VECTOR (0 downto 0);
    brightness_V : IN STD_LOGIC_VECTOR (3 downto 0);
    color_correct_V : IN STD_LOGIC_VECTOR (0 downto 0);
    ap_clk : IN STD_LOGIC;
    ap_rst_n : IN STD_LOGIC;
    stream_in_TVALID : IN STD_LOGIC;
    stream_in_TREADY : OUT STD_LOGIC;
    stream_out_TVALID : OUT STD_LOGIC;
    stream_out_TREADY : IN STD_LOGIC );
end;


architecture behav of hls_video_processor is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "hls_video_processor,hls_ip_2018_3,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=1,HLS_INPUT_PART=xc7z020clg400-1,HLS_INPUT_CLOCK=6.600000,HLS_INPUT_ARCH=dataflow,HLS_SYN_CLOCK=5.775000,HLS_SYN_LAT=-1,HLS_SYN_TPT=-1,HLS_SYN_MEM=8,HLS_SYN_DSP=6,HLS_SYN_FF=2804,HLS_SYN_LUT=3537,HLS_VERSION=2018_3}";
    constant ap_const_lv24_0 : STD_LOGIC_VECTOR (23 downto 0) := "000000000000000000000000";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';

    signal ap_rst_n_inv : STD_LOGIC;
    signal Block_proc_U0_ap_start : STD_LOGIC;
    signal Block_proc_U0_ap_done : STD_LOGIC;
    signal Block_proc_U0_ap_continue : STD_LOGIC;
    signal Block_proc_U0_ap_idle : STD_LOGIC;
    signal Block_proc_U0_ap_ready : STD_LOGIC;
    signal Block_proc_U0_start_out : STD_LOGIC;
    signal Block_proc_U0_start_write : STD_LOGIC;
    signal Block_proc_U0_img_input_rows_V_out_din : STD_LOGIC_VECTOR (11 downto 0);
    signal Block_proc_U0_img_input_rows_V_out_write : STD_LOGIC;
    signal Block_proc_U0_img_input_rows_V_out1_din : STD_LOGIC_VECTOR (11 downto 0);
    signal Block_proc_U0_img_input_rows_V_out1_write : STD_LOGIC;
    signal Block_proc_U0_img_input_cols_V_out_din : STD_LOGIC_VECTOR (11 downto 0);
    signal Block_proc_U0_img_input_cols_V_out_write : STD_LOGIC;
    signal AXIvideo2Mat_U0_ap_start : STD_LOGIC;
    signal AXIvideo2Mat_U0_ap_done : STD_LOGIC;
    signal AXIvideo2Mat_U0_ap_continue : STD_LOGIC;
    signal AXIvideo2Mat_U0_ap_idle : STD_LOGIC;
    signal AXIvideo2Mat_U0_ap_ready : STD_LOGIC;
    signal AXIvideo2Mat_U0_stream_in_TREADY : STD_LOGIC;
    signal AXIvideo2Mat_U0_img_rows_V_read : STD_LOGIC;
    signal AXIvideo2Mat_U0_img_cols_V_read : STD_LOGIC;
    signal AXIvideo2Mat_U0_img_data_stream_0_V_din : STD_LOGIC_VECTOR (7 downto 0);
    signal AXIvideo2Mat_U0_img_data_stream_0_V_write : STD_LOGIC;
    signal AXIvideo2Mat_U0_img_data_stream_1_V_din : STD_LOGIC_VECTOR (7 downto 0);
    signal AXIvideo2Mat_U0_img_data_stream_1_V_write : STD_LOGIC;
    signal AXIvideo2Mat_U0_img_data_stream_2_V_din : STD_LOGIC_VECTOR (7 downto 0);
    signal AXIvideo2Mat_U0_img_data_stream_2_V_write : STD_LOGIC;
    signal AXIvideo2Mat_U0_img_cols_V_out_din : STD_LOGIC_VECTOR (11 downto 0);
    signal AXIvideo2Mat_U0_img_cols_V_out_write : STD_LOGIC;
    signal Block_proc55_U0_ap_start : STD_LOGIC;
    signal Block_proc55_U0_ap_done : STD_LOGIC;
    signal Block_proc55_U0_ap_continue : STD_LOGIC;
    signal Block_proc55_U0_ap_idle : STD_LOGIC;
    signal Block_proc55_U0_ap_ready : STD_LOGIC;
    signal Block_proc55_U0_img_input_rows_V_read : STD_LOGIC;
    signal Block_proc55_U0_ap_return : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_channel_done_extLd_loc_channel : STD_LOGIC;
    signal extLd_loc_channel_full_n : STD_LOGIC;
    signal Loop_loop_height_pro_2_U0_ap_start : STD_LOGIC;
    signal Loop_loop_height_pro_2_U0_ap_done : STD_LOGIC;
    signal Loop_loop_height_pro_2_U0_ap_continue : STD_LOGIC;
    signal Loop_loop_height_pro_2_U0_ap_idle : STD_LOGIC;
    signal Loop_loop_height_pro_2_U0_ap_ready : STD_LOGIC;
    signal Loop_loop_height_pro_2_U0_start_out : STD_LOGIC;
    signal Loop_loop_height_pro_2_U0_start_write : STD_LOGIC;
    signal Loop_loop_height_pro_2_U0_img_input_cols_V_c20_read : STD_LOGIC;
    signal Loop_loop_height_pro_2_U0_img_input_data_strea_read : STD_LOGIC;
    signal Loop_loop_height_pro_2_U0_img_input_data_strea_1_read : STD_LOGIC;
    signal Loop_loop_height_pro_2_U0_img_input_data_strea_2_read : STD_LOGIC;
    signal Loop_loop_height_pro_2_U0_img_crop_data_stream_din : STD_LOGIC_VECTOR (7 downto 0);
    signal Loop_loop_height_pro_2_U0_img_crop_data_stream_write : STD_LOGIC;
    signal Loop_loop_height_pro_2_U0_img_crop_data_stream_1_din : STD_LOGIC_VECTOR (7 downto 0);
    signal Loop_loop_height_pro_2_U0_img_crop_data_stream_1_write : STD_LOGIC;
    signal Loop_loop_height_pro_2_U0_img_crop_data_stream_2_din : STD_LOGIC_VECTOR (7 downto 0);
    signal Loop_loop_height_pro_2_U0_img_crop_data_stream_2_write : STD_LOGIC;
    signal Loop_loop_height_pro_1_U0_ap_start : STD_LOGIC;
    signal Loop_loop_height_pro_1_U0_ap_done : STD_LOGIC;
    signal Loop_loop_height_pro_1_U0_ap_continue : STD_LOGIC;
    signal Loop_loop_height_pro_1_U0_ap_idle : STD_LOGIC;
    signal Loop_loop_height_pro_1_U0_ap_ready : STD_LOGIC;
    signal Loop_loop_height_pro_1_U0_start_out : STD_LOGIC;
    signal Loop_loop_height_pro_1_U0_start_write : STD_LOGIC;
    signal Loop_loop_height_pro_1_U0_img_crop_data_stream_0_V_read : STD_LOGIC;
    signal Loop_loop_height_pro_1_U0_img_crop_data_stream_1_V_read : STD_LOGIC;
    signal Loop_loop_height_pro_1_U0_img_crop_data_stream_2_V_read : STD_LOGIC;
    signal Loop_loop_height_pro_1_U0_img_nogamma_data_stream_0_V_din : STD_LOGIC_VECTOR (31 downto 0);
    signal Loop_loop_height_pro_1_U0_img_nogamma_data_stream_0_V_write : STD_LOGIC;
    signal Loop_loop_height_pro_1_U0_img_nogamma_data_stream_1_V_din : STD_LOGIC_VECTOR (31 downto 0);
    signal Loop_loop_height_pro_1_U0_img_nogamma_data_stream_1_V_write : STD_LOGIC;
    signal Loop_loop_height_pro_1_U0_img_nogamma_data_stream_2_V_din : STD_LOGIC_VECTOR (31 downto 0);
    signal Loop_loop_height_pro_1_U0_img_nogamma_data_stream_2_V_write : STD_LOGIC;
    signal video_scale_U0_ap_start : STD_LOGIC;
    signal video_scale_U0_ap_done : STD_LOGIC;
    signal video_scale_U0_ap_continue : STD_LOGIC;
    signal video_scale_U0_ap_idle : STD_LOGIC;
    signal video_scale_U0_ap_ready : STD_LOGIC;
    signal video_scale_U0_start_out : STD_LOGIC;
    signal video_scale_U0_start_write : STD_LOGIC;
    signal video_scale_U0_src_data_stream_0_V_read : STD_LOGIC;
    signal video_scale_U0_src_data_stream_1_V_read : STD_LOGIC;
    signal video_scale_U0_src_data_stream_2_V_read : STD_LOGIC;
    signal video_scale_U0_dst_data_stream_0_V_din : STD_LOGIC_VECTOR (31 downto 0);
    signal video_scale_U0_dst_data_stream_0_V_write : STD_LOGIC;
    signal video_scale_U0_dst_data_stream_1_V_din : STD_LOGIC_VECTOR (31 downto 0);
    signal video_scale_U0_dst_data_stream_1_V_write : STD_LOGIC;
    signal video_scale_U0_dst_data_stream_2_V_din : STD_LOGIC_VECTOR (31 downto 0);
    signal video_scale_U0_dst_data_stream_2_V_write : STD_LOGIC;
    signal brightness_color_adj_U0_ap_start : STD_LOGIC;
    signal brightness_color_adj_U0_ap_done : STD_LOGIC;
    signal brightness_color_adj_U0_ap_continue : STD_LOGIC;
    signal brightness_color_adj_U0_ap_idle : STD_LOGIC;
    signal brightness_color_adj_U0_ap_ready : STD_LOGIC;
    signal brightness_color_adj_U0_start_out : STD_LOGIC;
    signal brightness_color_adj_U0_start_write : STD_LOGIC;
    signal brightness_color_adj_U0_src_data_stream_0_V_read : STD_LOGIC;
    signal brightness_color_adj_U0_src_data_stream_1_V_read : STD_LOGIC;
    signal brightness_color_adj_U0_src_data_stream_2_V_read : STD_LOGIC;
    signal brightness_color_adj_U0_dst_data_stream_0_V_din : STD_LOGIC_VECTOR (31 downto 0);
    signal brightness_color_adj_U0_dst_data_stream_0_V_write : STD_LOGIC;
    signal brightness_color_adj_U0_dst_data_stream_1_V_din : STD_LOGIC_VECTOR (31 downto 0);
    signal brightness_color_adj_U0_dst_data_stream_1_V_write : STD_LOGIC;
    signal brightness_color_adj_U0_dst_data_stream_2_V_din : STD_LOGIC_VECTOR (31 downto 0);
    signal brightness_color_adj_U0_dst_data_stream_2_V_write : STD_LOGIC;
    signal Loop_loop_height_pro_U0_ap_start : STD_LOGIC;
    signal Loop_loop_height_pro_U0_ap_done : STD_LOGIC;
    signal Loop_loop_height_pro_U0_ap_continue : STD_LOGIC;
    signal Loop_loop_height_pro_U0_ap_idle : STD_LOGIC;
    signal Loop_loop_height_pro_U0_ap_ready : STD_LOGIC;
    signal Loop_loop_height_pro_U0_start_out : STD_LOGIC;
    signal Loop_loop_height_pro_U0_start_write : STD_LOGIC;
    signal Loop_loop_height_pro_U0_img_adjusted_data_stream_0_V_read : STD_LOGIC;
    signal Loop_loop_height_pro_U0_img_adjusted_data_stream_1_V_read : STD_LOGIC;
    signal Loop_loop_height_pro_U0_img_adjusted_data_stream_2_V_read : STD_LOGIC;
    signal Loop_loop_height_pro_U0_img_out_data_stream_0_V_din : STD_LOGIC_VECTOR (7 downto 0);
    signal Loop_loop_height_pro_U0_img_out_data_stream_0_V_write : STD_LOGIC;
    signal Loop_loop_height_pro_U0_img_out_data_stream_1_V_din : STD_LOGIC_VECTOR (7 downto 0);
    signal Loop_loop_height_pro_U0_img_out_data_stream_1_V_write : STD_LOGIC;
    signal Loop_loop_height_pro_U0_img_out_data_stream_2_V_din : STD_LOGIC_VECTOR (7 downto 0);
    signal Loop_loop_height_pro_U0_img_out_data_stream_2_V_write : STD_LOGIC;
    signal Mat2AXIvideo_U0_ap_start : STD_LOGIC;
    signal Mat2AXIvideo_U0_ap_done : STD_LOGIC;
    signal Mat2AXIvideo_U0_ap_continue : STD_LOGIC;
    signal Mat2AXIvideo_U0_ap_idle : STD_LOGIC;
    signal Mat2AXIvideo_U0_ap_ready : STD_LOGIC;
    signal Mat2AXIvideo_U0_img_data_stream_0_V_read : STD_LOGIC;
    signal Mat2AXIvideo_U0_img_data_stream_1_V_read : STD_LOGIC;
    signal Mat2AXIvideo_U0_img_data_stream_2_V_read : STD_LOGIC;
    signal Mat2AXIvideo_U0_stream_out_TDATA : STD_LOGIC_VECTOR (23 downto 0);
    signal Mat2AXIvideo_U0_stream_out_TVALID : STD_LOGIC;
    signal Mat2AXIvideo_U0_stream_out_TKEEP : STD_LOGIC_VECTOR (2 downto 0);
    signal Mat2AXIvideo_U0_stream_out_TSTRB : STD_LOGIC_VECTOR (2 downto 0);
    signal Mat2AXIvideo_U0_stream_out_TUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal Mat2AXIvideo_U0_stream_out_TLAST : STD_LOGIC_VECTOR (0 downto 0);
    signal Mat2AXIvideo_U0_stream_out_TID : STD_LOGIC_VECTOR (0 downto 0);
    signal Mat2AXIvideo_U0_stream_out_TDEST : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sync_continue : STD_LOGIC;
    signal img_input_rows_V_c_full_n : STD_LOGIC;
    signal img_input_rows_V_c_dout : STD_LOGIC_VECTOR (11 downto 0);
    signal img_input_rows_V_c_empty_n : STD_LOGIC;
    signal img_input_rows_V_c20_full_n : STD_LOGIC;
    signal img_input_rows_V_c20_dout : STD_LOGIC_VECTOR (11 downto 0);
    signal img_input_rows_V_c20_empty_n : STD_LOGIC;
    signal img_input_cols_V_c_full_n : STD_LOGIC;
    signal img_input_cols_V_c_dout : STD_LOGIC_VECTOR (11 downto 0);
    signal img_input_cols_V_c_empty_n : STD_LOGIC;
    signal img_input_data_strea_full_n : STD_LOGIC;
    signal img_input_data_strea_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal img_input_data_strea_empty_n : STD_LOGIC;
    signal img_input_data_strea_1_full_n : STD_LOGIC;
    signal img_input_data_strea_1_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal img_input_data_strea_1_empty_n : STD_LOGIC;
    signal img_input_data_strea_2_full_n : STD_LOGIC;
    signal img_input_data_strea_2_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal img_input_data_strea_2_empty_n : STD_LOGIC;
    signal img_input_cols_V_c20_full_n : STD_LOGIC;
    signal img_input_cols_V_c20_dout : STD_LOGIC_VECTOR (11 downto 0);
    signal img_input_cols_V_c20_empty_n : STD_LOGIC;
    signal extLd_loc_channel_dout : STD_LOGIC_VECTOR (11 downto 0);
    signal extLd_loc_channel_empty_n : STD_LOGIC;
    signal img_crop_data_stream_full_n : STD_LOGIC;
    signal img_crop_data_stream_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal img_crop_data_stream_empty_n : STD_LOGIC;
    signal img_crop_data_stream_1_full_n : STD_LOGIC;
    signal img_crop_data_stream_1_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal img_crop_data_stream_1_empty_n : STD_LOGIC;
    signal img_crop_data_stream_2_full_n : STD_LOGIC;
    signal img_crop_data_stream_2_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal img_crop_data_stream_2_empty_n : STD_LOGIC;
    signal img_nogamma_data_str_full_n : STD_LOGIC;
    signal img_nogamma_data_str_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal img_nogamma_data_str_empty_n : STD_LOGIC;
    signal img_nogamma_data_str_1_full_n : STD_LOGIC;
    signal img_nogamma_data_str_1_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal img_nogamma_data_str_1_empty_n : STD_LOGIC;
    signal img_nogamma_data_str_2_full_n : STD_LOGIC;
    signal img_nogamma_data_str_2_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal img_nogamma_data_str_2_empty_n : STD_LOGIC;
    signal img_scaled_data_stre_full_n : STD_LOGIC;
    signal img_scaled_data_stre_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal img_scaled_data_stre_empty_n : STD_LOGIC;
    signal img_scaled_data_stre_1_full_n : STD_LOGIC;
    signal img_scaled_data_stre_1_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal img_scaled_data_stre_1_empty_n : STD_LOGIC;
    signal img_scaled_data_stre_2_full_n : STD_LOGIC;
    signal img_scaled_data_stre_2_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal img_scaled_data_stre_2_empty_n : STD_LOGIC;
    signal img_adjusted_data_st_full_n : STD_LOGIC;
    signal img_adjusted_data_st_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal img_adjusted_data_st_empty_n : STD_LOGIC;
    signal img_adjusted_data_st_1_full_n : STD_LOGIC;
    signal img_adjusted_data_st_1_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal img_adjusted_data_st_1_empty_n : STD_LOGIC;
    signal img_adjusted_data_st_2_full_n : STD_LOGIC;
    signal img_adjusted_data_st_2_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal img_adjusted_data_st_2_empty_n : STD_LOGIC;
    signal img_out_data_stream_s_full_n : STD_LOGIC;
    signal img_out_data_stream_s_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal img_out_data_stream_s_empty_n : STD_LOGIC;
    signal img_out_data_stream_1_full_n : STD_LOGIC;
    signal img_out_data_stream_1_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal img_out_data_stream_1_empty_n : STD_LOGIC;
    signal img_out_data_stream_2_full_n : STD_LOGIC;
    signal img_out_data_stream_2_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal img_out_data_stream_2_empty_n : STD_LOGIC;
    signal start_for_Block_proc55_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_Block_proc55_U0_full_n : STD_LOGIC;
    signal start_for_Block_proc55_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_Block_proc55_U0_empty_n : STD_LOGIC;
    signal AXIvideo2Mat_U0_start_full_n : STD_LOGIC;
    signal AXIvideo2Mat_U0_start_write : STD_LOGIC;
    signal Block_proc55_U0_start_full_n : STD_LOGIC;
    signal Block_proc55_U0_start_write : STD_LOGIC;
    signal start_for_Loop_loop_height_pro_1_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_Loop_loop_height_pro_1_U0_full_n : STD_LOGIC;
    signal start_for_Loop_loop_height_pro_1_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_Loop_loop_height_pro_1_U0_empty_n : STD_LOGIC;
    signal start_for_video_scale_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_video_scale_U0_full_n : STD_LOGIC;
    signal start_for_video_scale_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_video_scale_U0_empty_n : STD_LOGIC;
    signal start_for_brightness_color_adj_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_brightness_color_adj_U0_full_n : STD_LOGIC;
    signal start_for_brightness_color_adj_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_brightness_color_adj_U0_empty_n : STD_LOGIC;
    signal start_for_Loop_loop_height_pro_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_Loop_loop_height_pro_U0_full_n : STD_LOGIC;
    signal start_for_Loop_loop_height_pro_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_Loop_loop_height_pro_U0_empty_n : STD_LOGIC;
    signal start_for_Mat2AXIvideo_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_Mat2AXIvideo_U0_full_n : STD_LOGIC;
    signal start_for_Mat2AXIvideo_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_Mat2AXIvideo_U0_empty_n : STD_LOGIC;
    signal Mat2AXIvideo_U0_start_full_n : STD_LOGIC;
    signal Mat2AXIvideo_U0_start_write : STD_LOGIC;

    component Block_proc IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        start_full_n : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        start_out : OUT STD_LOGIC;
        start_write : OUT STD_LOGIC;
        img_input_rows_V_out_din : OUT STD_LOGIC_VECTOR (11 downto 0);
        img_input_rows_V_out_full_n : IN STD_LOGIC;
        img_input_rows_V_out_write : OUT STD_LOGIC;
        img_input_rows_V_out1_din : OUT STD_LOGIC_VECTOR (11 downto 0);
        img_input_rows_V_out1_full_n : IN STD_LOGIC;
        img_input_rows_V_out1_write : OUT STD_LOGIC;
        img_input_cols_V_out_din : OUT STD_LOGIC_VECTOR (11 downto 0);
        img_input_cols_V_out_full_n : IN STD_LOGIC;
        img_input_cols_V_out_write : OUT STD_LOGIC );
    end component;


    component AXIvideo2Mat IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        stream_in_TDATA : IN STD_LOGIC_VECTOR (23 downto 0);
        stream_in_TVALID : IN STD_LOGIC;
        stream_in_TREADY : OUT STD_LOGIC;
        stream_in_TKEEP : IN STD_LOGIC_VECTOR (2 downto 0);
        stream_in_TSTRB : IN STD_LOGIC_VECTOR (2 downto 0);
        stream_in_TUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        stream_in_TLAST : IN STD_LOGIC_VECTOR (0 downto 0);
        stream_in_TID : IN STD_LOGIC_VECTOR (0 downto 0);
        stream_in_TDEST : IN STD_LOGIC_VECTOR (0 downto 0);
        img_rows_V_dout : IN STD_LOGIC_VECTOR (11 downto 0);
        img_rows_V_empty_n : IN STD_LOGIC;
        img_rows_V_read : OUT STD_LOGIC;
        img_cols_V_dout : IN STD_LOGIC_VECTOR (11 downto 0);
        img_cols_V_empty_n : IN STD_LOGIC;
        img_cols_V_read : OUT STD_LOGIC;
        img_data_stream_0_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
        img_data_stream_0_V_full_n : IN STD_LOGIC;
        img_data_stream_0_V_write : OUT STD_LOGIC;
        img_data_stream_1_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
        img_data_stream_1_V_full_n : IN STD_LOGIC;
        img_data_stream_1_V_write : OUT STD_LOGIC;
        img_data_stream_2_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
        img_data_stream_2_V_full_n : IN STD_LOGIC;
        img_data_stream_2_V_write : OUT STD_LOGIC;
        img_cols_V_out_din : OUT STD_LOGIC_VECTOR (11 downto 0);
        img_cols_V_out_full_n : IN STD_LOGIC;
        img_cols_V_out_write : OUT STD_LOGIC );
    end component;


    component Block_proc55 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        img_input_rows_V_dout : IN STD_LOGIC_VECTOR (11 downto 0);
        img_input_rows_V_empty_n : IN STD_LOGIC;
        img_input_rows_V_read : OUT STD_LOGIC;
        ap_return : OUT STD_LOGIC_VECTOR (11 downto 0) );
    end component;


    component Loop_loop_height_pro_2 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        start_full_n : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        start_out : OUT STD_LOGIC;
        start_write : OUT STD_LOGIC;
        img_input_cols_V_c20_dout : IN STD_LOGIC_VECTOR (11 downto 0);
        img_input_cols_V_c20_empty_n : IN STD_LOGIC;
        img_input_cols_V_c20_read : OUT STD_LOGIC;
        extLd_loc_channel : IN STD_LOGIC_VECTOR (11 downto 0);
        img_input_data_strea_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        img_input_data_strea_empty_n : IN STD_LOGIC;
        img_input_data_strea_read : OUT STD_LOGIC;
        img_input_data_strea_1_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        img_input_data_strea_1_empty_n : IN STD_LOGIC;
        img_input_data_strea_1_read : OUT STD_LOGIC;
        img_input_data_strea_2_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        img_input_data_strea_2_empty_n : IN STD_LOGIC;
        img_input_data_strea_2_read : OUT STD_LOGIC;
        img_crop_data_stream_din : OUT STD_LOGIC_VECTOR (7 downto 0);
        img_crop_data_stream_full_n : IN STD_LOGIC;
        img_crop_data_stream_write : OUT STD_LOGIC;
        img_crop_data_stream_1_din : OUT STD_LOGIC_VECTOR (7 downto 0);
        img_crop_data_stream_1_full_n : IN STD_LOGIC;
        img_crop_data_stream_1_write : OUT STD_LOGIC;
        img_crop_data_stream_2_din : OUT STD_LOGIC_VECTOR (7 downto 0);
        img_crop_data_stream_2_full_n : IN STD_LOGIC;
        img_crop_data_stream_2_write : OUT STD_LOGIC );
    end component;


    component Loop_loop_height_pro_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        start_full_n : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        start_out : OUT STD_LOGIC;
        start_write : OUT STD_LOGIC;
        img_crop_data_stream_0_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        img_crop_data_stream_0_V_empty_n : IN STD_LOGIC;
        img_crop_data_stream_0_V_read : OUT STD_LOGIC;
        img_crop_data_stream_1_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        img_crop_data_stream_1_V_empty_n : IN STD_LOGIC;
        img_crop_data_stream_1_V_read : OUT STD_LOGIC;
        img_crop_data_stream_2_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        img_crop_data_stream_2_V_empty_n : IN STD_LOGIC;
        img_crop_data_stream_2_V_read : OUT STD_LOGIC;
        img_nogamma_data_stream_0_V_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        img_nogamma_data_stream_0_V_full_n : IN STD_LOGIC;
        img_nogamma_data_stream_0_V_write : OUT STD_LOGIC;
        img_nogamma_data_stream_1_V_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        img_nogamma_data_stream_1_V_full_n : IN STD_LOGIC;
        img_nogamma_data_stream_1_V_write : OUT STD_LOGIC;
        img_nogamma_data_stream_2_V_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        img_nogamma_data_stream_2_V_full_n : IN STD_LOGIC;
        img_nogamma_data_stream_2_V_write : OUT STD_LOGIC );
    end component;


    component video_scale IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        start_full_n : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        start_out : OUT STD_LOGIC;
        start_write : OUT STD_LOGIC;
        src_data_stream_0_V_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        src_data_stream_0_V_empty_n : IN STD_LOGIC;
        src_data_stream_0_V_read : OUT STD_LOGIC;
        src_data_stream_1_V_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        src_data_stream_1_V_empty_n : IN STD_LOGIC;
        src_data_stream_1_V_read : OUT STD_LOGIC;
        src_data_stream_2_V_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        src_data_stream_2_V_empty_n : IN STD_LOGIC;
        src_data_stream_2_V_read : OUT STD_LOGIC;
        dst_data_stream_0_V_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        dst_data_stream_0_V_full_n : IN STD_LOGIC;
        dst_data_stream_0_V_write : OUT STD_LOGIC;
        dst_data_stream_1_V_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        dst_data_stream_1_V_full_n : IN STD_LOGIC;
        dst_data_stream_1_V_write : OUT STD_LOGIC;
        dst_data_stream_2_V_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        dst_data_stream_2_V_full_n : IN STD_LOGIC;
        dst_data_stream_2_V_write : OUT STD_LOGIC );
    end component;


    component brightness_color_adj IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        start_full_n : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        start_out : OUT STD_LOGIC;
        start_write : OUT STD_LOGIC;
        src_data_stream_0_V_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        src_data_stream_0_V_empty_n : IN STD_LOGIC;
        src_data_stream_0_V_read : OUT STD_LOGIC;
        src_data_stream_1_V_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        src_data_stream_1_V_empty_n : IN STD_LOGIC;
        src_data_stream_1_V_read : OUT STD_LOGIC;
        src_data_stream_2_V_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        src_data_stream_2_V_empty_n : IN STD_LOGIC;
        src_data_stream_2_V_read : OUT STD_LOGIC;
        dst_data_stream_0_V_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        dst_data_stream_0_V_full_n : IN STD_LOGIC;
        dst_data_stream_0_V_write : OUT STD_LOGIC;
        dst_data_stream_1_V_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        dst_data_stream_1_V_full_n : IN STD_LOGIC;
        dst_data_stream_1_V_write : OUT STD_LOGIC;
        dst_data_stream_2_V_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        dst_data_stream_2_V_full_n : IN STD_LOGIC;
        dst_data_stream_2_V_write : OUT STD_LOGIC;
        brightness_index_V : IN STD_LOGIC_VECTOR (3 downto 0);
        color_correct_V : IN STD_LOGIC_VECTOR (0 downto 0) );
    end component;


    component Loop_loop_height_pro IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        start_full_n : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        start_out : OUT STD_LOGIC;
        start_write : OUT STD_LOGIC;
        img_adjusted_data_stream_0_V_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        img_adjusted_data_stream_0_V_empty_n : IN STD_LOGIC;
        img_adjusted_data_stream_0_V_read : OUT STD_LOGIC;
        img_adjusted_data_stream_1_V_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        img_adjusted_data_stream_1_V_empty_n : IN STD_LOGIC;
        img_adjusted_data_stream_1_V_read : OUT STD_LOGIC;
        img_adjusted_data_stream_2_V_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        img_adjusted_data_stream_2_V_empty_n : IN STD_LOGIC;
        img_adjusted_data_stream_2_V_read : OUT STD_LOGIC;
        img_out_data_stream_0_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
        img_out_data_stream_0_V_full_n : IN STD_LOGIC;
        img_out_data_stream_0_V_write : OUT STD_LOGIC;
        img_out_data_stream_1_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
        img_out_data_stream_1_V_full_n : IN STD_LOGIC;
        img_out_data_stream_1_V_write : OUT STD_LOGIC;
        img_out_data_stream_2_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
        img_out_data_stream_2_V_full_n : IN STD_LOGIC;
        img_out_data_stream_2_V_write : OUT STD_LOGIC );
    end component;


    component Mat2AXIvideo IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        img_data_stream_0_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        img_data_stream_0_V_empty_n : IN STD_LOGIC;
        img_data_stream_0_V_read : OUT STD_LOGIC;
        img_data_stream_1_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        img_data_stream_1_V_empty_n : IN STD_LOGIC;
        img_data_stream_1_V_read : OUT STD_LOGIC;
        img_data_stream_2_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        img_data_stream_2_V_empty_n : IN STD_LOGIC;
        img_data_stream_2_V_read : OUT STD_LOGIC;
        stream_out_TDATA : OUT STD_LOGIC_VECTOR (23 downto 0);
        stream_out_TVALID : OUT STD_LOGIC;
        stream_out_TREADY : IN STD_LOGIC;
        stream_out_TKEEP : OUT STD_LOGIC_VECTOR (2 downto 0);
        stream_out_TSTRB : OUT STD_LOGIC_VECTOR (2 downto 0);
        stream_out_TUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        stream_out_TLAST : OUT STD_LOGIC_VECTOR (0 downto 0);
        stream_out_TID : OUT STD_LOGIC_VECTOR (0 downto 0);
        stream_out_TDEST : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;


    component fifo_w12_d2_A IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (11 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (11 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component fifo_w8_d2_A IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (7 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (7 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component fifo_w32_d2_A IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (31 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (31 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component start_for_Block_pjbC IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component start_for_Loop_lokbM IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component start_for_video_slbW IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component start_for_brightnmb6 IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component start_for_Loop_loncg IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component start_for_Mat2AXIocq IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;



begin
    Block_proc_U0 : component Block_proc
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => Block_proc_U0_ap_start,
        start_full_n => start_for_Block_proc55_U0_full_n,
        ap_done => Block_proc_U0_ap_done,
        ap_continue => Block_proc_U0_ap_continue,
        ap_idle => Block_proc_U0_ap_idle,
        ap_ready => Block_proc_U0_ap_ready,
        start_out => Block_proc_U0_start_out,
        start_write => Block_proc_U0_start_write,
        img_input_rows_V_out_din => Block_proc_U0_img_input_rows_V_out_din,
        img_input_rows_V_out_full_n => img_input_rows_V_c_full_n,
        img_input_rows_V_out_write => Block_proc_U0_img_input_rows_V_out_write,
        img_input_rows_V_out1_din => Block_proc_U0_img_input_rows_V_out1_din,
        img_input_rows_V_out1_full_n => img_input_rows_V_c20_full_n,
        img_input_rows_V_out1_write => Block_proc_U0_img_input_rows_V_out1_write,
        img_input_cols_V_out_din => Block_proc_U0_img_input_cols_V_out_din,
        img_input_cols_V_out_full_n => img_input_cols_V_c_full_n,
        img_input_cols_V_out_write => Block_proc_U0_img_input_cols_V_out_write);

    AXIvideo2Mat_U0 : component AXIvideo2Mat
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => AXIvideo2Mat_U0_ap_start,
        ap_done => AXIvideo2Mat_U0_ap_done,
        ap_continue => AXIvideo2Mat_U0_ap_continue,
        ap_idle => AXIvideo2Mat_U0_ap_idle,
        ap_ready => AXIvideo2Mat_U0_ap_ready,
        stream_in_TDATA => stream_in_TDATA,
        stream_in_TVALID => stream_in_TVALID,
        stream_in_TREADY => AXIvideo2Mat_U0_stream_in_TREADY,
        stream_in_TKEEP => stream_in_TKEEP,
        stream_in_TSTRB => stream_in_TSTRB,
        stream_in_TUSER => stream_in_TUSER,
        stream_in_TLAST => stream_in_TLAST,
        stream_in_TID => stream_in_TID,
        stream_in_TDEST => stream_in_TDEST,
        img_rows_V_dout => img_input_rows_V_c_dout,
        img_rows_V_empty_n => img_input_rows_V_c_empty_n,
        img_rows_V_read => AXIvideo2Mat_U0_img_rows_V_read,
        img_cols_V_dout => img_input_cols_V_c_dout,
        img_cols_V_empty_n => img_input_cols_V_c_empty_n,
        img_cols_V_read => AXIvideo2Mat_U0_img_cols_V_read,
        img_data_stream_0_V_din => AXIvideo2Mat_U0_img_data_stream_0_V_din,
        img_data_stream_0_V_full_n => img_input_data_strea_full_n,
        img_data_stream_0_V_write => AXIvideo2Mat_U0_img_data_stream_0_V_write,
        img_data_stream_1_V_din => AXIvideo2Mat_U0_img_data_stream_1_V_din,
        img_data_stream_1_V_full_n => img_input_data_strea_1_full_n,
        img_data_stream_1_V_write => AXIvideo2Mat_U0_img_data_stream_1_V_write,
        img_data_stream_2_V_din => AXIvideo2Mat_U0_img_data_stream_2_V_din,
        img_data_stream_2_V_full_n => img_input_data_strea_2_full_n,
        img_data_stream_2_V_write => AXIvideo2Mat_U0_img_data_stream_2_V_write,
        img_cols_V_out_din => AXIvideo2Mat_U0_img_cols_V_out_din,
        img_cols_V_out_full_n => img_input_cols_V_c20_full_n,
        img_cols_V_out_write => AXIvideo2Mat_U0_img_cols_V_out_write);

    Block_proc55_U0 : component Block_proc55
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => Block_proc55_U0_ap_start,
        ap_done => Block_proc55_U0_ap_done,
        ap_continue => Block_proc55_U0_ap_continue,
        ap_idle => Block_proc55_U0_ap_idle,
        ap_ready => Block_proc55_U0_ap_ready,
        img_input_rows_V_dout => img_input_rows_V_c20_dout,
        img_input_rows_V_empty_n => img_input_rows_V_c20_empty_n,
        img_input_rows_V_read => Block_proc55_U0_img_input_rows_V_read,
        ap_return => Block_proc55_U0_ap_return);

    Loop_loop_height_pro_2_U0 : component Loop_loop_height_pro_2
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => Loop_loop_height_pro_2_U0_ap_start,
        start_full_n => start_for_Loop_loop_height_pro_1_U0_full_n,
        ap_done => Loop_loop_height_pro_2_U0_ap_done,
        ap_continue => Loop_loop_height_pro_2_U0_ap_continue,
        ap_idle => Loop_loop_height_pro_2_U0_ap_idle,
        ap_ready => Loop_loop_height_pro_2_U0_ap_ready,
        start_out => Loop_loop_height_pro_2_U0_start_out,
        start_write => Loop_loop_height_pro_2_U0_start_write,
        img_input_cols_V_c20_dout => img_input_cols_V_c20_dout,
        img_input_cols_V_c20_empty_n => img_input_cols_V_c20_empty_n,
        img_input_cols_V_c20_read => Loop_loop_height_pro_2_U0_img_input_cols_V_c20_read,
        extLd_loc_channel => extLd_loc_channel_dout,
        img_input_data_strea_dout => img_input_data_strea_dout,
        img_input_data_strea_empty_n => img_input_data_strea_empty_n,
        img_input_data_strea_read => Loop_loop_height_pro_2_U0_img_input_data_strea_read,
        img_input_data_strea_1_dout => img_input_data_strea_1_dout,
        img_input_data_strea_1_empty_n => img_input_data_strea_1_empty_n,
        img_input_data_strea_1_read => Loop_loop_height_pro_2_U0_img_input_data_strea_1_read,
        img_input_data_strea_2_dout => img_input_data_strea_2_dout,
        img_input_data_strea_2_empty_n => img_input_data_strea_2_empty_n,
        img_input_data_strea_2_read => Loop_loop_height_pro_2_U0_img_input_data_strea_2_read,
        img_crop_data_stream_din => Loop_loop_height_pro_2_U0_img_crop_data_stream_din,
        img_crop_data_stream_full_n => img_crop_data_stream_full_n,
        img_crop_data_stream_write => Loop_loop_height_pro_2_U0_img_crop_data_stream_write,
        img_crop_data_stream_1_din => Loop_loop_height_pro_2_U0_img_crop_data_stream_1_din,
        img_crop_data_stream_1_full_n => img_crop_data_stream_1_full_n,
        img_crop_data_stream_1_write => Loop_loop_height_pro_2_U0_img_crop_data_stream_1_write,
        img_crop_data_stream_2_din => Loop_loop_height_pro_2_U0_img_crop_data_stream_2_din,
        img_crop_data_stream_2_full_n => img_crop_data_stream_2_full_n,
        img_crop_data_stream_2_write => Loop_loop_height_pro_2_U0_img_crop_data_stream_2_write);

    Loop_loop_height_pro_1_U0 : component Loop_loop_height_pro_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => Loop_loop_height_pro_1_U0_ap_start,
        start_full_n => start_for_video_scale_U0_full_n,
        ap_done => Loop_loop_height_pro_1_U0_ap_done,
        ap_continue => Loop_loop_height_pro_1_U0_ap_continue,
        ap_idle => Loop_loop_height_pro_1_U0_ap_idle,
        ap_ready => Loop_loop_height_pro_1_U0_ap_ready,
        start_out => Loop_loop_height_pro_1_U0_start_out,
        start_write => Loop_loop_height_pro_1_U0_start_write,
        img_crop_data_stream_0_V_dout => img_crop_data_stream_dout,
        img_crop_data_stream_0_V_empty_n => img_crop_data_stream_empty_n,
        img_crop_data_stream_0_V_read => Loop_loop_height_pro_1_U0_img_crop_data_stream_0_V_read,
        img_crop_data_stream_1_V_dout => img_crop_data_stream_1_dout,
        img_crop_data_stream_1_V_empty_n => img_crop_data_stream_1_empty_n,
        img_crop_data_stream_1_V_read => Loop_loop_height_pro_1_U0_img_crop_data_stream_1_V_read,
        img_crop_data_stream_2_V_dout => img_crop_data_stream_2_dout,
        img_crop_data_stream_2_V_empty_n => img_crop_data_stream_2_empty_n,
        img_crop_data_stream_2_V_read => Loop_loop_height_pro_1_U0_img_crop_data_stream_2_V_read,
        img_nogamma_data_stream_0_V_din => Loop_loop_height_pro_1_U0_img_nogamma_data_stream_0_V_din,
        img_nogamma_data_stream_0_V_full_n => img_nogamma_data_str_full_n,
        img_nogamma_data_stream_0_V_write => Loop_loop_height_pro_1_U0_img_nogamma_data_stream_0_V_write,
        img_nogamma_data_stream_1_V_din => Loop_loop_height_pro_1_U0_img_nogamma_data_stream_1_V_din,
        img_nogamma_data_stream_1_V_full_n => img_nogamma_data_str_1_full_n,
        img_nogamma_data_stream_1_V_write => Loop_loop_height_pro_1_U0_img_nogamma_data_stream_1_V_write,
        img_nogamma_data_stream_2_V_din => Loop_loop_height_pro_1_U0_img_nogamma_data_stream_2_V_din,
        img_nogamma_data_stream_2_V_full_n => img_nogamma_data_str_2_full_n,
        img_nogamma_data_stream_2_V_write => Loop_loop_height_pro_1_U0_img_nogamma_data_stream_2_V_write);

    video_scale_U0 : component video_scale
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => video_scale_U0_ap_start,
        start_full_n => start_for_brightness_color_adj_U0_full_n,
        ap_done => video_scale_U0_ap_done,
        ap_continue => video_scale_U0_ap_continue,
        ap_idle => video_scale_U0_ap_idle,
        ap_ready => video_scale_U0_ap_ready,
        start_out => video_scale_U0_start_out,
        start_write => video_scale_U0_start_write,
        src_data_stream_0_V_dout => img_nogamma_data_str_dout,
        src_data_stream_0_V_empty_n => img_nogamma_data_str_empty_n,
        src_data_stream_0_V_read => video_scale_U0_src_data_stream_0_V_read,
        src_data_stream_1_V_dout => img_nogamma_data_str_1_dout,
        src_data_stream_1_V_empty_n => img_nogamma_data_str_1_empty_n,
        src_data_stream_1_V_read => video_scale_U0_src_data_stream_1_V_read,
        src_data_stream_2_V_dout => img_nogamma_data_str_2_dout,
        src_data_stream_2_V_empty_n => img_nogamma_data_str_2_empty_n,
        src_data_stream_2_V_read => video_scale_U0_src_data_stream_2_V_read,
        dst_data_stream_0_V_din => video_scale_U0_dst_data_stream_0_V_din,
        dst_data_stream_0_V_full_n => img_scaled_data_stre_full_n,
        dst_data_stream_0_V_write => video_scale_U0_dst_data_stream_0_V_write,
        dst_data_stream_1_V_din => video_scale_U0_dst_data_stream_1_V_din,
        dst_data_stream_1_V_full_n => img_scaled_data_stre_1_full_n,
        dst_data_stream_1_V_write => video_scale_U0_dst_data_stream_1_V_write,
        dst_data_stream_2_V_din => video_scale_U0_dst_data_stream_2_V_din,
        dst_data_stream_2_V_full_n => img_scaled_data_stre_2_full_n,
        dst_data_stream_2_V_write => video_scale_U0_dst_data_stream_2_V_write);

    brightness_color_adj_U0 : component brightness_color_adj
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => brightness_color_adj_U0_ap_start,
        start_full_n => start_for_Loop_loop_height_pro_U0_full_n,
        ap_done => brightness_color_adj_U0_ap_done,
        ap_continue => brightness_color_adj_U0_ap_continue,
        ap_idle => brightness_color_adj_U0_ap_idle,
        ap_ready => brightness_color_adj_U0_ap_ready,
        start_out => brightness_color_adj_U0_start_out,
        start_write => brightness_color_adj_U0_start_write,
        src_data_stream_0_V_dout => img_scaled_data_stre_dout,
        src_data_stream_0_V_empty_n => img_scaled_data_stre_empty_n,
        src_data_stream_0_V_read => brightness_color_adj_U0_src_data_stream_0_V_read,
        src_data_stream_1_V_dout => img_scaled_data_stre_1_dout,
        src_data_stream_1_V_empty_n => img_scaled_data_stre_1_empty_n,
        src_data_stream_1_V_read => brightness_color_adj_U0_src_data_stream_1_V_read,
        src_data_stream_2_V_dout => img_scaled_data_stre_2_dout,
        src_data_stream_2_V_empty_n => img_scaled_data_stre_2_empty_n,
        src_data_stream_2_V_read => brightness_color_adj_U0_src_data_stream_2_V_read,
        dst_data_stream_0_V_din => brightness_color_adj_U0_dst_data_stream_0_V_din,
        dst_data_stream_0_V_full_n => img_adjusted_data_st_full_n,
        dst_data_stream_0_V_write => brightness_color_adj_U0_dst_data_stream_0_V_write,
        dst_data_stream_1_V_din => brightness_color_adj_U0_dst_data_stream_1_V_din,
        dst_data_stream_1_V_full_n => img_adjusted_data_st_1_full_n,
        dst_data_stream_1_V_write => brightness_color_adj_U0_dst_data_stream_1_V_write,
        dst_data_stream_2_V_din => brightness_color_adj_U0_dst_data_stream_2_V_din,
        dst_data_stream_2_V_full_n => img_adjusted_data_st_2_full_n,
        dst_data_stream_2_V_write => brightness_color_adj_U0_dst_data_stream_2_V_write,
        brightness_index_V => brightness_V,
        color_correct_V => color_correct_V);

    Loop_loop_height_pro_U0 : component Loop_loop_height_pro
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => Loop_loop_height_pro_U0_ap_start,
        start_full_n => start_for_Mat2AXIvideo_U0_full_n,
        ap_done => Loop_loop_height_pro_U0_ap_done,
        ap_continue => Loop_loop_height_pro_U0_ap_continue,
        ap_idle => Loop_loop_height_pro_U0_ap_idle,
        ap_ready => Loop_loop_height_pro_U0_ap_ready,
        start_out => Loop_loop_height_pro_U0_start_out,
        start_write => Loop_loop_height_pro_U0_start_write,
        img_adjusted_data_stream_0_V_dout => img_adjusted_data_st_dout,
        img_adjusted_data_stream_0_V_empty_n => img_adjusted_data_st_empty_n,
        img_adjusted_data_stream_0_V_read => Loop_loop_height_pro_U0_img_adjusted_data_stream_0_V_read,
        img_adjusted_data_stream_1_V_dout => img_adjusted_data_st_1_dout,
        img_adjusted_data_stream_1_V_empty_n => img_adjusted_data_st_1_empty_n,
        img_adjusted_data_stream_1_V_read => Loop_loop_height_pro_U0_img_adjusted_data_stream_1_V_read,
        img_adjusted_data_stream_2_V_dout => img_adjusted_data_st_2_dout,
        img_adjusted_data_stream_2_V_empty_n => img_adjusted_data_st_2_empty_n,
        img_adjusted_data_stream_2_V_read => Loop_loop_height_pro_U0_img_adjusted_data_stream_2_V_read,
        img_out_data_stream_0_V_din => Loop_loop_height_pro_U0_img_out_data_stream_0_V_din,
        img_out_data_stream_0_V_full_n => img_out_data_stream_s_full_n,
        img_out_data_stream_0_V_write => Loop_loop_height_pro_U0_img_out_data_stream_0_V_write,
        img_out_data_stream_1_V_din => Loop_loop_height_pro_U0_img_out_data_stream_1_V_din,
        img_out_data_stream_1_V_full_n => img_out_data_stream_1_full_n,
        img_out_data_stream_1_V_write => Loop_loop_height_pro_U0_img_out_data_stream_1_V_write,
        img_out_data_stream_2_V_din => Loop_loop_height_pro_U0_img_out_data_stream_2_V_din,
        img_out_data_stream_2_V_full_n => img_out_data_stream_2_full_n,
        img_out_data_stream_2_V_write => Loop_loop_height_pro_U0_img_out_data_stream_2_V_write);

    Mat2AXIvideo_U0 : component Mat2AXIvideo
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => Mat2AXIvideo_U0_ap_start,
        ap_done => Mat2AXIvideo_U0_ap_done,
        ap_continue => Mat2AXIvideo_U0_ap_continue,
        ap_idle => Mat2AXIvideo_U0_ap_idle,
        ap_ready => Mat2AXIvideo_U0_ap_ready,
        img_data_stream_0_V_dout => img_out_data_stream_s_dout,
        img_data_stream_0_V_empty_n => img_out_data_stream_s_empty_n,
        img_data_stream_0_V_read => Mat2AXIvideo_U0_img_data_stream_0_V_read,
        img_data_stream_1_V_dout => img_out_data_stream_1_dout,
        img_data_stream_1_V_empty_n => img_out_data_stream_1_empty_n,
        img_data_stream_1_V_read => Mat2AXIvideo_U0_img_data_stream_1_V_read,
        img_data_stream_2_V_dout => img_out_data_stream_2_dout,
        img_data_stream_2_V_empty_n => img_out_data_stream_2_empty_n,
        img_data_stream_2_V_read => Mat2AXIvideo_U0_img_data_stream_2_V_read,
        stream_out_TDATA => Mat2AXIvideo_U0_stream_out_TDATA,
        stream_out_TVALID => Mat2AXIvideo_U0_stream_out_TVALID,
        stream_out_TREADY => stream_out_TREADY,
        stream_out_TKEEP => Mat2AXIvideo_U0_stream_out_TKEEP,
        stream_out_TSTRB => Mat2AXIvideo_U0_stream_out_TSTRB,
        stream_out_TUSER => Mat2AXIvideo_U0_stream_out_TUSER,
        stream_out_TLAST => Mat2AXIvideo_U0_stream_out_TLAST,
        stream_out_TID => Mat2AXIvideo_U0_stream_out_TID,
        stream_out_TDEST => Mat2AXIvideo_U0_stream_out_TDEST);

    img_input_rows_V_c_U : component fifo_w12_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => Block_proc_U0_img_input_rows_V_out_din,
        if_full_n => img_input_rows_V_c_full_n,
        if_write => Block_proc_U0_img_input_rows_V_out_write,
        if_dout => img_input_rows_V_c_dout,
        if_empty_n => img_input_rows_V_c_empty_n,
        if_read => AXIvideo2Mat_U0_img_rows_V_read);

    img_input_rows_V_c20_U : component fifo_w12_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => Block_proc_U0_img_input_rows_V_out1_din,
        if_full_n => img_input_rows_V_c20_full_n,
        if_write => Block_proc_U0_img_input_rows_V_out1_write,
        if_dout => img_input_rows_V_c20_dout,
        if_empty_n => img_input_rows_V_c20_empty_n,
        if_read => Block_proc55_U0_img_input_rows_V_read);

    img_input_cols_V_c_U : component fifo_w12_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => Block_proc_U0_img_input_cols_V_out_din,
        if_full_n => img_input_cols_V_c_full_n,
        if_write => Block_proc_U0_img_input_cols_V_out_write,
        if_dout => img_input_cols_V_c_dout,
        if_empty_n => img_input_cols_V_c_empty_n,
        if_read => AXIvideo2Mat_U0_img_cols_V_read);

    img_input_data_strea_U : component fifo_w8_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => AXIvideo2Mat_U0_img_data_stream_0_V_din,
        if_full_n => img_input_data_strea_full_n,
        if_write => AXIvideo2Mat_U0_img_data_stream_0_V_write,
        if_dout => img_input_data_strea_dout,
        if_empty_n => img_input_data_strea_empty_n,
        if_read => Loop_loop_height_pro_2_U0_img_input_data_strea_read);

    img_input_data_strea_1_U : component fifo_w8_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => AXIvideo2Mat_U0_img_data_stream_1_V_din,
        if_full_n => img_input_data_strea_1_full_n,
        if_write => AXIvideo2Mat_U0_img_data_stream_1_V_write,
        if_dout => img_input_data_strea_1_dout,
        if_empty_n => img_input_data_strea_1_empty_n,
        if_read => Loop_loop_height_pro_2_U0_img_input_data_strea_1_read);

    img_input_data_strea_2_U : component fifo_w8_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => AXIvideo2Mat_U0_img_data_stream_2_V_din,
        if_full_n => img_input_data_strea_2_full_n,
        if_write => AXIvideo2Mat_U0_img_data_stream_2_V_write,
        if_dout => img_input_data_strea_2_dout,
        if_empty_n => img_input_data_strea_2_empty_n,
        if_read => Loop_loop_height_pro_2_U0_img_input_data_strea_2_read);

    img_input_cols_V_c20_U : component fifo_w12_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => AXIvideo2Mat_U0_img_cols_V_out_din,
        if_full_n => img_input_cols_V_c20_full_n,
        if_write => AXIvideo2Mat_U0_img_cols_V_out_write,
        if_dout => img_input_cols_V_c20_dout,
        if_empty_n => img_input_cols_V_c20_empty_n,
        if_read => Loop_loop_height_pro_2_U0_img_input_cols_V_c20_read);

    extLd_loc_channel_U : component fifo_w12_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => Block_proc55_U0_ap_return,
        if_full_n => extLd_loc_channel_full_n,
        if_write => Block_proc55_U0_ap_done,
        if_dout => extLd_loc_channel_dout,
        if_empty_n => extLd_loc_channel_empty_n,
        if_read => Loop_loop_height_pro_2_U0_ap_ready);

    img_crop_data_stream_U : component fifo_w8_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => Loop_loop_height_pro_2_U0_img_crop_data_stream_din,
        if_full_n => img_crop_data_stream_full_n,
        if_write => Loop_loop_height_pro_2_U0_img_crop_data_stream_write,
        if_dout => img_crop_data_stream_dout,
        if_empty_n => img_crop_data_stream_empty_n,
        if_read => Loop_loop_height_pro_1_U0_img_crop_data_stream_0_V_read);

    img_crop_data_stream_1_U : component fifo_w8_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => Loop_loop_height_pro_2_U0_img_crop_data_stream_1_din,
        if_full_n => img_crop_data_stream_1_full_n,
        if_write => Loop_loop_height_pro_2_U0_img_crop_data_stream_1_write,
        if_dout => img_crop_data_stream_1_dout,
        if_empty_n => img_crop_data_stream_1_empty_n,
        if_read => Loop_loop_height_pro_1_U0_img_crop_data_stream_1_V_read);

    img_crop_data_stream_2_U : component fifo_w8_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => Loop_loop_height_pro_2_U0_img_crop_data_stream_2_din,
        if_full_n => img_crop_data_stream_2_full_n,
        if_write => Loop_loop_height_pro_2_U0_img_crop_data_stream_2_write,
        if_dout => img_crop_data_stream_2_dout,
        if_empty_n => img_crop_data_stream_2_empty_n,
        if_read => Loop_loop_height_pro_1_U0_img_crop_data_stream_2_V_read);

    img_nogamma_data_str_U : component fifo_w32_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => Loop_loop_height_pro_1_U0_img_nogamma_data_stream_0_V_din,
        if_full_n => img_nogamma_data_str_full_n,
        if_write => Loop_loop_height_pro_1_U0_img_nogamma_data_stream_0_V_write,
        if_dout => img_nogamma_data_str_dout,
        if_empty_n => img_nogamma_data_str_empty_n,
        if_read => video_scale_U0_src_data_stream_0_V_read);

    img_nogamma_data_str_1_U : component fifo_w32_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => Loop_loop_height_pro_1_U0_img_nogamma_data_stream_1_V_din,
        if_full_n => img_nogamma_data_str_1_full_n,
        if_write => Loop_loop_height_pro_1_U0_img_nogamma_data_stream_1_V_write,
        if_dout => img_nogamma_data_str_1_dout,
        if_empty_n => img_nogamma_data_str_1_empty_n,
        if_read => video_scale_U0_src_data_stream_1_V_read);

    img_nogamma_data_str_2_U : component fifo_w32_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => Loop_loop_height_pro_1_U0_img_nogamma_data_stream_2_V_din,
        if_full_n => img_nogamma_data_str_2_full_n,
        if_write => Loop_loop_height_pro_1_U0_img_nogamma_data_stream_2_V_write,
        if_dout => img_nogamma_data_str_2_dout,
        if_empty_n => img_nogamma_data_str_2_empty_n,
        if_read => video_scale_U0_src_data_stream_2_V_read);

    img_scaled_data_stre_U : component fifo_w32_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => video_scale_U0_dst_data_stream_0_V_din,
        if_full_n => img_scaled_data_stre_full_n,
        if_write => video_scale_U0_dst_data_stream_0_V_write,
        if_dout => img_scaled_data_stre_dout,
        if_empty_n => img_scaled_data_stre_empty_n,
        if_read => brightness_color_adj_U0_src_data_stream_0_V_read);

    img_scaled_data_stre_1_U : component fifo_w32_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => video_scale_U0_dst_data_stream_1_V_din,
        if_full_n => img_scaled_data_stre_1_full_n,
        if_write => video_scale_U0_dst_data_stream_1_V_write,
        if_dout => img_scaled_data_stre_1_dout,
        if_empty_n => img_scaled_data_stre_1_empty_n,
        if_read => brightness_color_adj_U0_src_data_stream_1_V_read);

    img_scaled_data_stre_2_U : component fifo_w32_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => video_scale_U0_dst_data_stream_2_V_din,
        if_full_n => img_scaled_data_stre_2_full_n,
        if_write => video_scale_U0_dst_data_stream_2_V_write,
        if_dout => img_scaled_data_stre_2_dout,
        if_empty_n => img_scaled_data_stre_2_empty_n,
        if_read => brightness_color_adj_U0_src_data_stream_2_V_read);

    img_adjusted_data_st_U : component fifo_w32_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => brightness_color_adj_U0_dst_data_stream_0_V_din,
        if_full_n => img_adjusted_data_st_full_n,
        if_write => brightness_color_adj_U0_dst_data_stream_0_V_write,
        if_dout => img_adjusted_data_st_dout,
        if_empty_n => img_adjusted_data_st_empty_n,
        if_read => Loop_loop_height_pro_U0_img_adjusted_data_stream_0_V_read);

    img_adjusted_data_st_1_U : component fifo_w32_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => brightness_color_adj_U0_dst_data_stream_1_V_din,
        if_full_n => img_adjusted_data_st_1_full_n,
        if_write => brightness_color_adj_U0_dst_data_stream_1_V_write,
        if_dout => img_adjusted_data_st_1_dout,
        if_empty_n => img_adjusted_data_st_1_empty_n,
        if_read => Loop_loop_height_pro_U0_img_adjusted_data_stream_1_V_read);

    img_adjusted_data_st_2_U : component fifo_w32_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => brightness_color_adj_U0_dst_data_stream_2_V_din,
        if_full_n => img_adjusted_data_st_2_full_n,
        if_write => brightness_color_adj_U0_dst_data_stream_2_V_write,
        if_dout => img_adjusted_data_st_2_dout,
        if_empty_n => img_adjusted_data_st_2_empty_n,
        if_read => Loop_loop_height_pro_U0_img_adjusted_data_stream_2_V_read);

    img_out_data_stream_s_U : component fifo_w8_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => Loop_loop_height_pro_U0_img_out_data_stream_0_V_din,
        if_full_n => img_out_data_stream_s_full_n,
        if_write => Loop_loop_height_pro_U0_img_out_data_stream_0_V_write,
        if_dout => img_out_data_stream_s_dout,
        if_empty_n => img_out_data_stream_s_empty_n,
        if_read => Mat2AXIvideo_U0_img_data_stream_0_V_read);

    img_out_data_stream_1_U : component fifo_w8_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => Loop_loop_height_pro_U0_img_out_data_stream_1_V_din,
        if_full_n => img_out_data_stream_1_full_n,
        if_write => Loop_loop_height_pro_U0_img_out_data_stream_1_V_write,
        if_dout => img_out_data_stream_1_dout,
        if_empty_n => img_out_data_stream_1_empty_n,
        if_read => Mat2AXIvideo_U0_img_data_stream_1_V_read);

    img_out_data_stream_2_U : component fifo_w8_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => Loop_loop_height_pro_U0_img_out_data_stream_2_V_din,
        if_full_n => img_out_data_stream_2_full_n,
        if_write => Loop_loop_height_pro_U0_img_out_data_stream_2_V_write,
        if_dout => img_out_data_stream_2_dout,
        if_empty_n => img_out_data_stream_2_empty_n,
        if_read => Mat2AXIvideo_U0_img_data_stream_2_V_read);

    start_for_Block_pjbC_U : component start_for_Block_pjbC
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_Block_proc55_U0_din,
        if_full_n => start_for_Block_proc55_U0_full_n,
        if_write => Block_proc_U0_start_write,
        if_dout => start_for_Block_proc55_U0_dout,
        if_empty_n => start_for_Block_proc55_U0_empty_n,
        if_read => Block_proc55_U0_ap_ready);

    start_for_Loop_lokbM_U : component start_for_Loop_lokbM
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_Loop_loop_height_pro_1_U0_din,
        if_full_n => start_for_Loop_loop_height_pro_1_U0_full_n,
        if_write => Loop_loop_height_pro_2_U0_start_write,
        if_dout => start_for_Loop_loop_height_pro_1_U0_dout,
        if_empty_n => start_for_Loop_loop_height_pro_1_U0_empty_n,
        if_read => Loop_loop_height_pro_1_U0_ap_ready);

    start_for_video_slbW_U : component start_for_video_slbW
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_video_scale_U0_din,
        if_full_n => start_for_video_scale_U0_full_n,
        if_write => Loop_loop_height_pro_1_U0_start_write,
        if_dout => start_for_video_scale_U0_dout,
        if_empty_n => start_for_video_scale_U0_empty_n,
        if_read => video_scale_U0_ap_ready);

    start_for_brightnmb6_U : component start_for_brightnmb6
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_brightness_color_adj_U0_din,
        if_full_n => start_for_brightness_color_adj_U0_full_n,
        if_write => video_scale_U0_start_write,
        if_dout => start_for_brightness_color_adj_U0_dout,
        if_empty_n => start_for_brightness_color_adj_U0_empty_n,
        if_read => brightness_color_adj_U0_ap_ready);

    start_for_Loop_loncg_U : component start_for_Loop_loncg
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_Loop_loop_height_pro_U0_din,
        if_full_n => start_for_Loop_loop_height_pro_U0_full_n,
        if_write => brightness_color_adj_U0_start_write,
        if_dout => start_for_Loop_loop_height_pro_U0_dout,
        if_empty_n => start_for_Loop_loop_height_pro_U0_empty_n,
        if_read => Loop_loop_height_pro_U0_ap_ready);

    start_for_Mat2AXIocq_U : component start_for_Mat2AXIocq
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_Mat2AXIvideo_U0_din,
        if_full_n => start_for_Mat2AXIvideo_U0_full_n,
        if_write => Loop_loop_height_pro_U0_start_write,
        if_dout => start_for_Mat2AXIvideo_U0_dout,
        if_empty_n => start_for_Mat2AXIvideo_U0_empty_n,
        if_read => Mat2AXIvideo_U0_ap_ready);




    AXIvideo2Mat_U0_ap_continue <= ap_const_logic_1;
    AXIvideo2Mat_U0_ap_start <= ap_const_logic_1;
    AXIvideo2Mat_U0_start_full_n <= ap_const_logic_1;
    AXIvideo2Mat_U0_start_write <= ap_const_logic_0;
    Block_proc55_U0_ap_continue <= extLd_loc_channel_full_n;
    Block_proc55_U0_ap_start <= start_for_Block_proc55_U0_empty_n;
    Block_proc55_U0_start_full_n <= ap_const_logic_1;
    Block_proc55_U0_start_write <= ap_const_logic_0;
    Block_proc_U0_ap_continue <= ap_const_logic_1;
    Block_proc_U0_ap_start <= ap_const_logic_1;
    Loop_loop_height_pro_1_U0_ap_continue <= ap_const_logic_1;
    Loop_loop_height_pro_1_U0_ap_start <= start_for_Loop_loop_height_pro_1_U0_empty_n;
    Loop_loop_height_pro_2_U0_ap_continue <= ap_const_logic_1;
    Loop_loop_height_pro_2_U0_ap_start <= extLd_loc_channel_empty_n;
    Loop_loop_height_pro_U0_ap_continue <= ap_const_logic_1;
    Loop_loop_height_pro_U0_ap_start <= start_for_Loop_loop_height_pro_U0_empty_n;
    Mat2AXIvideo_U0_ap_continue <= ap_const_logic_1;
    Mat2AXIvideo_U0_ap_start <= start_for_Mat2AXIvideo_U0_empty_n;
    Mat2AXIvideo_U0_start_full_n <= ap_const_logic_1;
    Mat2AXIvideo_U0_start_write <= ap_const_logic_0;
    ap_channel_done_extLd_loc_channel <= Block_proc55_U0_ap_done;

    ap_rst_n_inv_assign_proc : process(ap_rst_n)
    begin
                ap_rst_n_inv <= not(ap_rst_n);
    end process;

    ap_sync_continue <= ap_const_logic_0;
    brightness_color_adj_U0_ap_continue <= ap_const_logic_1;
    brightness_color_adj_U0_ap_start <= start_for_brightness_color_adj_U0_empty_n;
    start_for_Block_proc55_U0_din <= (0=>ap_const_logic_1, others=>'-');
    start_for_Loop_loop_height_pro_1_U0_din <= (0=>ap_const_logic_1, others=>'-');
    start_for_Loop_loop_height_pro_U0_din <= (0=>ap_const_logic_1, others=>'-');
    start_for_Mat2AXIvideo_U0_din <= (0=>ap_const_logic_1, others=>'-');
    start_for_brightness_color_adj_U0_din <= (0=>ap_const_logic_1, others=>'-');
    start_for_video_scale_U0_din <= (0=>ap_const_logic_1, others=>'-');
    stream_in_TREADY <= AXIvideo2Mat_U0_stream_in_TREADY;
    stream_out_TDATA <= Mat2AXIvideo_U0_stream_out_TDATA;
    stream_out_TDEST <= Mat2AXIvideo_U0_stream_out_TDEST;
    stream_out_TID <= Mat2AXIvideo_U0_stream_out_TID;
    stream_out_TKEEP <= Mat2AXIvideo_U0_stream_out_TKEEP;
    stream_out_TLAST <= Mat2AXIvideo_U0_stream_out_TLAST;
    stream_out_TSTRB <= Mat2AXIvideo_U0_stream_out_TSTRB;
    stream_out_TUSER <= Mat2AXIvideo_U0_stream_out_TUSER;
    stream_out_TVALID <= Mat2AXIvideo_U0_stream_out_TVALID;
    video_scale_U0_ap_continue <= ap_const_logic_1;
    video_scale_U0_ap_start <= start_for_video_scale_U0_empty_n;
end behav;
