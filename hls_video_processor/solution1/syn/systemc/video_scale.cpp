// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "video_scale.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic video_scale::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic video_scale::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<5> video_scale::ap_ST_fsm_state1 = "1";
const sc_lv<5> video_scale::ap_ST_fsm_state2 = "10";
const sc_lv<5> video_scale::ap_ST_fsm_state3 = "100";
const sc_lv<5> video_scale::ap_ST_fsm_pp0_stage0 = "1000";
const sc_lv<5> video_scale::ap_ST_fsm_state8 = "10000";
const bool video_scale::ap_const_boolean_1 = true;
const sc_lv<32> video_scale::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> video_scale::ap_const_lv32_3 = "11";
const bool video_scale::ap_const_boolean_0 = false;
const sc_lv<1> video_scale::ap_const_lv1_0 = "0";
const sc_lv<1> video_scale::ap_const_lv1_1 = "1";
const sc_lv<32> video_scale::ap_const_lv32_1 = "1";
const sc_lv<32> video_scale::ap_const_lv32_2 = "10";
const sc_lv<6> video_scale::ap_const_lv6_0 = "000000";
const sc_lv<32> video_scale::ap_const_lv32_4 = "100";
const sc_lv<10> video_scale::ap_const_lv10_0 = "0000000000";
const sc_lv<11> video_scale::ap_const_lv11_0 = "00000000000";
const sc_lv<6> video_scale::ap_const_lv6_3C = "111100";
const sc_lv<6> video_scale::ap_const_lv6_1 = "1";
const sc_lv<10> video_scale::ap_const_lv10_3C0 = "1111000000";
const sc_lv<10> video_scale::ap_const_lv10_1 = "1";
const sc_lv<5> video_scale::ap_const_lv5_1F = "11111";
const sc_lv<11> video_scale::ap_const_lv11_780 = "11110000000";
const sc_lv<11> video_scale::ap_const_lv11_1 = "1";
const sc_lv<32> video_scale::ap_const_lv32_5 = "101";
const sc_lv<32> video_scale::ap_const_lv32_A = "1010";
const sc_lv<5> video_scale::ap_const_lv5_0 = "00000";
const sc_lv<32> video_scale::ap_const_lv32_1F = "11111";

video_scale::video_scale(sc_module_name name) : sc_module(name), mVcdFile(0) {
    sums_val_0_U = new video_scale_sums_cud("sums_val_0_U");
    sums_val_0_U->clk(ap_clk);
    sums_val_0_U->reset(ap_rst);
    sums_val_0_U->address0(sums_val_0_address0);
    sums_val_0_U->ce0(sums_val_0_ce0);
    sums_val_0_U->we0(sums_val_0_we0);
    sums_val_0_U->d0(ap_var_for_const0);
    sums_val_0_U->q0(sums_val_0_q0);
    sums_val_0_U->address1(sums_val_0_address1);
    sums_val_0_U->ce1(sums_val_0_ce1);
    sums_val_0_U->we1(sums_val_0_we1);
    sums_val_0_U->d1(ap_phi_reg_pp0_iter3_storemerge2_reg_262);
    sums_val_1_U = new video_scale_sums_cud("sums_val_1_U");
    sums_val_1_U->clk(ap_clk);
    sums_val_1_U->reset(ap_rst);
    sums_val_1_U->address0(sums_val_1_address0);
    sums_val_1_U->ce0(sums_val_1_ce0);
    sums_val_1_U->we0(sums_val_1_we0);
    sums_val_1_U->d0(ap_var_for_const0);
    sums_val_1_U->q0(sums_val_1_q0);
    sums_val_1_U->address1(sums_val_1_address1);
    sums_val_1_U->ce1(sums_val_1_ce1);
    sums_val_1_U->we1(sums_val_1_we1);
    sums_val_1_U->d1(ap_phi_reg_pp0_iter3_storemerge1_reg_274);
    sums_val_2_U = new video_scale_sums_cud("sums_val_2_U");
    sums_val_2_U->clk(ap_clk);
    sums_val_2_U->reset(ap_rst);
    sums_val_2_U->address0(sums_val_2_address0);
    sums_val_2_U->ce0(sums_val_2_ce0);
    sums_val_2_U->we0(sums_val_2_we0);
    sums_val_2_U->d0(ap_var_for_const0);
    sums_val_2_U->q0(sums_val_2_q0);
    sums_val_2_U->address1(sums_val_2_address1);
    sums_val_2_U->ce1(sums_val_2_ce1);
    sums_val_2_U->we1(sums_val_2_we1);
    sums_val_2_U->d1(ap_phi_reg_pp0_iter3_storemerge_reg_286);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state8);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_pp0);
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_block_pp0_stage0_subdone );

    SC_METHOD(thread_ap_block_pp0_stage0);

    SC_METHOD(thread_ap_block_pp0_stage0_01001);
    sensitive << ( src_data_stream_0_V_empty_n );
    sensitive << ( src_data_stream_1_V_empty_n );
    sensitive << ( src_data_stream_2_V_empty_n );
    sensitive << ( dst_data_stream_0_V_full_n );
    sensitive << ( dst_data_stream_1_V_full_n );
    sensitive << ( dst_data_stream_2_V_full_n );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( exitcond_reg_522 );
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( ap_predicate_op99_write_state7 );
    sensitive << ( ap_predicate_op100_write_state7 );
    sensitive << ( ap_predicate_op101_write_state7 );

    SC_METHOD(thread_ap_block_pp0_stage0_11001);
    sensitive << ( src_data_stream_0_V_empty_n );
    sensitive << ( src_data_stream_1_V_empty_n );
    sensitive << ( src_data_stream_2_V_empty_n );
    sensitive << ( dst_data_stream_0_V_full_n );
    sensitive << ( dst_data_stream_1_V_full_n );
    sensitive << ( dst_data_stream_2_V_full_n );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( exitcond_reg_522 );
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( ap_predicate_op99_write_state7 );
    sensitive << ( ap_predicate_op100_write_state7 );
    sensitive << ( ap_predicate_op101_write_state7 );

    SC_METHOD(thread_ap_block_pp0_stage0_subdone);
    sensitive << ( src_data_stream_0_V_empty_n );
    sensitive << ( src_data_stream_1_V_empty_n );
    sensitive << ( src_data_stream_2_V_empty_n );
    sensitive << ( dst_data_stream_0_V_full_n );
    sensitive << ( dst_data_stream_1_V_full_n );
    sensitive << ( dst_data_stream_2_V_full_n );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( exitcond_reg_522 );
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( ap_predicate_op99_write_state7 );
    sensitive << ( ap_predicate_op100_write_state7 );
    sensitive << ( ap_predicate_op101_write_state7 );

    SC_METHOD(thread_ap_block_state1);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );

    SC_METHOD(thread_ap_block_state4_pp0_stage0_iter0);

    SC_METHOD(thread_ap_block_state5_pp0_stage0_iter1);
    sensitive << ( src_data_stream_0_V_empty_n );
    sensitive << ( src_data_stream_1_V_empty_n );
    sensitive << ( src_data_stream_2_V_empty_n );
    sensitive << ( exitcond_reg_522 );

    SC_METHOD(thread_ap_block_state6_pp0_stage0_iter2);

    SC_METHOD(thread_ap_block_state7_pp0_stage0_iter3);
    sensitive << ( dst_data_stream_0_V_full_n );
    sensitive << ( dst_data_stream_1_V_full_n );
    sensitive << ( dst_data_stream_2_V_full_n );
    sensitive << ( ap_predicate_op99_write_state7 );
    sensitive << ( ap_predicate_op100_write_state7 );
    sensitive << ( ap_predicate_op101_write_state7 );

    SC_METHOD(thread_ap_condition_299);
    sensitive << ( tmp_8_reg_518 );
    sensitive << ( exitcond_reg_522_pp0_iter1_reg );
    sensitive << ( tmp_3_reg_556_pp0_iter1_reg );

    SC_METHOD(thread_ap_condition_303);
    sensitive << ( tmp_8_reg_518 );
    sensitive << ( exitcond_reg_522_pp0_iter1_reg );
    sensitive << ( tmp_3_reg_556_pp0_iter1_reg );

    SC_METHOD(thread_ap_condition_pp0_exit_iter0_state4);
    sensitive << ( exitcond_fu_343_p2 );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_done_reg );
    sensitive << ( exitcond1_fu_321_p2 );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_ap_enable_operation_106);
    sensitive << ( tmp_3_reg_556_pp0_iter2_reg );

    SC_METHOD(thread_ap_enable_operation_107);
    sensitive << ( tmp_3_reg_556_pp0_iter2_reg );

    SC_METHOD(thread_ap_enable_operation_108);
    sensitive << ( tmp_3_reg_556_pp0_iter2_reg );

    SC_METHOD(thread_ap_enable_operation_58);
    sensitive << ( exitcond_fu_343_p2 );

    SC_METHOD(thread_ap_enable_operation_60);
    sensitive << ( exitcond_fu_343_p2 );

    SC_METHOD(thread_ap_enable_operation_62);
    sensitive << ( exitcond_fu_343_p2 );

    SC_METHOD(thread_ap_enable_operation_65);
    sensitive << ( exitcond_reg_522 );

    SC_METHOD(thread_ap_enable_operation_66);
    sensitive << ( exitcond_reg_522 );

    SC_METHOD(thread_ap_enable_operation_67);
    sensitive << ( exitcond_reg_522 );

    SC_METHOD(thread_ap_enable_pp0);
    sensitive << ( ap_idle_pp0 );

    SC_METHOD(thread_ap_enable_state4_pp0_iter0_stage0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_ap_enable_state5_pp0_iter1_stage0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_ap_enable_state7_pp0_iter3_stage0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter3 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( real_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_idle_pp0);
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter2 );

    SC_METHOD(thread_ap_phi_reg_pp0_iter0_storemerge1_reg_274);

    SC_METHOD(thread_ap_phi_reg_pp0_iter0_storemerge2_reg_262);

    SC_METHOD(thread_ap_phi_reg_pp0_iter0_storemerge_reg_286);

    SC_METHOD(thread_ap_predicate_op100_write_state7);
    sensitive << ( exitcond_reg_522_pp0_iter2_reg );
    sensitive << ( tmp_3_reg_556_pp0_iter2_reg );
    sensitive << ( tmp_8_reg_518 );

    SC_METHOD(thread_ap_predicate_op101_write_state7);
    sensitive << ( exitcond_reg_522_pp0_iter2_reg );
    sensitive << ( tmp_3_reg_556_pp0_iter2_reg );
    sensitive << ( tmp_8_reg_518 );

    SC_METHOD(thread_ap_predicate_op99_write_state7);
    sensitive << ( exitcond_reg_522_pp0_iter2_reg );
    sensitive << ( tmp_3_reg_556_pp0_iter2_reg );
    sensitive << ( tmp_8_reg_518 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( internal_ap_ready );

    SC_METHOD(thread_c_V_1_fu_349_p2);
    sensitive << ( t_V_2_reg_251 );

    SC_METHOD(thread_c_V_fu_304_p2);
    sensitive << ( t_V_reg_229 );

    SC_METHOD(thread_current_sum_val_0_1_fu_411_p2);
    sensitive << ( tmp_20_reg_575 );
    sensitive << ( current_sum_val_0_2_fu_393_p3 );

    SC_METHOD(thread_current_sum_val_0_2_fu_393_p3);
    sensitive << ( tmp_6_reg_531_pp0_iter1_reg );
    sensitive << ( current_sum_val_0_reg_560 );
    sensitive << ( current_sum_val_0_3_fu_114 );

    SC_METHOD(thread_current_sum_val_1_1_fu_416_p2);
    sensitive << ( tmp_21_reg_580 );
    sensitive << ( current_sum_val_1_2_fu_399_p3 );

    SC_METHOD(thread_current_sum_val_1_2_fu_399_p3);
    sensitive << ( tmp_6_reg_531_pp0_iter1_reg );
    sensitive << ( current_sum_val_1_reg_565 );
    sensitive << ( current_sum_val_1_3_fu_110 );

    SC_METHOD(thread_current_sum_val_2_1_fu_421_p2);
    sensitive << ( tmp_19_reg_585 );
    sensitive << ( current_sum_val_2_2_fu_405_p3 );

    SC_METHOD(thread_current_sum_val_2_2_fu_405_p3);
    sensitive << ( tmp_6_reg_531_pp0_iter1_reg );
    sensitive << ( current_sum_val_2_reg_570 );
    sensitive << ( current_sum_val_2_3_fu_106 );

    SC_METHOD(thread_dst_data_stream_0_V_blk_n);
    sensitive << ( dst_data_stream_0_V_full_n );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( exitcond_reg_522_pp0_iter2_reg );
    sensitive << ( tmp_3_reg_556_pp0_iter2_reg );
    sensitive << ( tmp_8_reg_518 );

    SC_METHOD(thread_dst_data_stream_0_V_din);
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( ap_predicate_op99_write_state7 );
    sensitive << ( ap_block_pp0_stage0_01001 );
    sensitive << ( tmp_7_fu_441_p4 );

    SC_METHOD(thread_dst_data_stream_0_V_write);
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( ap_predicate_op99_write_state7 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_dst_data_stream_1_V_blk_n);
    sensitive << ( dst_data_stream_1_V_full_n );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( exitcond_reg_522_pp0_iter2_reg );
    sensitive << ( tmp_3_reg_556_pp0_iter2_reg );
    sensitive << ( tmp_8_reg_518 );

    SC_METHOD(thread_dst_data_stream_1_V_din);
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( ap_predicate_op100_write_state7 );
    sensitive << ( ap_block_pp0_stage0_01001 );
    sensitive << ( tmp_11_fu_455_p4 );

    SC_METHOD(thread_dst_data_stream_1_V_write);
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( ap_predicate_op100_write_state7 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_dst_data_stream_2_V_blk_n);
    sensitive << ( dst_data_stream_2_V_full_n );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( exitcond_reg_522_pp0_iter2_reg );
    sensitive << ( tmp_3_reg_556_pp0_iter2_reg );
    sensitive << ( tmp_8_reg_518 );

    SC_METHOD(thread_dst_data_stream_2_V_din);
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( ap_predicate_op101_write_state7 );
    sensitive << ( ap_block_pp0_stage0_01001 );
    sensitive << ( tmp_13_fu_469_p4 );

    SC_METHOD(thread_dst_data_stream_2_V_write);
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( ap_predicate_op101_write_state7 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_exitcond1_fu_321_p2);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( t_V_1_reg_240 );

    SC_METHOD(thread_exitcond_fu_343_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( t_V_2_reg_251 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_internal_ap_ready);
    sensitive << ( exitcond1_fu_321_p2 );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_r_V_2_fu_355_p4);
    sensitive << ( t_V_2_reg_251 );

    SC_METHOD(thread_r_V_fu_327_p2);
    sensitive << ( t_V_1_reg_240 );

    SC_METHOD(thread_real_start);
    sensitive << ( ap_start );
    sensitive << ( start_full_n );
    sensitive << ( start_once_reg );

    SC_METHOD(thread_src_data_stream_0_V_blk_n);
    sensitive << ( src_data_stream_0_V_empty_n );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( exitcond_reg_522 );

    SC_METHOD(thread_src_data_stream_0_V_read);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( exitcond_reg_522 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_src_data_stream_1_V_blk_n);
    sensitive << ( src_data_stream_1_V_empty_n );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( exitcond_reg_522 );

    SC_METHOD(thread_src_data_stream_1_V_read);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( exitcond_reg_522 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_src_data_stream_2_V_blk_n);
    sensitive << ( src_data_stream_2_V_empty_n );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( exitcond_reg_522 );

    SC_METHOD(thread_src_data_stream_2_V_read);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( exitcond_reg_522 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_start_out);
    sensitive << ( real_start );

    SC_METHOD(thread_start_write);
    sensitive << ( real_start );
    sensitive << ( start_once_reg );

    SC_METHOD(thread_sums_val_0_address0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( tmp_5_fu_310_p1 );
    sensitive << ( tmp_9_fu_371_p1 );

    SC_METHOD(thread_sums_val_0_address1);
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( sums_val_0_addr_1_reg_538_pp0_iter2_reg );

    SC_METHOD(thread_sums_val_0_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_sums_val_0_ce1);
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_sums_val_0_we0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_4_fu_298_p2 );

    SC_METHOD(thread_sums_val_0_we1);
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( tmp_3_reg_556_pp0_iter2_reg );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_sums_val_1_address0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( tmp_5_fu_310_p1 );
    sensitive << ( tmp_9_fu_371_p1 );

    SC_METHOD(thread_sums_val_1_address1);
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( sums_val_1_addr_1_reg_544_pp0_iter2_reg );

    SC_METHOD(thread_sums_val_1_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_sums_val_1_ce1);
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_sums_val_1_we0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_4_fu_298_p2 );

    SC_METHOD(thread_sums_val_1_we1);
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( tmp_3_reg_556_pp0_iter2_reg );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_sums_val_2_address0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( tmp_5_fu_310_p1 );
    sensitive << ( tmp_9_fu_371_p1 );

    SC_METHOD(thread_sums_val_2_address1);
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( sums_val_2_addr_1_reg_550_pp0_iter2_reg );

    SC_METHOD(thread_sums_val_2_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_sums_val_2_ce1);
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_sums_val_2_we0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_4_fu_298_p2 );

    SC_METHOD(thread_sums_val_2_we1);
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( tmp_3_reg_556_pp0_iter2_reg );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_tmp_11_fu_455_p4);
    sensitive << ( current_sum_val_1_1_reg_596 );

    SC_METHOD(thread_tmp_13_fu_469_p4);
    sensitive << ( current_sum_val_2_1_reg_602 );

    SC_METHOD(thread_tmp_16_fu_339_p1);
    sensitive << ( t_V_2_reg_251 );

    SC_METHOD(thread_tmp_3_fu_378_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( exitcond_fu_343_p2 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( tmp_16_fu_339_p1 );

    SC_METHOD(thread_tmp_4_fu_298_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( t_V_reg_229 );

    SC_METHOD(thread_tmp_5_fu_310_p1);
    sensitive << ( t_V_reg_229 );

    SC_METHOD(thread_tmp_6_fu_365_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( exitcond_fu_343_p2 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( tmp_16_fu_339_p1 );

    SC_METHOD(thread_tmp_7_fu_441_p4);
    sensitive << ( current_sum_val_0_1_reg_590 );

    SC_METHOD(thread_tmp_8_fu_333_p2);
    sensitive << ( exitcond1_fu_321_p2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( tmp_fu_317_p1 );

    SC_METHOD(thread_tmp_9_fu_371_p1);
    sensitive << ( r_V_2_fu_355_p4 );

    SC_METHOD(thread_tmp_fu_317_p1);
    sensitive << ( t_V_1_reg_240 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond1_fu_321_p2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( exitcond_fu_343_p2 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage0_subdone );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( tmp_4_fu_298_p2 );

    SC_THREAD(thread_ap_var_for_const0);

    start_once_reg = SC_LOGIC_0;
    ap_done_reg = SC_LOGIC_0;
    ap_CS_fsm = "00001";
    ap_enable_reg_pp0_iter1 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter3 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter0 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter2 = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "video_scale_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, start_full_n, "(port)start_full_n");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_continue, "(port)ap_continue");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, start_out, "(port)start_out");
    sc_trace(mVcdFile, start_write, "(port)start_write");
    sc_trace(mVcdFile, src_data_stream_0_V_dout, "(port)src_data_stream_0_V_dout");
    sc_trace(mVcdFile, src_data_stream_0_V_empty_n, "(port)src_data_stream_0_V_empty_n");
    sc_trace(mVcdFile, src_data_stream_0_V_read, "(port)src_data_stream_0_V_read");
    sc_trace(mVcdFile, src_data_stream_1_V_dout, "(port)src_data_stream_1_V_dout");
    sc_trace(mVcdFile, src_data_stream_1_V_empty_n, "(port)src_data_stream_1_V_empty_n");
    sc_trace(mVcdFile, src_data_stream_1_V_read, "(port)src_data_stream_1_V_read");
    sc_trace(mVcdFile, src_data_stream_2_V_dout, "(port)src_data_stream_2_V_dout");
    sc_trace(mVcdFile, src_data_stream_2_V_empty_n, "(port)src_data_stream_2_V_empty_n");
    sc_trace(mVcdFile, src_data_stream_2_V_read, "(port)src_data_stream_2_V_read");
    sc_trace(mVcdFile, dst_data_stream_0_V_din, "(port)dst_data_stream_0_V_din");
    sc_trace(mVcdFile, dst_data_stream_0_V_full_n, "(port)dst_data_stream_0_V_full_n");
    sc_trace(mVcdFile, dst_data_stream_0_V_write, "(port)dst_data_stream_0_V_write");
    sc_trace(mVcdFile, dst_data_stream_1_V_din, "(port)dst_data_stream_1_V_din");
    sc_trace(mVcdFile, dst_data_stream_1_V_full_n, "(port)dst_data_stream_1_V_full_n");
    sc_trace(mVcdFile, dst_data_stream_1_V_write, "(port)dst_data_stream_1_V_write");
    sc_trace(mVcdFile, dst_data_stream_2_V_din, "(port)dst_data_stream_2_V_din");
    sc_trace(mVcdFile, dst_data_stream_2_V_full_n, "(port)dst_data_stream_2_V_full_n");
    sc_trace(mVcdFile, dst_data_stream_2_V_write, "(port)dst_data_stream_2_V_write");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, real_start, "real_start");
    sc_trace(mVcdFile, start_once_reg, "start_once_reg");
    sc_trace(mVcdFile, ap_done_reg, "ap_done_reg");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, internal_ap_ready, "internal_ap_ready");
    sc_trace(mVcdFile, src_data_stream_0_V_blk_n, "src_data_stream_0_V_blk_n");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage0, "ap_CS_fsm_pp0_stage0");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter1, "ap_enable_reg_pp0_iter1");
    sc_trace(mVcdFile, ap_block_pp0_stage0, "ap_block_pp0_stage0");
    sc_trace(mVcdFile, exitcond_reg_522, "exitcond_reg_522");
    sc_trace(mVcdFile, src_data_stream_1_V_blk_n, "src_data_stream_1_V_blk_n");
    sc_trace(mVcdFile, src_data_stream_2_V_blk_n, "src_data_stream_2_V_blk_n");
    sc_trace(mVcdFile, dst_data_stream_0_V_blk_n, "dst_data_stream_0_V_blk_n");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter3, "ap_enable_reg_pp0_iter3");
    sc_trace(mVcdFile, exitcond_reg_522_pp0_iter2_reg, "exitcond_reg_522_pp0_iter2_reg");
    sc_trace(mVcdFile, tmp_3_reg_556, "tmp_3_reg_556");
    sc_trace(mVcdFile, tmp_3_reg_556_pp0_iter2_reg, "tmp_3_reg_556_pp0_iter2_reg");
    sc_trace(mVcdFile, tmp_8_reg_518, "tmp_8_reg_518");
    sc_trace(mVcdFile, dst_data_stream_1_V_blk_n, "dst_data_stream_1_V_blk_n");
    sc_trace(mVcdFile, dst_data_stream_2_V_blk_n, "dst_data_stream_2_V_blk_n");
    sc_trace(mVcdFile, t_V_2_reg_251, "t_V_2_reg_251");
    sc_trace(mVcdFile, c_V_fu_304_p2, "c_V_fu_304_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, exitcond1_fu_321_p2, "exitcond1_fu_321_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, r_V_fu_327_p2, "r_V_fu_327_p2");
    sc_trace(mVcdFile, r_V_reg_513, "r_V_reg_513");
    sc_trace(mVcdFile, tmp_8_fu_333_p2, "tmp_8_fu_333_p2");
    sc_trace(mVcdFile, exitcond_fu_343_p2, "exitcond_fu_343_p2");
    sc_trace(mVcdFile, ap_block_state4_pp0_stage0_iter0, "ap_block_state4_pp0_stage0_iter0");
    sc_trace(mVcdFile, ap_block_state5_pp0_stage0_iter1, "ap_block_state5_pp0_stage0_iter1");
    sc_trace(mVcdFile, ap_block_state6_pp0_stage0_iter2, "ap_block_state6_pp0_stage0_iter2");
    sc_trace(mVcdFile, ap_predicate_op99_write_state7, "ap_predicate_op99_write_state7");
    sc_trace(mVcdFile, ap_predicate_op100_write_state7, "ap_predicate_op100_write_state7");
    sc_trace(mVcdFile, ap_predicate_op101_write_state7, "ap_predicate_op101_write_state7");
    sc_trace(mVcdFile, ap_block_state7_pp0_stage0_iter3, "ap_block_state7_pp0_stage0_iter3");
    sc_trace(mVcdFile, ap_block_pp0_stage0_11001, "ap_block_pp0_stage0_11001");
    sc_trace(mVcdFile, exitcond_reg_522_pp0_iter1_reg, "exitcond_reg_522_pp0_iter1_reg");
    sc_trace(mVcdFile, c_V_1_fu_349_p2, "c_V_1_fu_349_p2");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter0, "ap_enable_reg_pp0_iter0");
    sc_trace(mVcdFile, tmp_6_fu_365_p2, "tmp_6_fu_365_p2");
    sc_trace(mVcdFile, tmp_6_reg_531, "tmp_6_reg_531");
    sc_trace(mVcdFile, tmp_6_reg_531_pp0_iter1_reg, "tmp_6_reg_531_pp0_iter1_reg");
    sc_trace(mVcdFile, sums_val_0_addr_1_reg_538, "sums_val_0_addr_1_reg_538");
    sc_trace(mVcdFile, sums_val_0_addr_1_reg_538_pp0_iter1_reg, "sums_val_0_addr_1_reg_538_pp0_iter1_reg");
    sc_trace(mVcdFile, sums_val_0_addr_1_reg_538_pp0_iter2_reg, "sums_val_0_addr_1_reg_538_pp0_iter2_reg");
    sc_trace(mVcdFile, sums_val_1_addr_1_reg_544, "sums_val_1_addr_1_reg_544");
    sc_trace(mVcdFile, sums_val_1_addr_1_reg_544_pp0_iter1_reg, "sums_val_1_addr_1_reg_544_pp0_iter1_reg");
    sc_trace(mVcdFile, sums_val_1_addr_1_reg_544_pp0_iter2_reg, "sums_val_1_addr_1_reg_544_pp0_iter2_reg");
    sc_trace(mVcdFile, sums_val_2_addr_1_reg_550, "sums_val_2_addr_1_reg_550");
    sc_trace(mVcdFile, sums_val_2_addr_1_reg_550_pp0_iter1_reg, "sums_val_2_addr_1_reg_550_pp0_iter1_reg");
    sc_trace(mVcdFile, sums_val_2_addr_1_reg_550_pp0_iter2_reg, "sums_val_2_addr_1_reg_550_pp0_iter2_reg");
    sc_trace(mVcdFile, tmp_3_fu_378_p2, "tmp_3_fu_378_p2");
    sc_trace(mVcdFile, tmp_3_reg_556_pp0_iter1_reg, "tmp_3_reg_556_pp0_iter1_reg");
    sc_trace(mVcdFile, sums_val_0_q0, "sums_val_0_q0");
    sc_trace(mVcdFile, current_sum_val_0_reg_560, "current_sum_val_0_reg_560");
    sc_trace(mVcdFile, sums_val_1_q0, "sums_val_1_q0");
    sc_trace(mVcdFile, current_sum_val_1_reg_565, "current_sum_val_1_reg_565");
    sc_trace(mVcdFile, sums_val_2_q0, "sums_val_2_q0");
    sc_trace(mVcdFile, current_sum_val_2_reg_570, "current_sum_val_2_reg_570");
    sc_trace(mVcdFile, tmp_20_reg_575, "tmp_20_reg_575");
    sc_trace(mVcdFile, tmp_21_reg_580, "tmp_21_reg_580");
    sc_trace(mVcdFile, tmp_19_reg_585, "tmp_19_reg_585");
    sc_trace(mVcdFile, current_sum_val_0_1_fu_411_p2, "current_sum_val_0_1_fu_411_p2");
    sc_trace(mVcdFile, current_sum_val_0_1_reg_590, "current_sum_val_0_1_reg_590");
    sc_trace(mVcdFile, current_sum_val_1_1_fu_416_p2, "current_sum_val_1_1_fu_416_p2");
    sc_trace(mVcdFile, current_sum_val_1_1_reg_596, "current_sum_val_1_1_reg_596");
    sc_trace(mVcdFile, current_sum_val_2_1_fu_421_p2, "current_sum_val_2_1_fu_421_p2");
    sc_trace(mVcdFile, current_sum_val_2_1_reg_602, "current_sum_val_2_1_reg_602");
    sc_trace(mVcdFile, ap_block_pp0_stage0_subdone, "ap_block_pp0_stage0_subdone");
    sc_trace(mVcdFile, ap_condition_pp0_exit_iter0_state4, "ap_condition_pp0_exit_iter0_state4");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter2, "ap_enable_reg_pp0_iter2");
    sc_trace(mVcdFile, sums_val_0_address0, "sums_val_0_address0");
    sc_trace(mVcdFile, sums_val_0_ce0, "sums_val_0_ce0");
    sc_trace(mVcdFile, sums_val_0_we0, "sums_val_0_we0");
    sc_trace(mVcdFile, sums_val_0_address1, "sums_val_0_address1");
    sc_trace(mVcdFile, sums_val_0_ce1, "sums_val_0_ce1");
    sc_trace(mVcdFile, sums_val_0_we1, "sums_val_0_we1");
    sc_trace(mVcdFile, sums_val_1_address0, "sums_val_1_address0");
    sc_trace(mVcdFile, sums_val_1_ce0, "sums_val_1_ce0");
    sc_trace(mVcdFile, sums_val_1_we0, "sums_val_1_we0");
    sc_trace(mVcdFile, sums_val_1_address1, "sums_val_1_address1");
    sc_trace(mVcdFile, sums_val_1_ce1, "sums_val_1_ce1");
    sc_trace(mVcdFile, sums_val_1_we1, "sums_val_1_we1");
    sc_trace(mVcdFile, sums_val_2_address0, "sums_val_2_address0");
    sc_trace(mVcdFile, sums_val_2_ce0, "sums_val_2_ce0");
    sc_trace(mVcdFile, sums_val_2_we0, "sums_val_2_we0");
    sc_trace(mVcdFile, sums_val_2_address1, "sums_val_2_address1");
    sc_trace(mVcdFile, sums_val_2_ce1, "sums_val_2_ce1");
    sc_trace(mVcdFile, sums_val_2_we1, "sums_val_2_we1");
    sc_trace(mVcdFile, t_V_reg_229, "t_V_reg_229");
    sc_trace(mVcdFile, tmp_4_fu_298_p2, "tmp_4_fu_298_p2");
    sc_trace(mVcdFile, ap_block_state1, "ap_block_state1");
    sc_trace(mVcdFile, t_V_1_reg_240, "t_V_1_reg_240");
    sc_trace(mVcdFile, ap_CS_fsm_state8, "ap_CS_fsm_state8");
    sc_trace(mVcdFile, ap_phi_reg_pp0_iter0_storemerge2_reg_262, "ap_phi_reg_pp0_iter0_storemerge2_reg_262");
    sc_trace(mVcdFile, ap_phi_reg_pp0_iter1_storemerge2_reg_262, "ap_phi_reg_pp0_iter1_storemerge2_reg_262");
    sc_trace(mVcdFile, ap_phi_reg_pp0_iter2_storemerge2_reg_262, "ap_phi_reg_pp0_iter2_storemerge2_reg_262");
    sc_trace(mVcdFile, ap_phi_reg_pp0_iter3_storemerge2_reg_262, "ap_phi_reg_pp0_iter3_storemerge2_reg_262");
    sc_trace(mVcdFile, ap_phi_reg_pp0_iter0_storemerge1_reg_274, "ap_phi_reg_pp0_iter0_storemerge1_reg_274");
    sc_trace(mVcdFile, ap_phi_reg_pp0_iter1_storemerge1_reg_274, "ap_phi_reg_pp0_iter1_storemerge1_reg_274");
    sc_trace(mVcdFile, ap_phi_reg_pp0_iter2_storemerge1_reg_274, "ap_phi_reg_pp0_iter2_storemerge1_reg_274");
    sc_trace(mVcdFile, ap_phi_reg_pp0_iter3_storemerge1_reg_274, "ap_phi_reg_pp0_iter3_storemerge1_reg_274");
    sc_trace(mVcdFile, ap_phi_reg_pp0_iter0_storemerge_reg_286, "ap_phi_reg_pp0_iter0_storemerge_reg_286");
    sc_trace(mVcdFile, ap_phi_reg_pp0_iter1_storemerge_reg_286, "ap_phi_reg_pp0_iter1_storemerge_reg_286");
    sc_trace(mVcdFile, ap_phi_reg_pp0_iter2_storemerge_reg_286, "ap_phi_reg_pp0_iter2_storemerge_reg_286");
    sc_trace(mVcdFile, ap_phi_reg_pp0_iter3_storemerge_reg_286, "ap_phi_reg_pp0_iter3_storemerge_reg_286");
    sc_trace(mVcdFile, tmp_5_fu_310_p1, "tmp_5_fu_310_p1");
    sc_trace(mVcdFile, tmp_9_fu_371_p1, "tmp_9_fu_371_p1");
    sc_trace(mVcdFile, ap_block_pp0_stage0_01001, "ap_block_pp0_stage0_01001");
    sc_trace(mVcdFile, current_sum_val_2_3_fu_106, "current_sum_val_2_3_fu_106");
    sc_trace(mVcdFile, current_sum_val_1_3_fu_110, "current_sum_val_1_3_fu_110");
    sc_trace(mVcdFile, current_sum_val_0_3_fu_114, "current_sum_val_0_3_fu_114");
    sc_trace(mVcdFile, tmp_fu_317_p1, "tmp_fu_317_p1");
    sc_trace(mVcdFile, tmp_16_fu_339_p1, "tmp_16_fu_339_p1");
    sc_trace(mVcdFile, r_V_2_fu_355_p4, "r_V_2_fu_355_p4");
    sc_trace(mVcdFile, current_sum_val_0_2_fu_393_p3, "current_sum_val_0_2_fu_393_p3");
    sc_trace(mVcdFile, current_sum_val_1_2_fu_399_p3, "current_sum_val_1_2_fu_399_p3");
    sc_trace(mVcdFile, current_sum_val_2_2_fu_405_p3, "current_sum_val_2_2_fu_405_p3");
    sc_trace(mVcdFile, tmp_7_fu_441_p4, "tmp_7_fu_441_p4");
    sc_trace(mVcdFile, tmp_11_fu_455_p4, "tmp_11_fu_455_p4");
    sc_trace(mVcdFile, tmp_13_fu_469_p4, "tmp_13_fu_469_p4");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ap_block_pp0, "ap_block_pp0");
    sc_trace(mVcdFile, ap_enable_operation_106, "ap_enable_operation_106");
    sc_trace(mVcdFile, ap_enable_state7_pp0_iter3_stage0, "ap_enable_state7_pp0_iter3_stage0");
    sc_trace(mVcdFile, ap_enable_operation_58, "ap_enable_operation_58");
    sc_trace(mVcdFile, ap_enable_state4_pp0_iter0_stage0, "ap_enable_state4_pp0_iter0_stage0");
    sc_trace(mVcdFile, ap_enable_operation_65, "ap_enable_operation_65");
    sc_trace(mVcdFile, ap_enable_state5_pp0_iter1_stage0, "ap_enable_state5_pp0_iter1_stage0");
    sc_trace(mVcdFile, ap_enable_operation_107, "ap_enable_operation_107");
    sc_trace(mVcdFile, ap_enable_operation_60, "ap_enable_operation_60");
    sc_trace(mVcdFile, ap_enable_operation_66, "ap_enable_operation_66");
    sc_trace(mVcdFile, ap_enable_operation_108, "ap_enable_operation_108");
    sc_trace(mVcdFile, ap_enable_operation_62, "ap_enable_operation_62");
    sc_trace(mVcdFile, ap_enable_operation_67, "ap_enable_operation_67");
    sc_trace(mVcdFile, ap_idle_pp0, "ap_idle_pp0");
    sc_trace(mVcdFile, ap_enable_pp0, "ap_enable_pp0");
    sc_trace(mVcdFile, ap_condition_299, "ap_condition_299");
    sc_trace(mVcdFile, ap_condition_303, "ap_condition_303");
#endif

    }
}

video_scale::~video_scale() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete sums_val_0_U;
    delete sums_val_1_U;
    delete sums_val_2_U;
}

void video_scale::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_lv32_0;
}

void video_scale::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_done_reg = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_continue.read())) {
            ap_done_reg = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
                    esl_seteq<1,1,1>(ap_const_lv1_1, exitcond1_fu_321_p2.read()))) {
            ap_done_reg = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state4.read()))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
                    esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_fu_321_p2.read()))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter1 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            if (esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state4.read())) {
                ap_enable_reg_pp0_iter1 = (ap_condition_pp0_exit_iter0_state4.read() ^ ap_const_logic_1);
            } else if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1)) {
                ap_enable_reg_pp0_iter1 = ap_enable_reg_pp0_iter0.read();
            }
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter2 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter2 = ap_enable_reg_pp0_iter1.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter3 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter3 = ap_enable_reg_pp0_iter2.read();
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
                    esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_fu_321_p2.read()))) {
            ap_enable_reg_pp0_iter3 = ap_const_logic_0;
        }
    }
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()))) {
        if (esl_seteq<1,1,1>(ap_condition_303.read(), ap_const_boolean_1)) {
            ap_phi_reg_pp0_iter3_storemerge1_reg_274 = current_sum_val_1_1_fu_416_p2.read();
        } else if (esl_seteq<1,1,1>(ap_condition_299.read(), ap_const_boolean_1)) {
            ap_phi_reg_pp0_iter3_storemerge1_reg_274 = ap_const_lv32_0;
        } else if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1)) {
            ap_phi_reg_pp0_iter3_storemerge1_reg_274 = ap_phi_reg_pp0_iter2_storemerge1_reg_274.read();
        }
    }
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()))) {
        if (esl_seteq<1,1,1>(ap_condition_303.read(), ap_const_boolean_1)) {
            ap_phi_reg_pp0_iter3_storemerge2_reg_262 = current_sum_val_0_1_fu_411_p2.read();
        } else if (esl_seteq<1,1,1>(ap_condition_299.read(), ap_const_boolean_1)) {
            ap_phi_reg_pp0_iter3_storemerge2_reg_262 = ap_const_lv32_0;
        } else if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1)) {
            ap_phi_reg_pp0_iter3_storemerge2_reg_262 = ap_phi_reg_pp0_iter2_storemerge2_reg_262.read();
        }
    }
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()))) {
        if (esl_seteq<1,1,1>(ap_condition_303.read(), ap_const_boolean_1)) {
            ap_phi_reg_pp0_iter3_storemerge_reg_286 = current_sum_val_2_1_fu_421_p2.read();
        } else if (esl_seteq<1,1,1>(ap_condition_299.read(), ap_const_boolean_1)) {
            ap_phi_reg_pp0_iter3_storemerge_reg_286 = ap_const_lv32_0;
        } else if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1)) {
            ap_phi_reg_pp0_iter3_storemerge_reg_286 = ap_phi_reg_pp0_iter2_storemerge_reg_286.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        start_once_reg = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, real_start.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_0, internal_ap_ready.read()))) {
            start_once_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, internal_ap_ready.read())) {
            start_once_reg = ap_const_logic_0;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, tmp_4_fu_298_p2.read()))) {
        t_V_1_reg_240 = ap_const_lv10_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        t_V_1_reg_240 = r_V_reg_513.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_343_p2.read()))) {
        t_V_2_reg_251 = c_V_1_fu_349_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_fu_321_p2.read()))) {
        t_V_2_reg_251 = ap_const_lv11_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        t_V_reg_229 = ap_const_lv6_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, tmp_4_fu_298_p2.read()))) {
        t_V_reg_229 = c_V_fu_304_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()))) {
        ap_phi_reg_pp0_iter1_storemerge1_reg_274 = ap_phi_reg_pp0_iter0_storemerge1_reg_274.read();
        ap_phi_reg_pp0_iter1_storemerge2_reg_262 = ap_phi_reg_pp0_iter0_storemerge2_reg_262.read();
        ap_phi_reg_pp0_iter1_storemerge_reg_286 = ap_phi_reg_pp0_iter0_storemerge_reg_286.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        ap_phi_reg_pp0_iter2_storemerge1_reg_274 = ap_phi_reg_pp0_iter1_storemerge1_reg_274.read();
        ap_phi_reg_pp0_iter2_storemerge2_reg_262 = ap_phi_reg_pp0_iter1_storemerge2_reg_262.read();
        ap_phi_reg_pp0_iter2_storemerge_reg_286 = ap_phi_reg_pp0_iter1_storemerge_reg_286.read();
    }
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_reg_522_pp0_iter1_reg.read()))) {
        current_sum_val_0_1_reg_590 = current_sum_val_0_1_fu_411_p2.read();
        current_sum_val_1_1_reg_596 = current_sum_val_1_1_fu_416_p2.read();
        current_sum_val_2_1_reg_602 = current_sum_val_2_1_fu_421_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_reg_522_pp0_iter1_reg.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()))) {
        current_sum_val_0_3_fu_114 = current_sum_val_0_1_fu_411_p2.read();
        current_sum_val_1_3_fu_110 = current_sum_val_1_1_fu_416_p2.read();
        current_sum_val_2_3_fu_106 = current_sum_val_2_1_fu_421_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(exitcond_reg_522.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        current_sum_val_0_reg_560 = sums_val_0_q0.read();
        current_sum_val_1_reg_565 = sums_val_1_q0.read();
        current_sum_val_2_reg_570 = sums_val_2_q0.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        exitcond_reg_522 = exitcond_fu_343_p2.read();
        exitcond_reg_522_pp0_iter1_reg = exitcond_reg_522.read();
        sums_val_0_addr_1_reg_538_pp0_iter1_reg = sums_val_0_addr_1_reg_538.read();
        sums_val_1_addr_1_reg_544_pp0_iter1_reg = sums_val_1_addr_1_reg_544.read();
        sums_val_2_addr_1_reg_550_pp0_iter1_reg = sums_val_2_addr_1_reg_550.read();
        tmp_3_reg_556_pp0_iter1_reg = tmp_3_reg_556.read();
        tmp_6_reg_531_pp0_iter1_reg = tmp_6_reg_531.read();
    }
    if (esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)) {
        exitcond_reg_522_pp0_iter2_reg = exitcond_reg_522_pp0_iter1_reg.read();
        sums_val_0_addr_1_reg_538_pp0_iter2_reg = sums_val_0_addr_1_reg_538_pp0_iter1_reg.read();
        sums_val_1_addr_1_reg_544_pp0_iter2_reg = sums_val_1_addr_1_reg_544_pp0_iter1_reg.read();
        sums_val_2_addr_1_reg_550_pp0_iter2_reg = sums_val_2_addr_1_reg_550_pp0_iter1_reg.read();
        tmp_3_reg_556_pp0_iter2_reg = tmp_3_reg_556_pp0_iter1_reg.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        r_V_reg_513 = r_V_fu_327_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_343_p2.read()))) {
        sums_val_0_addr_1_reg_538 =  (sc_lv<6>) (tmp_9_fu_371_p1.read());
        sums_val_1_addr_1_reg_544 =  (sc_lv<6>) (tmp_9_fu_371_p1.read());
        sums_val_2_addr_1_reg_550 =  (sc_lv<6>) (tmp_9_fu_371_p1.read());
        tmp_3_reg_556 = tmp_3_fu_378_p2.read();
        tmp_6_reg_531 = tmp_6_fu_365_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(exitcond_reg_522.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        tmp_19_reg_585 = src_data_stream_2_V_dout.read();
        tmp_20_reg_575 = src_data_stream_0_V_dout.read();
        tmp_21_reg_580 = src_data_stream_1_V_dout.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_fu_321_p2.read()))) {
        tmp_8_reg_518 = tmp_8_fu_333_p2.read();
    }
}

void video_scale::thread_ap_CS_fsm_pp0_stage0() {
    ap_CS_fsm_pp0_stage0 = ap_CS_fsm.read()[3];
}

void video_scale::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void video_scale::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void video_scale::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void video_scale::thread_ap_CS_fsm_state8() {
    ap_CS_fsm_state8 = ap_CS_fsm.read()[4];
}

void video_scale::thread_ap_block_pp0() {
    ap_block_pp0 = (esl_seteq<1,5,5>(ap_ST_fsm_pp0_stage0, ap_CS_fsm.read()) && esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_pp0_stage0_subdone.read()));
}

void video_scale::thread_ap_block_pp0_stage0() {
    ap_block_pp0_stage0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void video_scale::thread_ap_block_pp0_stage0_01001() {
    ap_block_pp0_stage0_01001 = ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
  ((esl_seteq<1,1,1>(exitcond_reg_522.read(), ap_const_lv1_0) && 
    esl_seteq<1,1,1>(ap_const_logic_0, src_data_stream_0_V_empty_n.read())) || 
   (esl_seteq<1,1,1>(exitcond_reg_522.read(), ap_const_lv1_0) && 
    esl_seteq<1,1,1>(ap_const_logic_0, src_data_stream_1_V_empty_n.read())) || 
   (esl_seteq<1,1,1>(exitcond_reg_522.read(), ap_const_lv1_0) && 
    esl_seteq<1,1,1>(ap_const_logic_0, src_data_stream_2_V_empty_n.read())))) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter3.read()) && 
  ((esl_seteq<1,1,1>(ap_const_logic_0, dst_data_stream_0_V_full_n.read()) && 
    esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op99_write_state7.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, dst_data_stream_1_V_full_n.read()) && 
    esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op100_write_state7.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, dst_data_stream_2_V_full_n.read()) && 
    esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op101_write_state7.read())))));
}

void video_scale::thread_ap_block_pp0_stage0_11001() {
    ap_block_pp0_stage0_11001 = ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
  ((esl_seteq<1,1,1>(exitcond_reg_522.read(), ap_const_lv1_0) && 
    esl_seteq<1,1,1>(ap_const_logic_0, src_data_stream_0_V_empty_n.read())) || 
   (esl_seteq<1,1,1>(exitcond_reg_522.read(), ap_const_lv1_0) && 
    esl_seteq<1,1,1>(ap_const_logic_0, src_data_stream_1_V_empty_n.read())) || 
   (esl_seteq<1,1,1>(exitcond_reg_522.read(), ap_const_lv1_0) && 
    esl_seteq<1,1,1>(ap_const_logic_0, src_data_stream_2_V_empty_n.read())))) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter3.read()) && 
  ((esl_seteq<1,1,1>(ap_const_logic_0, dst_data_stream_0_V_full_n.read()) && 
    esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op99_write_state7.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, dst_data_stream_1_V_full_n.read()) && 
    esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op100_write_state7.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, dst_data_stream_2_V_full_n.read()) && 
    esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op101_write_state7.read())))));
}

void video_scale::thread_ap_block_pp0_stage0_subdone() {
    ap_block_pp0_stage0_subdone = ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
  ((esl_seteq<1,1,1>(exitcond_reg_522.read(), ap_const_lv1_0) && 
    esl_seteq<1,1,1>(ap_const_logic_0, src_data_stream_0_V_empty_n.read())) || 
   (esl_seteq<1,1,1>(exitcond_reg_522.read(), ap_const_lv1_0) && 
    esl_seteq<1,1,1>(ap_const_logic_0, src_data_stream_1_V_empty_n.read())) || 
   (esl_seteq<1,1,1>(exitcond_reg_522.read(), ap_const_lv1_0) && 
    esl_seteq<1,1,1>(ap_const_logic_0, src_data_stream_2_V_empty_n.read())))) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter3.read()) && 
  ((esl_seteq<1,1,1>(ap_const_logic_0, dst_data_stream_0_V_full_n.read()) && 
    esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op99_write_state7.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, dst_data_stream_1_V_full_n.read()) && 
    esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op100_write_state7.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, dst_data_stream_2_V_full_n.read()) && 
    esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op101_write_state7.read())))));
}

void video_scale::thread_ap_block_state1() {
    ap_block_state1 = (esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1));
}

void video_scale::thread_ap_block_state4_pp0_stage0_iter0() {
    ap_block_state4_pp0_stage0_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void video_scale::thread_ap_block_state5_pp0_stage0_iter1() {
    ap_block_state5_pp0_stage0_iter1 = ((esl_seteq<1,1,1>(exitcond_reg_522.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, src_data_stream_0_V_empty_n.read())) || (esl_seteq<1,1,1>(exitcond_reg_522.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, src_data_stream_1_V_empty_n.read())) || (esl_seteq<1,1,1>(exitcond_reg_522.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, src_data_stream_2_V_empty_n.read())));
}

void video_scale::thread_ap_block_state6_pp0_stage0_iter2() {
    ap_block_state6_pp0_stage0_iter2 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void video_scale::thread_ap_block_state7_pp0_stage0_iter3() {
    ap_block_state7_pp0_stage0_iter3 = ((esl_seteq<1,1,1>(ap_const_logic_0, dst_data_stream_0_V_full_n.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op99_write_state7.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, dst_data_stream_1_V_full_n.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op100_write_state7.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, dst_data_stream_2_V_full_n.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op101_write_state7.read())));
}

void video_scale::thread_ap_condition_299() {
    ap_condition_299 = (esl_seteq<1,1,1>(ap_const_lv1_1, tmp_8_reg_518.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_reg_522_pp0_iter1_reg.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_3_reg_556_pp0_iter1_reg.read()));
}

void video_scale::thread_ap_condition_303() {
    ap_condition_303 = (esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_reg_522_pp0_iter1_reg.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_3_reg_556_pp0_iter1_reg.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_8_reg_518.read()));
}

void video_scale::thread_ap_condition_pp0_exit_iter0_state4() {
    if (esl_seteq<1,1,1>(ap_const_lv1_1, exitcond_fu_343_p2.read())) {
        ap_condition_pp0_exit_iter0_state4 = ap_const_logic_1;
    } else {
        ap_condition_pp0_exit_iter0_state4 = ap_const_logic_0;
    }
}

void video_scale::thread_ap_done() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, exitcond1_fu_321_p2.read()))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_done_reg.read();
    }
}

void video_scale::thread_ap_enable_operation_106() {
    ap_enable_operation_106 = esl_seteq<1,1,1>(tmp_3_reg_556_pp0_iter2_reg.read(), ap_const_lv1_1);
}

void video_scale::thread_ap_enable_operation_107() {
    ap_enable_operation_107 = esl_seteq<1,1,1>(tmp_3_reg_556_pp0_iter2_reg.read(), ap_const_lv1_1);
}

void video_scale::thread_ap_enable_operation_108() {
    ap_enable_operation_108 = esl_seteq<1,1,1>(tmp_3_reg_556_pp0_iter2_reg.read(), ap_const_lv1_1);
}

void video_scale::thread_ap_enable_operation_58() {
    ap_enable_operation_58 = esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_343_p2.read());
}

void video_scale::thread_ap_enable_operation_60() {
    ap_enable_operation_60 = esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_343_p2.read());
}

void video_scale::thread_ap_enable_operation_62() {
    ap_enable_operation_62 = esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_343_p2.read());
}

void video_scale::thread_ap_enable_operation_65() {
    ap_enable_operation_65 = esl_seteq<1,1,1>(exitcond_reg_522.read(), ap_const_lv1_0);
}

void video_scale::thread_ap_enable_operation_66() {
    ap_enable_operation_66 = esl_seteq<1,1,1>(exitcond_reg_522.read(), ap_const_lv1_0);
}

void video_scale::thread_ap_enable_operation_67() {
    ap_enable_operation_67 = esl_seteq<1,1,1>(exitcond_reg_522.read(), ap_const_lv1_0);
}

void video_scale::thread_ap_enable_pp0() {
    ap_enable_pp0 = (ap_idle_pp0.read() ^ ap_const_logic_1);
}

void video_scale::thread_ap_enable_state4_pp0_iter0_stage0() {
    ap_enable_state4_pp0_iter0_stage0 = (esl_seteq<1,1,1>(ap_CS_fsm_pp0_stage0.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter0.read(), ap_const_logic_1));
}

void video_scale::thread_ap_enable_state5_pp0_iter1_stage0() {
    ap_enable_state5_pp0_iter1_stage0 = (esl_seteq<1,1,1>(ap_CS_fsm_pp0_stage0.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_1));
}

void video_scale::thread_ap_enable_state7_pp0_iter3_stage0() {
    ap_enable_state7_pp0_iter3_stage0 = (esl_seteq<1,1,1>(ap_enable_reg_pp0_iter3.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_CS_fsm_pp0_stage0.read(), ap_const_logic_1));
}

void video_scale::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void video_scale::thread_ap_idle_pp0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter2.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter3.read()))) {
        ap_idle_pp0 = ap_const_logic_1;
    } else {
        ap_idle_pp0 = ap_const_logic_0;
    }
}

void video_scale::thread_ap_phi_reg_pp0_iter0_storemerge1_reg_274() {
    ap_phi_reg_pp0_iter0_storemerge1_reg_274 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
}

void video_scale::thread_ap_phi_reg_pp0_iter0_storemerge2_reg_262() {
    ap_phi_reg_pp0_iter0_storemerge2_reg_262 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
}

void video_scale::thread_ap_phi_reg_pp0_iter0_storemerge_reg_286() {
    ap_phi_reg_pp0_iter0_storemerge_reg_286 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
}

void video_scale::thread_ap_predicate_op100_write_state7() {
    ap_predicate_op100_write_state7 = (esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_reg_522_pp0_iter2_reg.read()) && esl_seteq<1,1,1>(tmp_3_reg_556_pp0_iter2_reg.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_8_reg_518.read()));
}

void video_scale::thread_ap_predicate_op101_write_state7() {
    ap_predicate_op101_write_state7 = (esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_reg_522_pp0_iter2_reg.read()) && esl_seteq<1,1,1>(tmp_3_reg_556_pp0_iter2_reg.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_8_reg_518.read()));
}

void video_scale::thread_ap_predicate_op99_write_state7() {
    ap_predicate_op99_write_state7 = (esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_reg_522_pp0_iter2_reg.read()) && esl_seteq<1,1,1>(tmp_3_reg_556_pp0_iter2_reg.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_8_reg_518.read()));
}

void video_scale::thread_ap_ready() {
    ap_ready = internal_ap_ready.read();
}

void video_scale::thread_c_V_1_fu_349_p2() {
    c_V_1_fu_349_p2 = (!ap_const_lv11_1.is_01() || !t_V_2_reg_251.read().is_01())? sc_lv<11>(): (sc_biguint<11>(ap_const_lv11_1) + sc_biguint<11>(t_V_2_reg_251.read()));
}

void video_scale::thread_c_V_fu_304_p2() {
    c_V_fu_304_p2 = (!t_V_reg_229.read().is_01() || !ap_const_lv6_1.is_01())? sc_lv<6>(): (sc_biguint<6>(t_V_reg_229.read()) + sc_biguint<6>(ap_const_lv6_1));
}

void video_scale::thread_current_sum_val_0_1_fu_411_p2() {
    current_sum_val_0_1_fu_411_p2 = (!current_sum_val_0_2_fu_393_p3.read().is_01() || !tmp_20_reg_575.read().is_01())? sc_lv<32>(): (sc_biguint<32>(current_sum_val_0_2_fu_393_p3.read()) + sc_biguint<32>(tmp_20_reg_575.read()));
}

void video_scale::thread_current_sum_val_0_2_fu_393_p3() {
    current_sum_val_0_2_fu_393_p3 = (!tmp_6_reg_531_pp0_iter1_reg.read()[0].is_01())? sc_lv<32>(): ((tmp_6_reg_531_pp0_iter1_reg.read()[0].to_bool())? current_sum_val_0_reg_560.read(): current_sum_val_0_3_fu_114.read());
}

void video_scale::thread_current_sum_val_1_1_fu_416_p2() {
    current_sum_val_1_1_fu_416_p2 = (!current_sum_val_1_2_fu_399_p3.read().is_01() || !tmp_21_reg_580.read().is_01())? sc_lv<32>(): (sc_biguint<32>(current_sum_val_1_2_fu_399_p3.read()) + sc_biguint<32>(tmp_21_reg_580.read()));
}

void video_scale::thread_current_sum_val_1_2_fu_399_p3() {
    current_sum_val_1_2_fu_399_p3 = (!tmp_6_reg_531_pp0_iter1_reg.read()[0].is_01())? sc_lv<32>(): ((tmp_6_reg_531_pp0_iter1_reg.read()[0].to_bool())? current_sum_val_1_reg_565.read(): current_sum_val_1_3_fu_110.read());
}

void video_scale::thread_current_sum_val_2_1_fu_421_p2() {
    current_sum_val_2_1_fu_421_p2 = (!current_sum_val_2_2_fu_405_p3.read().is_01() || !tmp_19_reg_585.read().is_01())? sc_lv<32>(): (sc_biguint<32>(current_sum_val_2_2_fu_405_p3.read()) + sc_biguint<32>(tmp_19_reg_585.read()));
}

void video_scale::thread_current_sum_val_2_2_fu_405_p3() {
    current_sum_val_2_2_fu_405_p3 = (!tmp_6_reg_531_pp0_iter1_reg.read()[0].is_01())? sc_lv<32>(): ((tmp_6_reg_531_pp0_iter1_reg.read()[0].to_bool())? current_sum_val_2_reg_570.read(): current_sum_val_2_3_fu_106.read());
}

void video_scale::thread_dst_data_stream_0_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter3.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_reg_522_pp0_iter2_reg.read()) && 
         esl_seteq<1,1,1>(tmp_3_reg_556_pp0_iter2_reg.read(), ap_const_lv1_1) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, tmp_8_reg_518.read()))) {
        dst_data_stream_0_V_blk_n = dst_data_stream_0_V_full_n.read();
    } else {
        dst_data_stream_0_V_blk_n = ap_const_logic_1;
    }
}

void video_scale::thread_dst_data_stream_0_V_din() {
    dst_data_stream_0_V_din = esl_sext<32,22>(tmp_7_fu_441_p4.read());
}

void video_scale::thread_dst_data_stream_0_V_write() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter3.read()) && 
         esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op99_write_state7.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        dst_data_stream_0_V_write = ap_const_logic_1;
    } else {
        dst_data_stream_0_V_write = ap_const_logic_0;
    }
}

void video_scale::thread_dst_data_stream_1_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter3.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_reg_522_pp0_iter2_reg.read()) && 
         esl_seteq<1,1,1>(tmp_3_reg_556_pp0_iter2_reg.read(), ap_const_lv1_1) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, tmp_8_reg_518.read()))) {
        dst_data_stream_1_V_blk_n = dst_data_stream_1_V_full_n.read();
    } else {
        dst_data_stream_1_V_blk_n = ap_const_logic_1;
    }
}

void video_scale::thread_dst_data_stream_1_V_din() {
    dst_data_stream_1_V_din = esl_sext<32,22>(tmp_11_fu_455_p4.read());
}

void video_scale::thread_dst_data_stream_1_V_write() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter3.read()) && 
         esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op100_write_state7.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        dst_data_stream_1_V_write = ap_const_logic_1;
    } else {
        dst_data_stream_1_V_write = ap_const_logic_0;
    }
}

void video_scale::thread_dst_data_stream_2_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter3.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_reg_522_pp0_iter2_reg.read()) && 
         esl_seteq<1,1,1>(tmp_3_reg_556_pp0_iter2_reg.read(), ap_const_lv1_1) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, tmp_8_reg_518.read()))) {
        dst_data_stream_2_V_blk_n = dst_data_stream_2_V_full_n.read();
    } else {
        dst_data_stream_2_V_blk_n = ap_const_logic_1;
    }
}

void video_scale::thread_dst_data_stream_2_V_din() {
    dst_data_stream_2_V_din = esl_sext<32,22>(tmp_13_fu_469_p4.read());
}

void video_scale::thread_dst_data_stream_2_V_write() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter3.read()) && 
         esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op101_write_state7.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        dst_data_stream_2_V_write = ap_const_logic_1;
    } else {
        dst_data_stream_2_V_write = ap_const_logic_0;
    }
}

void video_scale::thread_exitcond1_fu_321_p2() {
    exitcond1_fu_321_p2 = (!t_V_1_reg_240.read().is_01() || !ap_const_lv10_3C0.is_01())? sc_lv<1>(): sc_lv<1>(t_V_1_reg_240.read() == ap_const_lv10_3C0);
}

void video_scale::thread_exitcond_fu_343_p2() {
    exitcond_fu_343_p2 = (!t_V_2_reg_251.read().is_01() || !ap_const_lv11_780.is_01())? sc_lv<1>(): sc_lv<1>(t_V_2_reg_251.read() == ap_const_lv11_780);
}

void video_scale::thread_internal_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, exitcond1_fu_321_p2.read()))) {
        internal_ap_ready = ap_const_logic_1;
    } else {
        internal_ap_ready = ap_const_logic_0;
    }
}

void video_scale::thread_r_V_2_fu_355_p4() {
    r_V_2_fu_355_p4 = t_V_2_reg_251.read().range(10, 5);
}

void video_scale::thread_r_V_fu_327_p2() {
    r_V_fu_327_p2 = (!ap_const_lv10_1.is_01() || !t_V_1_reg_240.read().is_01())? sc_lv<10>(): (sc_biguint<10>(ap_const_lv10_1) + sc_biguint<10>(t_V_1_reg_240.read()));
}

void video_scale::thread_real_start() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, start_full_n.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, start_once_reg.read()))) {
        real_start = ap_const_logic_0;
    } else {
        real_start = ap_start.read();
    }
}

void video_scale::thread_src_data_stream_0_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(exitcond_reg_522.read(), ap_const_lv1_0))) {
        src_data_stream_0_V_blk_n = src_data_stream_0_V_empty_n.read();
    } else {
        src_data_stream_0_V_blk_n = ap_const_logic_1;
    }
}

void video_scale::thread_src_data_stream_0_V_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(exitcond_reg_522.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        src_data_stream_0_V_read = ap_const_logic_1;
    } else {
        src_data_stream_0_V_read = ap_const_logic_0;
    }
}

void video_scale::thread_src_data_stream_1_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(exitcond_reg_522.read(), ap_const_lv1_0))) {
        src_data_stream_1_V_blk_n = src_data_stream_1_V_empty_n.read();
    } else {
        src_data_stream_1_V_blk_n = ap_const_logic_1;
    }
}

void video_scale::thread_src_data_stream_1_V_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(exitcond_reg_522.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        src_data_stream_1_V_read = ap_const_logic_1;
    } else {
        src_data_stream_1_V_read = ap_const_logic_0;
    }
}

void video_scale::thread_src_data_stream_2_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(exitcond_reg_522.read(), ap_const_lv1_0))) {
        src_data_stream_2_V_blk_n = src_data_stream_2_V_empty_n.read();
    } else {
        src_data_stream_2_V_blk_n = ap_const_logic_1;
    }
}

void video_scale::thread_src_data_stream_2_V_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(exitcond_reg_522.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        src_data_stream_2_V_read = ap_const_logic_1;
    } else {
        src_data_stream_2_V_read = ap_const_logic_0;
    }
}

void video_scale::thread_start_out() {
    start_out = real_start.read();
}

void video_scale::thread_start_write() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, start_once_reg.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, real_start.read()))) {
        start_write = ap_const_logic_1;
    } else {
        start_write = ap_const_logic_0;
    }
}

void video_scale::thread_sums_val_0_address0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()))) {
        sums_val_0_address0 =  (sc_lv<6>) (tmp_9_fu_371_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        sums_val_0_address0 =  (sc_lv<6>) (tmp_5_fu_310_p1.read());
    } else {
        sums_val_0_address0 = "XXXXXX";
    }
}

void video_scale::thread_sums_val_0_address1() {
    sums_val_0_address1 = sums_val_0_addr_1_reg_538_pp0_iter2_reg.read();
}

void video_scale::thread_sums_val_0_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read())))) {
        sums_val_0_ce0 = ap_const_logic_1;
    } else {
        sums_val_0_ce0 = ap_const_logic_0;
    }
}

void video_scale::thread_sums_val_0_ce1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter3.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        sums_val_0_ce1 = ap_const_logic_1;
    } else {
        sums_val_0_ce1 = ap_const_logic_0;
    }
}

void video_scale::thread_sums_val_0_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, tmp_4_fu_298_p2.read()))) {
        sums_val_0_we0 = ap_const_logic_1;
    } else {
        sums_val_0_we0 = ap_const_logic_0;
    }
}

void video_scale::thread_sums_val_0_we1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter3.read()) && 
         esl_seteq<1,1,1>(tmp_3_reg_556_pp0_iter2_reg.read(), ap_const_lv1_1) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        sums_val_0_we1 = ap_const_logic_1;
    } else {
        sums_val_0_we1 = ap_const_logic_0;
    }
}

void video_scale::thread_sums_val_1_address0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()))) {
        sums_val_1_address0 =  (sc_lv<6>) (tmp_9_fu_371_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        sums_val_1_address0 =  (sc_lv<6>) (tmp_5_fu_310_p1.read());
    } else {
        sums_val_1_address0 = "XXXXXX";
    }
}

void video_scale::thread_sums_val_1_address1() {
    sums_val_1_address1 = sums_val_1_addr_1_reg_544_pp0_iter2_reg.read();
}

void video_scale::thread_sums_val_1_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read())))) {
        sums_val_1_ce0 = ap_const_logic_1;
    } else {
        sums_val_1_ce0 = ap_const_logic_0;
    }
}

void video_scale::thread_sums_val_1_ce1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter3.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        sums_val_1_ce1 = ap_const_logic_1;
    } else {
        sums_val_1_ce1 = ap_const_logic_0;
    }
}

void video_scale::thread_sums_val_1_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, tmp_4_fu_298_p2.read()))) {
        sums_val_1_we0 = ap_const_logic_1;
    } else {
        sums_val_1_we0 = ap_const_logic_0;
    }
}

void video_scale::thread_sums_val_1_we1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter3.read()) && 
         esl_seteq<1,1,1>(tmp_3_reg_556_pp0_iter2_reg.read(), ap_const_lv1_1) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        sums_val_1_we1 = ap_const_logic_1;
    } else {
        sums_val_1_we1 = ap_const_logic_0;
    }
}

void video_scale::thread_sums_val_2_address0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()))) {
        sums_val_2_address0 =  (sc_lv<6>) (tmp_9_fu_371_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        sums_val_2_address0 =  (sc_lv<6>) (tmp_5_fu_310_p1.read());
    } else {
        sums_val_2_address0 = "XXXXXX";
    }
}

void video_scale::thread_sums_val_2_address1() {
    sums_val_2_address1 = sums_val_2_addr_1_reg_550_pp0_iter2_reg.read();
}

void video_scale::thread_sums_val_2_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read())))) {
        sums_val_2_ce0 = ap_const_logic_1;
    } else {
        sums_val_2_ce0 = ap_const_logic_0;
    }
}

void video_scale::thread_sums_val_2_ce1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter3.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        sums_val_2_ce1 = ap_const_logic_1;
    } else {
        sums_val_2_ce1 = ap_const_logic_0;
    }
}

void video_scale::thread_sums_val_2_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, tmp_4_fu_298_p2.read()))) {
        sums_val_2_we0 = ap_const_logic_1;
    } else {
        sums_val_2_we0 = ap_const_logic_0;
    }
}

void video_scale::thread_sums_val_2_we1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter3.read()) && 
         esl_seteq<1,1,1>(tmp_3_reg_556_pp0_iter2_reg.read(), ap_const_lv1_1) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        sums_val_2_we1 = ap_const_logic_1;
    } else {
        sums_val_2_we1 = ap_const_logic_0;
    }
}

void video_scale::thread_tmp_11_fu_455_p4() {
    tmp_11_fu_455_p4 = current_sum_val_1_1_reg_596.read().range(31, 10);
}

void video_scale::thread_tmp_13_fu_469_p4() {
    tmp_13_fu_469_p4 = current_sum_val_2_1_reg_602.read().range(31, 10);
}

void video_scale::thread_tmp_16_fu_339_p1() {
    tmp_16_fu_339_p1 = t_V_2_reg_251.read().range(5-1, 0);
}

void video_scale::thread_tmp_3_fu_378_p2() {
    tmp_3_fu_378_p2 = (!tmp_16_fu_339_p1.read().is_01() || !ap_const_lv5_1F.is_01())? sc_lv<1>(): sc_lv<1>(tmp_16_fu_339_p1.read() == ap_const_lv5_1F);
}

void video_scale::thread_tmp_4_fu_298_p2() {
    tmp_4_fu_298_p2 = (!t_V_reg_229.read().is_01() || !ap_const_lv6_3C.is_01())? sc_lv<1>(): sc_lv<1>(t_V_reg_229.read() == ap_const_lv6_3C);
}

void video_scale::thread_tmp_5_fu_310_p1() {
    tmp_5_fu_310_p1 = esl_zext<64,6>(t_V_reg_229.read());
}

void video_scale::thread_tmp_6_fu_365_p2() {
    tmp_6_fu_365_p2 = (!tmp_16_fu_339_p1.read().is_01() || !ap_const_lv5_0.is_01())? sc_lv<1>(): sc_lv<1>(tmp_16_fu_339_p1.read() == ap_const_lv5_0);
}

void video_scale::thread_tmp_7_fu_441_p4() {
    tmp_7_fu_441_p4 = current_sum_val_0_1_reg_590.read().range(31, 10);
}

void video_scale::thread_tmp_8_fu_333_p2() {
    tmp_8_fu_333_p2 = (!tmp_fu_317_p1.read().is_01() || !ap_const_lv5_1F.is_01())? sc_lv<1>(): sc_lv<1>(tmp_fu_317_p1.read() == ap_const_lv5_1F);
}

void video_scale::thread_tmp_9_fu_371_p1() {
    tmp_9_fu_371_p1 = esl_zext<64,6>(r_V_2_fu_355_p4.read());
}

void video_scale::thread_tmp_fu_317_p1() {
    tmp_fu_317_p1 = t_V_1_reg_240.read().range(5-1, 0);
}

void video_scale::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_4_fu_298_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state3;
            } else {
                ap_NS_fsm = ap_ST_fsm_state2;
            }
            break;
        case 4 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, exitcond1_fu_321_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            }
            break;
        case 8 : 
            if ((!(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter3.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter2.read(), ap_const_logic_0)) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_1, exitcond_fu_343_p2.read()) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter3.read()) && 
  esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
  esl_seteq<1,1,1>(ap_enable_reg_pp0_iter2.read(), ap_const_logic_0)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
  esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
  esl_seteq<1,1,1>(ap_const_lv1_1, exitcond_fu_343_p2.read()) && 
  esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_state8;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            }
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_fsm_state3;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<5>) ("XXXXX");
            break;
    }
}

}

