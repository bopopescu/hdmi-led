// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _brightness_color_adj_HH_
#define _brightness_color_adj_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "hls_video_processibs.h"
#include "brightness_color_fYi.h"
#include "brightness_color_g8j.h"
#include "brightness_color_hbi.h"

namespace ap_rtl {

struct brightness_color_adj : public sc_module {
    // Port declarations 30
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_in< sc_logic > start_full_n;
    sc_out< sc_logic > ap_done;
    sc_in< sc_logic > ap_continue;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_logic > start_out;
    sc_out< sc_logic > start_write;
    sc_in< sc_lv<32> > src_data_stream_0_V_dout;
    sc_in< sc_logic > src_data_stream_0_V_empty_n;
    sc_out< sc_logic > src_data_stream_0_V_read;
    sc_in< sc_lv<32> > src_data_stream_1_V_dout;
    sc_in< sc_logic > src_data_stream_1_V_empty_n;
    sc_out< sc_logic > src_data_stream_1_V_read;
    sc_in< sc_lv<32> > src_data_stream_2_V_dout;
    sc_in< sc_logic > src_data_stream_2_V_empty_n;
    sc_out< sc_logic > src_data_stream_2_V_read;
    sc_out< sc_lv<32> > dst_data_stream_0_V_din;
    sc_in< sc_logic > dst_data_stream_0_V_full_n;
    sc_out< sc_logic > dst_data_stream_0_V_write;
    sc_out< sc_lv<32> > dst_data_stream_1_V_din;
    sc_in< sc_logic > dst_data_stream_1_V_full_n;
    sc_out< sc_logic > dst_data_stream_1_V_write;
    sc_out< sc_lv<32> > dst_data_stream_2_V_din;
    sc_in< sc_logic > dst_data_stream_2_V_full_n;
    sc_out< sc_logic > dst_data_stream_2_V_write;
    sc_in< sc_lv<4> > brightness_index_V;
    sc_in< sc_lv<1> > color_correct_V;
    sc_signal< sc_logic > ap_var_for_const0;


    // Module declarations
    brightness_color_adj(sc_module_name name);
    SC_HAS_PROCESS(brightness_color_adj);

    ~brightness_color_adj();

    sc_trace_file* mVcdFile;

    brightness_color_fYi* lut_perceptual_brigh_1_U;
    brightness_color_g8j* lut_perceptual_brigh_U;
    brightness_color_hbi* lut_perceptual_brigh_2_U;
    hls_video_processibs<1,3,32,9,32>* hls_video_processibs_U40;
    hls_video_processibs<1,3,32,9,32>* hls_video_processibs_U41;
    hls_video_processibs<1,3,32,9,32>* hls_video_processibs_U42;
    sc_signal< sc_logic > real_start;
    sc_signal< sc_logic > start_once_reg;
    sc_signal< sc_logic > ap_done_reg;
    sc_signal< sc_lv<12> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_logic > internal_ap_ready;
    sc_signal< sc_lv<4> > lut_perceptual_brigh_1_address0;
    sc_signal< sc_logic > lut_perceptual_brigh_1_ce0;
    sc_signal< sc_lv<9> > lut_perceptual_brigh_1_q0;
    sc_signal< sc_lv<4> > lut_perceptual_brigh_address0;
    sc_signal< sc_logic > lut_perceptual_brigh_ce0;
    sc_signal< sc_lv<8> > lut_perceptual_brigh_q0;
    sc_signal< sc_lv<4> > lut_perceptual_brigh_2_address0;
    sc_signal< sc_logic > lut_perceptual_brigh_2_ce0;
    sc_signal< sc_lv<8> > lut_perceptual_brigh_2_q0;
    sc_signal< sc_logic > src_data_stream_0_V_blk_n;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_logic > src_data_stream_1_V_blk_n;
    sc_signal< sc_logic > src_data_stream_2_V_blk_n;
    sc_signal< sc_logic > dst_data_stream_0_V_blk_n;
    sc_signal< sc_logic > ap_CS_fsm_state11;
    sc_signal< sc_logic > dst_data_stream_1_V_blk_n;
    sc_signal< sc_logic > dst_data_stream_2_V_blk_n;
    sc_signal< bool > ap_block_state1;
    sc_signal< sc_lv<32> > scale_r_cast_fu_209_p1;
    sc_signal< sc_lv<32> > scale_r_cast_reg_338;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<32> > scale_g2_cast_fu_237_p1;
    sc_signal< sc_lv<32> > scale_g2_cast_reg_343;
    sc_signal< sc_lv<32> > scale_b2_cast_fu_241_p1;
    sc_signal< sc_lv<32> > scale_b2_cast_reg_348;
    sc_signal< sc_lv<1> > exitcond4_fu_245_p2;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<5> > r_V_fu_251_p2;
    sc_signal< sc_lv<5> > r_V_reg_357;
    sc_signal< sc_lv<6> > c_V_fu_263_p2;
    sc_signal< sc_lv<6> > c_V_reg_365;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<32> > tmp_32_reg_370;
    sc_signal< bool > ap_block_state5;
    sc_signal< sc_lv<32> > tmp_33_reg_375;
    sc_signal< sc_lv<32> > tmp_31_reg_380;
    sc_signal< sc_lv<24> > tmp_19_reg_385;
    sc_signal< sc_logic > ap_CS_fsm_state8;
    sc_signal< sc_lv<24> > tmp_22_reg_390;
    sc_signal< sc_logic > ap_CS_fsm_state9;
    sc_signal< sc_lv<24> > tmp_25_reg_395;
    sc_signal< sc_logic > ap_CS_fsm_state10;
    sc_signal< sc_lv<5> > t_V_reg_180;
    sc_signal< sc_logic > ap_CS_fsm_state12;
    sc_signal< sc_lv<6> > t_V_3_reg_191;
    sc_signal< bool > ap_block_state11;
    sc_signal< sc_lv<64> > tmp_fu_202_p1;
    sc_signal< sc_lv<9> > scale_g_cast2_fu_213_p1;
    sc_signal< sc_lv<9> > scale_b_cast1_fu_217_p1;
    sc_signal< sc_lv<9> > scale_g2_fu_221_p3;
    sc_signal< sc_lv<9> > scale_b2_fu_229_p3;
    sc_signal< sc_lv<9> > grp_fu_269_p1;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_lv<9> > grp_fu_273_p1;
    sc_signal< sc_logic > ap_CS_fsm_state7;
    sc_signal< sc_lv<32> > grp_fu_269_p2;
    sc_signal< sc_lv<9> > grp_fu_287_p1;
    sc_signal< sc_lv<32> > grp_fu_273_p2;
    sc_signal< sc_lv<32> > grp_fu_287_p2;
    sc_signal< sc_lv<1> > exitcond_fu_257_p2;
    sc_signal< sc_lv<12> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<12> ap_ST_fsm_state1;
    static const sc_lv<12> ap_ST_fsm_state2;
    static const sc_lv<12> ap_ST_fsm_state3;
    static const sc_lv<12> ap_ST_fsm_state4;
    static const sc_lv<12> ap_ST_fsm_state5;
    static const sc_lv<12> ap_ST_fsm_state6;
    static const sc_lv<12> ap_ST_fsm_state7;
    static const sc_lv<12> ap_ST_fsm_state8;
    static const sc_lv<12> ap_ST_fsm_state9;
    static const sc_lv<12> ap_ST_fsm_state10;
    static const sc_lv<12> ap_ST_fsm_state11;
    static const sc_lv<12> ap_ST_fsm_state12;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_A;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<32> ap_const_lv32_9;
    static const sc_lv<5> ap_const_lv5_0;
    static const sc_lv<32> ap_const_lv32_B;
    static const sc_lv<6> ap_const_lv6_0;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<5> ap_const_lv5_1E;
    static const sc_lv<5> ap_const_lv5_1;
    static const sc_lv<6> ap_const_lv6_3C;
    static const sc_lv<6> ap_const_lv6_1;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<32> ap_const_lv32_1F;
    static const sc_lv<1> ap_const_lv1_1;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state10();
    void thread_ap_CS_fsm_state11();
    void thread_ap_CS_fsm_state12();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_CS_fsm_state6();
    void thread_ap_CS_fsm_state7();
    void thread_ap_CS_fsm_state8();
    void thread_ap_CS_fsm_state9();
    void thread_ap_block_state1();
    void thread_ap_block_state11();
    void thread_ap_block_state5();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_c_V_fu_263_p2();
    void thread_dst_data_stream_0_V_blk_n();
    void thread_dst_data_stream_0_V_din();
    void thread_dst_data_stream_0_V_write();
    void thread_dst_data_stream_1_V_blk_n();
    void thread_dst_data_stream_1_V_din();
    void thread_dst_data_stream_1_V_write();
    void thread_dst_data_stream_2_V_blk_n();
    void thread_dst_data_stream_2_V_din();
    void thread_dst_data_stream_2_V_write();
    void thread_exitcond4_fu_245_p2();
    void thread_exitcond_fu_257_p2();
    void thread_grp_fu_269_p1();
    void thread_grp_fu_273_p1();
    void thread_grp_fu_287_p1();
    void thread_internal_ap_ready();
    void thread_lut_perceptual_brigh_1_address0();
    void thread_lut_perceptual_brigh_1_ce0();
    void thread_lut_perceptual_brigh_2_address0();
    void thread_lut_perceptual_brigh_2_ce0();
    void thread_lut_perceptual_brigh_address0();
    void thread_lut_perceptual_brigh_ce0();
    void thread_r_V_fu_251_p2();
    void thread_real_start();
    void thread_scale_b2_cast_fu_241_p1();
    void thread_scale_b2_fu_229_p3();
    void thread_scale_b_cast1_fu_217_p1();
    void thread_scale_g2_cast_fu_237_p1();
    void thread_scale_g2_fu_221_p3();
    void thread_scale_g_cast2_fu_213_p1();
    void thread_scale_r_cast_fu_209_p1();
    void thread_src_data_stream_0_V_blk_n();
    void thread_src_data_stream_0_V_read();
    void thread_src_data_stream_1_V_blk_n();
    void thread_src_data_stream_1_V_read();
    void thread_src_data_stream_2_V_blk_n();
    void thread_src_data_stream_2_V_read();
    void thread_start_out();
    void thread_start_write();
    void thread_tmp_fu_202_p1();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
