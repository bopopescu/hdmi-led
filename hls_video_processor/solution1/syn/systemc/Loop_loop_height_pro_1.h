// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _Loop_loop_height_pro_1_HH_
#define _Loop_loop_height_pro_1_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "Loop_loop_height_bkb.h"

namespace ap_rtl {

struct Loop_loop_height_pro_1 : public sc_module {
    // Port declarations 28
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_in< sc_logic > start_full_n;
    sc_out< sc_logic > ap_done;
    sc_in< sc_logic > ap_continue;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_logic > start_out;
    sc_out< sc_logic > start_write;
    sc_in< sc_lv<8> > img_crop_data_stream_0_V_dout;
    sc_in< sc_logic > img_crop_data_stream_0_V_empty_n;
    sc_out< sc_logic > img_crop_data_stream_0_V_read;
    sc_in< sc_lv<8> > img_crop_data_stream_1_V_dout;
    sc_in< sc_logic > img_crop_data_stream_1_V_empty_n;
    sc_out< sc_logic > img_crop_data_stream_1_V_read;
    sc_in< sc_lv<8> > img_crop_data_stream_2_V_dout;
    sc_in< sc_logic > img_crop_data_stream_2_V_empty_n;
    sc_out< sc_logic > img_crop_data_stream_2_V_read;
    sc_out< sc_lv<32> > img_nogamma_data_stream_0_V_din;
    sc_in< sc_logic > img_nogamma_data_stream_0_V_full_n;
    sc_out< sc_logic > img_nogamma_data_stream_0_V_write;
    sc_out< sc_lv<32> > img_nogamma_data_stream_1_V_din;
    sc_in< sc_logic > img_nogamma_data_stream_1_V_full_n;
    sc_out< sc_logic > img_nogamma_data_stream_1_V_write;
    sc_out< sc_lv<32> > img_nogamma_data_stream_2_V_din;
    sc_in< sc_logic > img_nogamma_data_stream_2_V_full_n;
    sc_out< sc_logic > img_nogamma_data_stream_2_V_write;


    // Module declarations
    Loop_loop_height_pro_1(sc_module_name name);
    SC_HAS_PROCESS(Loop_loop_height_pro_1);

    ~Loop_loop_height_pro_1();

    sc_trace_file* mVcdFile;

    Loop_loop_height_bkb* lut_srgb_decode_U;
    sc_signal< sc_logic > real_start;
    sc_signal< sc_logic > start_once_reg;
    sc_signal< sc_logic > ap_done_reg;
    sc_signal< sc_lv<4> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_logic > internal_ap_ready;
    sc_signal< sc_logic > lut_srgb_decode_ce0;
    sc_signal< sc_lv<12> > lut_srgb_decode_q0;
    sc_signal< sc_logic > lut_srgb_decode_ce1;
    sc_signal< sc_lv<12> > lut_srgb_decode_q1;
    sc_signal< sc_logic > lut_srgb_decode_ce2;
    sc_signal< sc_lv<12> > lut_srgb_decode_q2;
    sc_signal< sc_logic > img_crop_data_stream_0_V_blk_n;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage0;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter1;
    sc_signal< bool > ap_block_pp0_stage0;
    sc_signal< sc_lv<1> > exitcond_i4_reg_225;
    sc_signal< sc_logic > img_crop_data_stream_1_V_blk_n;
    sc_signal< sc_logic > img_crop_data_stream_2_V_blk_n;
    sc_signal< sc_logic > img_nogamma_data_stream_0_V_blk_n;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter4;
    sc_signal< sc_lv<1> > exitcond_i4_reg_225_pp0_iter3_reg;
    sc_signal< sc_logic > img_nogamma_data_stream_1_V_blk_n;
    sc_signal< sc_logic > img_nogamma_data_stream_2_V_blk_n;
    sc_signal< sc_lv<11> > t_V_1_reg_154;
    sc_signal< sc_lv<1> > exitcond113_i_fu_165_p2;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<10> > r_V_fu_171_p2;
    sc_signal< sc_lv<10> > r_V_reg_220;
    sc_signal< sc_lv<1> > exitcond_i4_fu_177_p2;
    sc_signal< bool > ap_block_state3_pp0_stage0_iter0;
    sc_signal< bool > ap_block_state4_pp0_stage0_iter1;
    sc_signal< bool > ap_block_state5_pp0_stage0_iter2;
    sc_signal< bool > ap_block_state6_pp0_stage0_iter3;
    sc_signal< bool > ap_block_state7_pp0_stage0_iter4;
    sc_signal< bool > ap_block_pp0_stage0_11001;
    sc_signal< sc_lv<1> > exitcond_i4_reg_225_pp0_iter1_reg;
    sc_signal< sc_lv<1> > exitcond_i4_reg_225_pp0_iter2_reg;
    sc_signal< sc_lv<11> > c_V_fu_183_p2;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter0;
    sc_signal< sc_lv<8> > lut_srgb_decode_addr_reg_234;
    sc_signal< sc_lv<8> > lut_srgb_decode_addr_1_reg_239;
    sc_signal< sc_lv<8> > lut_srgb_decode_addr_2_reg_244;
    sc_signal< sc_lv<12> > tmp_41_reg_249;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter3;
    sc_signal< sc_lv<12> > tmp_42_reg_254;
    sc_signal< sc_lv<12> > tmp_43_reg_259;
    sc_signal< bool > ap_block_pp0_stage0_subdone;
    sc_signal< sc_logic > ap_condition_pp0_exit_iter0_state3;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter2;
    sc_signal< sc_lv<10> > t_V_3_reg_143;
    sc_signal< sc_logic > ap_CS_fsm_state8;
    sc_signal< bool > ap_block_state1;
    sc_signal< sc_lv<64> > tmp_30_fu_189_p1;
    sc_signal< sc_lv<64> > tmp_39_1_fu_194_p1;
    sc_signal< sc_lv<64> > tmp_39_2_fu_199_p1;
    sc_signal< bool > ap_block_pp0_stage0_01001;
    sc_signal< sc_lv<4> > ap_NS_fsm;
    sc_signal< sc_logic > ap_idle_pp0;
    sc_signal< sc_logic > ap_enable_pp0;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<4> ap_ST_fsm_state1;
    static const sc_lv<4> ap_ST_fsm_state2;
    static const sc_lv<4> ap_ST_fsm_pp0_stage0;
    static const sc_lv<4> ap_ST_fsm_state8;
    static const bool ap_const_boolean_1;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const bool ap_const_boolean_0;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<10> ap_const_lv10_0;
    static const sc_lv<11> ap_const_lv11_0;
    static const sc_lv<10> ap_const_lv10_3C0;
    static const sc_lv<10> ap_const_lv10_1;
    static const sc_lv<11> ap_const_lv11_780;
    static const sc_lv<11> ap_const_lv11_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_pp0_stage0();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state8();
    void thread_ap_block_pp0_stage0();
    void thread_ap_block_pp0_stage0_01001();
    void thread_ap_block_pp0_stage0_11001();
    void thread_ap_block_pp0_stage0_subdone();
    void thread_ap_block_state1();
    void thread_ap_block_state3_pp0_stage0_iter0();
    void thread_ap_block_state4_pp0_stage0_iter1();
    void thread_ap_block_state5_pp0_stage0_iter2();
    void thread_ap_block_state6_pp0_stage0_iter3();
    void thread_ap_block_state7_pp0_stage0_iter4();
    void thread_ap_condition_pp0_exit_iter0_state3();
    void thread_ap_done();
    void thread_ap_enable_pp0();
    void thread_ap_idle();
    void thread_ap_idle_pp0();
    void thread_ap_ready();
    void thread_c_V_fu_183_p2();
    void thread_exitcond113_i_fu_165_p2();
    void thread_exitcond_i4_fu_177_p2();
    void thread_img_crop_data_stream_0_V_blk_n();
    void thread_img_crop_data_stream_0_V_read();
    void thread_img_crop_data_stream_1_V_blk_n();
    void thread_img_crop_data_stream_1_V_read();
    void thread_img_crop_data_stream_2_V_blk_n();
    void thread_img_crop_data_stream_2_V_read();
    void thread_img_nogamma_data_stream_0_V_blk_n();
    void thread_img_nogamma_data_stream_0_V_din();
    void thread_img_nogamma_data_stream_0_V_write();
    void thread_img_nogamma_data_stream_1_V_blk_n();
    void thread_img_nogamma_data_stream_1_V_din();
    void thread_img_nogamma_data_stream_1_V_write();
    void thread_img_nogamma_data_stream_2_V_blk_n();
    void thread_img_nogamma_data_stream_2_V_din();
    void thread_img_nogamma_data_stream_2_V_write();
    void thread_internal_ap_ready();
    void thread_lut_srgb_decode_ce0();
    void thread_lut_srgb_decode_ce1();
    void thread_lut_srgb_decode_ce2();
    void thread_r_V_fu_171_p2();
    void thread_real_start();
    void thread_start_out();
    void thread_start_write();
    void thread_tmp_30_fu_189_p1();
    void thread_tmp_39_1_fu_194_p1();
    void thread_tmp_39_2_fu_199_p1();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
