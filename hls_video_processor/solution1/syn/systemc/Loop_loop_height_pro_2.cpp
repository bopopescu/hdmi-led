// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "Loop_loop_height_pro_2.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic Loop_loop_height_pro_2::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic Loop_loop_height_pro_2::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<4> Loop_loop_height_pro_2::ap_ST_fsm_state1 = "1";
const sc_lv<4> Loop_loop_height_pro_2::ap_ST_fsm_state2 = "10";
const sc_lv<4> Loop_loop_height_pro_2::ap_ST_fsm_pp0_stage0 = "100";
const sc_lv<4> Loop_loop_height_pro_2::ap_ST_fsm_state5 = "1000";
const bool Loop_loop_height_pro_2::ap_const_boolean_1 = true;
const sc_lv<32> Loop_loop_height_pro_2::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> Loop_loop_height_pro_2::ap_const_lv32_2 = "10";
const bool Loop_loop_height_pro_2::ap_const_boolean_0 = false;
const sc_lv<1> Loop_loop_height_pro_2::ap_const_lv1_1 = "1";
const sc_lv<32> Loop_loop_height_pro_2::ap_const_lv32_1 = "1";
const sc_lv<1> Loop_loop_height_pro_2::ap_const_lv1_0 = "0";
const sc_lv<32> Loop_loop_height_pro_2::ap_const_lv32_3 = "11";
const sc_lv<32> Loop_loop_height_pro_2::ap_const_lv32_3B = "111011";
const sc_lv<32> Loop_loop_height_pro_2::ap_const_lv32_3FC = "1111111100";

Loop_loop_height_pro_2::Loop_loop_height_pro_2(sc_module_name name) : sc_module(name), mVcdFile(0) {

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_pp0_stage0);

    SC_METHOD(thread_ap_block_pp0_stage0_01001);
    sensitive << ( img_input_data_strea_empty_n );
    sensitive << ( img_input_data_strea_1_empty_n );
    sensitive << ( img_input_data_strea_2_empty_n );
    sensitive << ( img_crop_data_stream_full_n );
    sensitive << ( img_crop_data_stream_1_full_n );
    sensitive << ( img_crop_data_stream_2_full_n );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( or_cond_i_i_i_i_reg_211 );

    SC_METHOD(thread_ap_block_pp0_stage0_11001);
    sensitive << ( img_input_data_strea_empty_n );
    sensitive << ( img_input_data_strea_1_empty_n );
    sensitive << ( img_input_data_strea_2_empty_n );
    sensitive << ( img_crop_data_stream_full_n );
    sensitive << ( img_crop_data_stream_1_full_n );
    sensitive << ( img_crop_data_stream_2_full_n );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( or_cond_i_i_i_i_reg_211 );

    SC_METHOD(thread_ap_block_pp0_stage0_subdone);
    sensitive << ( img_input_data_strea_empty_n );
    sensitive << ( img_input_data_strea_1_empty_n );
    sensitive << ( img_input_data_strea_2_empty_n );
    sensitive << ( img_crop_data_stream_full_n );
    sensitive << ( img_crop_data_stream_1_full_n );
    sensitive << ( img_crop_data_stream_2_full_n );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( or_cond_i_i_i_i_reg_211 );

    SC_METHOD(thread_ap_block_state1);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( img_input_cols_V_c20_empty_n );

    SC_METHOD(thread_ap_block_state3_pp0_stage0_iter0);

    SC_METHOD(thread_ap_block_state4_pp0_stage0_iter1);
    sensitive << ( img_input_data_strea_empty_n );
    sensitive << ( img_input_data_strea_1_empty_n );
    sensitive << ( img_input_data_strea_2_empty_n );
    sensitive << ( img_crop_data_stream_full_n );
    sensitive << ( img_crop_data_stream_1_full_n );
    sensitive << ( img_crop_data_stream_2_full_n );
    sensitive << ( or_cond_i_i_i_i_reg_211 );

    SC_METHOD(thread_ap_condition_pp0_exit_iter0_state3);
    sensitive << ( exitcond_i_i_i_i_fu_181_p2 );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_done_reg );
    sensitive << ( exitcond89_i_i_i_i_fu_152_p2 );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_ap_enable_pp0);
    sensitive << ( ap_idle_pp0 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( real_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_idle_pp0);
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( internal_ap_ready );

    SC_METHOD(thread_c_V_fu_186_p2);
    sensitive << ( t_V_4_reg_133 );

    SC_METHOD(thread_cols_V_fu_148_p1);
    sensitive << ( img_input_cols_V_c20_dout );

    SC_METHOD(thread_exitcond89_i_i_i_i_fu_152_p2);
    sensitive << ( p_read_cast_i_reg_192 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( t_V_reg_122 );

    SC_METHOD(thread_exitcond_i_i_i_i_fu_181_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( t_V_4_reg_133 );
    sensitive << ( cols_V_reg_197 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_img_crop_data_stream_1_blk_n);
    sensitive << ( img_crop_data_stream_1_full_n );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( or_cond_i_i_i_i_reg_211 );

    SC_METHOD(thread_img_crop_data_stream_1_din);
    sensitive << ( img_input_data_strea_1_dout );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( or_cond_i_i_i_i_reg_211 );
    sensitive << ( ap_block_pp0_stage0_01001 );

    SC_METHOD(thread_img_crop_data_stream_1_write);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( or_cond_i_i_i_i_reg_211 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_img_crop_data_stream_2_blk_n);
    sensitive << ( img_crop_data_stream_2_full_n );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( or_cond_i_i_i_i_reg_211 );

    SC_METHOD(thread_img_crop_data_stream_2_din);
    sensitive << ( img_input_data_strea_2_dout );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( or_cond_i_i_i_i_reg_211 );
    sensitive << ( ap_block_pp0_stage0_01001 );

    SC_METHOD(thread_img_crop_data_stream_2_write);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( or_cond_i_i_i_i_reg_211 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_img_crop_data_stream_blk_n);
    sensitive << ( img_crop_data_stream_full_n );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( or_cond_i_i_i_i_reg_211 );

    SC_METHOD(thread_img_crop_data_stream_din);
    sensitive << ( img_input_data_strea_dout );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( or_cond_i_i_i_i_reg_211 );
    sensitive << ( ap_block_pp0_stage0_01001 );

    SC_METHOD(thread_img_crop_data_stream_write);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( or_cond_i_i_i_i_reg_211 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_img_input_cols_V_c20_blk_n);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( img_input_cols_V_c20_empty_n );

    SC_METHOD(thread_img_input_cols_V_c20_read);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( img_input_cols_V_c20_empty_n );

    SC_METHOD(thread_img_input_data_strea_1_blk_n);
    sensitive << ( img_input_data_strea_1_empty_n );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_img_input_data_strea_1_read);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_img_input_data_strea_2_blk_n);
    sensitive << ( img_input_data_strea_2_empty_n );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_img_input_data_strea_2_read);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_img_input_data_strea_blk_n);
    sensitive << ( img_input_data_strea_empty_n );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_img_input_data_strea_read);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_internal_ap_ready);
    sensitive << ( exitcond89_i_i_i_i_fu_152_p2 );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_or_cond_i_i_i_i_fu_175_p2);
    sensitive << ( tmp_i_i_i_fu_163_p2 );
    sensitive << ( tmp_i_i_i_59_fu_169_p2 );

    SC_METHOD(thread_p_read_cast_i_fu_144_p1);
    sensitive << ( extLd_loc_channel );

    SC_METHOD(thread_r_V_fu_157_p2);
    sensitive << ( t_V_reg_122 );

    SC_METHOD(thread_real_start);
    sensitive << ( ap_start );
    sensitive << ( start_full_n );
    sensitive << ( start_once_reg );

    SC_METHOD(thread_start_out);
    sensitive << ( real_start );

    SC_METHOD(thread_start_write);
    sensitive << ( real_start );
    sensitive << ( start_once_reg );

    SC_METHOD(thread_tmp_i_i_i_59_fu_169_p2);
    sensitive << ( exitcond89_i_i_i_i_fu_152_p2 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( t_V_reg_122 );

    SC_METHOD(thread_tmp_i_i_i_fu_163_p2);
    sensitive << ( exitcond89_i_i_i_i_fu_152_p2 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( t_V_reg_122 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( img_input_cols_V_c20_empty_n );
    sensitive << ( exitcond89_i_i_i_i_fu_152_p2 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond_i_i_i_i_fu_181_p2 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage0_subdone );

    start_once_reg = SC_LOGIC_0;
    ap_done_reg = SC_LOGIC_0;
    ap_CS_fsm = "0001";
    ap_enable_reg_pp0_iter1 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter0 = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "Loop_loop_height_pro_2_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, start_full_n, "(port)start_full_n");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_continue, "(port)ap_continue");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, start_out, "(port)start_out");
    sc_trace(mVcdFile, start_write, "(port)start_write");
    sc_trace(mVcdFile, img_input_cols_V_c20_dout, "(port)img_input_cols_V_c20_dout");
    sc_trace(mVcdFile, img_input_cols_V_c20_empty_n, "(port)img_input_cols_V_c20_empty_n");
    sc_trace(mVcdFile, img_input_cols_V_c20_read, "(port)img_input_cols_V_c20_read");
    sc_trace(mVcdFile, extLd_loc_channel, "(port)extLd_loc_channel");
    sc_trace(mVcdFile, img_input_data_strea_dout, "(port)img_input_data_strea_dout");
    sc_trace(mVcdFile, img_input_data_strea_empty_n, "(port)img_input_data_strea_empty_n");
    sc_trace(mVcdFile, img_input_data_strea_read, "(port)img_input_data_strea_read");
    sc_trace(mVcdFile, img_input_data_strea_1_dout, "(port)img_input_data_strea_1_dout");
    sc_trace(mVcdFile, img_input_data_strea_1_empty_n, "(port)img_input_data_strea_1_empty_n");
    sc_trace(mVcdFile, img_input_data_strea_1_read, "(port)img_input_data_strea_1_read");
    sc_trace(mVcdFile, img_input_data_strea_2_dout, "(port)img_input_data_strea_2_dout");
    sc_trace(mVcdFile, img_input_data_strea_2_empty_n, "(port)img_input_data_strea_2_empty_n");
    sc_trace(mVcdFile, img_input_data_strea_2_read, "(port)img_input_data_strea_2_read");
    sc_trace(mVcdFile, img_crop_data_stream_din, "(port)img_crop_data_stream_din");
    sc_trace(mVcdFile, img_crop_data_stream_full_n, "(port)img_crop_data_stream_full_n");
    sc_trace(mVcdFile, img_crop_data_stream_write, "(port)img_crop_data_stream_write");
    sc_trace(mVcdFile, img_crop_data_stream_1_din, "(port)img_crop_data_stream_1_din");
    sc_trace(mVcdFile, img_crop_data_stream_1_full_n, "(port)img_crop_data_stream_1_full_n");
    sc_trace(mVcdFile, img_crop_data_stream_1_write, "(port)img_crop_data_stream_1_write");
    sc_trace(mVcdFile, img_crop_data_stream_2_din, "(port)img_crop_data_stream_2_din");
    sc_trace(mVcdFile, img_crop_data_stream_2_full_n, "(port)img_crop_data_stream_2_full_n");
    sc_trace(mVcdFile, img_crop_data_stream_2_write, "(port)img_crop_data_stream_2_write");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, real_start, "real_start");
    sc_trace(mVcdFile, start_once_reg, "start_once_reg");
    sc_trace(mVcdFile, ap_done_reg, "ap_done_reg");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, internal_ap_ready, "internal_ap_ready");
    sc_trace(mVcdFile, img_input_cols_V_c20_blk_n, "img_input_cols_V_c20_blk_n");
    sc_trace(mVcdFile, img_input_data_strea_blk_n, "img_input_data_strea_blk_n");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage0, "ap_CS_fsm_pp0_stage0");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter1, "ap_enable_reg_pp0_iter1");
    sc_trace(mVcdFile, ap_block_pp0_stage0, "ap_block_pp0_stage0");
    sc_trace(mVcdFile, img_input_data_strea_1_blk_n, "img_input_data_strea_1_blk_n");
    sc_trace(mVcdFile, img_input_data_strea_2_blk_n, "img_input_data_strea_2_blk_n");
    sc_trace(mVcdFile, img_crop_data_stream_blk_n, "img_crop_data_stream_blk_n");
    sc_trace(mVcdFile, or_cond_i_i_i_i_reg_211, "or_cond_i_i_i_i_reg_211");
    sc_trace(mVcdFile, img_crop_data_stream_1_blk_n, "img_crop_data_stream_1_blk_n");
    sc_trace(mVcdFile, img_crop_data_stream_2_blk_n, "img_crop_data_stream_2_blk_n");
    sc_trace(mVcdFile, t_V_4_reg_133, "t_V_4_reg_133");
    sc_trace(mVcdFile, p_read_cast_i_fu_144_p1, "p_read_cast_i_fu_144_p1");
    sc_trace(mVcdFile, p_read_cast_i_reg_192, "p_read_cast_i_reg_192");
    sc_trace(mVcdFile, ap_block_state1, "ap_block_state1");
    sc_trace(mVcdFile, cols_V_fu_148_p1, "cols_V_fu_148_p1");
    sc_trace(mVcdFile, cols_V_reg_197, "cols_V_reg_197");
    sc_trace(mVcdFile, exitcond89_i_i_i_i_fu_152_p2, "exitcond89_i_i_i_i_fu_152_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, r_V_fu_157_p2, "r_V_fu_157_p2");
    sc_trace(mVcdFile, r_V_reg_206, "r_V_reg_206");
    sc_trace(mVcdFile, or_cond_i_i_i_i_fu_175_p2, "or_cond_i_i_i_i_fu_175_p2");
    sc_trace(mVcdFile, exitcond_i_i_i_i_fu_181_p2, "exitcond_i_i_i_i_fu_181_p2");
    sc_trace(mVcdFile, ap_block_state3_pp0_stage0_iter0, "ap_block_state3_pp0_stage0_iter0");
    sc_trace(mVcdFile, ap_block_state4_pp0_stage0_iter1, "ap_block_state4_pp0_stage0_iter1");
    sc_trace(mVcdFile, ap_block_pp0_stage0_11001, "ap_block_pp0_stage0_11001");
    sc_trace(mVcdFile, c_V_fu_186_p2, "c_V_fu_186_p2");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter0, "ap_enable_reg_pp0_iter0");
    sc_trace(mVcdFile, ap_block_pp0_stage0_subdone, "ap_block_pp0_stage0_subdone");
    sc_trace(mVcdFile, ap_condition_pp0_exit_iter0_state3, "ap_condition_pp0_exit_iter0_state3");
    sc_trace(mVcdFile, t_V_reg_122, "t_V_reg_122");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, ap_block_pp0_stage0_01001, "ap_block_pp0_stage0_01001");
    sc_trace(mVcdFile, tmp_i_i_i_fu_163_p2, "tmp_i_i_i_fu_163_p2");
    sc_trace(mVcdFile, tmp_i_i_i_59_fu_169_p2, "tmp_i_i_i_59_fu_169_p2");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ap_idle_pp0, "ap_idle_pp0");
    sc_trace(mVcdFile, ap_enable_pp0, "ap_enable_pp0");
#endif

    }
}

Loop_loop_height_pro_2::~Loop_loop_height_pro_2() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

}

void Loop_loop_height_pro_2::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_done_reg = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_continue.read())) {
            ap_done_reg = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                    esl_seteq<1,1,1>(ap_const_lv1_1, exitcond89_i_i_i_i_fu_152_p2.read()))) {
            ap_done_reg = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state3.read()))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                    esl_seteq<1,1,1>(exitcond89_i_i_i_i_fu_152_p2.read(), ap_const_lv1_0))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter1 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state3.read()))) {
            ap_enable_reg_pp0_iter1 = (ap_condition_pp0_exit_iter0_state3.read() ^ ap_const_logic_1);
        } else if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter1 = ap_enable_reg_pp0_iter0.read();
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                    esl_seteq<1,1,1>(exitcond89_i_i_i_i_fu_152_p2.read(), ap_const_lv1_0))) {
            ap_enable_reg_pp0_iter1 = ap_const_logic_0;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        start_once_reg = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, real_start.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_0, internal_ap_ready.read()))) {
            start_once_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, internal_ap_ready.read())) {
            start_once_reg = ap_const_logic_0;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_i_i_i_i_fu_181_p2.read()))) {
        t_V_4_reg_133 = c_V_fu_186_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                esl_seteq<1,1,1>(exitcond89_i_i_i_i_fu_152_p2.read(), ap_const_lv1_0))) {
        t_V_4_reg_133 = ap_const_lv32_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        t_V_reg_122 = r_V_reg_206.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, img_input_cols_V_c20_empty_n.read())))) {
        t_V_reg_122 = ap_const_lv32_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, img_input_cols_V_c20_empty_n.read())))) {
        cols_V_reg_197 = cols_V_fu_148_p1.read();
        p_read_cast_i_reg_192 = p_read_cast_i_fu_144_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(exitcond89_i_i_i_i_fu_152_p2.read(), ap_const_lv1_0))) {
        or_cond_i_i_i_i_reg_211 = or_cond_i_i_i_i_fu_175_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        r_V_reg_206 = r_V_fu_157_p2.read();
    }
}

void Loop_loop_height_pro_2::thread_ap_CS_fsm_pp0_stage0() {
    ap_CS_fsm_pp0_stage0 = ap_CS_fsm.read()[2];
}

void Loop_loop_height_pro_2::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void Loop_loop_height_pro_2::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void Loop_loop_height_pro_2::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[3];
}

void Loop_loop_height_pro_2::thread_ap_block_pp0_stage0() {
    ap_block_pp0_stage0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Loop_loop_height_pro_2::thread_ap_block_pp0_stage0_01001() {
    ap_block_pp0_stage0_01001 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && (esl_seteq<1,1,1>(ap_const_logic_0, img_input_data_strea_empty_n.read()) || 
  esl_seteq<1,1,1>(ap_const_logic_0, img_input_data_strea_1_empty_n.read()) || 
  esl_seteq<1,1,1>(ap_const_logic_0, img_input_data_strea_2_empty_n.read()) || 
  (esl_seteq<1,1,1>(or_cond_i_i_i_i_reg_211.read(), ap_const_lv1_1) && 
   esl_seteq<1,1,1>(ap_const_logic_0, img_crop_data_stream_full_n.read())) || 
  (esl_seteq<1,1,1>(or_cond_i_i_i_i_reg_211.read(), ap_const_lv1_1) && 
   esl_seteq<1,1,1>(ap_const_logic_0, img_crop_data_stream_1_full_n.read())) || 
  (esl_seteq<1,1,1>(or_cond_i_i_i_i_reg_211.read(), ap_const_lv1_1) && 
   esl_seteq<1,1,1>(ap_const_logic_0, img_crop_data_stream_2_full_n.read()))));
}

void Loop_loop_height_pro_2::thread_ap_block_pp0_stage0_11001() {
    ap_block_pp0_stage0_11001 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && (esl_seteq<1,1,1>(ap_const_logic_0, img_input_data_strea_empty_n.read()) || 
  esl_seteq<1,1,1>(ap_const_logic_0, img_input_data_strea_1_empty_n.read()) || 
  esl_seteq<1,1,1>(ap_const_logic_0, img_input_data_strea_2_empty_n.read()) || 
  (esl_seteq<1,1,1>(or_cond_i_i_i_i_reg_211.read(), ap_const_lv1_1) && 
   esl_seteq<1,1,1>(ap_const_logic_0, img_crop_data_stream_full_n.read())) || 
  (esl_seteq<1,1,1>(or_cond_i_i_i_i_reg_211.read(), ap_const_lv1_1) && 
   esl_seteq<1,1,1>(ap_const_logic_0, img_crop_data_stream_1_full_n.read())) || 
  (esl_seteq<1,1,1>(or_cond_i_i_i_i_reg_211.read(), ap_const_lv1_1) && 
   esl_seteq<1,1,1>(ap_const_logic_0, img_crop_data_stream_2_full_n.read()))));
}

void Loop_loop_height_pro_2::thread_ap_block_pp0_stage0_subdone() {
    ap_block_pp0_stage0_subdone = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && (esl_seteq<1,1,1>(ap_const_logic_0, img_input_data_strea_empty_n.read()) || 
  esl_seteq<1,1,1>(ap_const_logic_0, img_input_data_strea_1_empty_n.read()) || 
  esl_seteq<1,1,1>(ap_const_logic_0, img_input_data_strea_2_empty_n.read()) || 
  (esl_seteq<1,1,1>(or_cond_i_i_i_i_reg_211.read(), ap_const_lv1_1) && 
   esl_seteq<1,1,1>(ap_const_logic_0, img_crop_data_stream_full_n.read())) || 
  (esl_seteq<1,1,1>(or_cond_i_i_i_i_reg_211.read(), ap_const_lv1_1) && 
   esl_seteq<1,1,1>(ap_const_logic_0, img_crop_data_stream_1_full_n.read())) || 
  (esl_seteq<1,1,1>(or_cond_i_i_i_i_reg_211.read(), ap_const_lv1_1) && 
   esl_seteq<1,1,1>(ap_const_logic_0, img_crop_data_stream_2_full_n.read()))));
}

void Loop_loop_height_pro_2::thread_ap_block_state1() {
    ap_block_state1 = (esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, img_input_cols_V_c20_empty_n.read()));
}

void Loop_loop_height_pro_2::thread_ap_block_state3_pp0_stage0_iter0() {
    ap_block_state3_pp0_stage0_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Loop_loop_height_pro_2::thread_ap_block_state4_pp0_stage0_iter1() {
    ap_block_state4_pp0_stage0_iter1 = (esl_seteq<1,1,1>(ap_const_logic_0, img_input_data_strea_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, img_input_data_strea_1_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, img_input_data_strea_2_empty_n.read()) || (esl_seteq<1,1,1>(or_cond_i_i_i_i_reg_211.read(), ap_const_lv1_1) && 
  esl_seteq<1,1,1>(ap_const_logic_0, img_crop_data_stream_full_n.read())) || (esl_seteq<1,1,1>(or_cond_i_i_i_i_reg_211.read(), ap_const_lv1_1) && 
  esl_seteq<1,1,1>(ap_const_logic_0, img_crop_data_stream_1_full_n.read())) || (esl_seteq<1,1,1>(or_cond_i_i_i_i_reg_211.read(), ap_const_lv1_1) && 
  esl_seteq<1,1,1>(ap_const_logic_0, img_crop_data_stream_2_full_n.read())));
}

void Loop_loop_height_pro_2::thread_ap_condition_pp0_exit_iter0_state3() {
    if (esl_seteq<1,1,1>(ap_const_lv1_1, exitcond_i_i_i_i_fu_181_p2.read())) {
        ap_condition_pp0_exit_iter0_state3 = ap_const_logic_1;
    } else {
        ap_condition_pp0_exit_iter0_state3 = ap_const_logic_0;
    }
}

void Loop_loop_height_pro_2::thread_ap_done() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, exitcond89_i_i_i_i_fu_152_p2.read()))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_done_reg.read();
    }
}

void Loop_loop_height_pro_2::thread_ap_enable_pp0() {
    ap_enable_pp0 = (ap_idle_pp0.read() ^ ap_const_logic_1);
}

void Loop_loop_height_pro_2::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void Loop_loop_height_pro_2::thread_ap_idle_pp0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter1.read()))) {
        ap_idle_pp0 = ap_const_logic_1;
    } else {
        ap_idle_pp0 = ap_const_logic_0;
    }
}

void Loop_loop_height_pro_2::thread_ap_ready() {
    ap_ready = internal_ap_ready.read();
}

void Loop_loop_height_pro_2::thread_c_V_fu_186_p2() {
    c_V_fu_186_p2 = (!t_V_4_reg_133.read().is_01() || !ap_const_lv32_1.is_01())? sc_lv<32>(): (sc_biguint<32>(t_V_4_reg_133.read()) + sc_biguint<32>(ap_const_lv32_1));
}

void Loop_loop_height_pro_2::thread_cols_V_fu_148_p1() {
    cols_V_fu_148_p1 = esl_sext<32,12>(img_input_cols_V_c20_dout.read());
}

void Loop_loop_height_pro_2::thread_exitcond89_i_i_i_i_fu_152_p2() {
    exitcond89_i_i_i_i_fu_152_p2 = (!t_V_reg_122.read().is_01() || !p_read_cast_i_reg_192.read().is_01())? sc_lv<1>(): sc_lv<1>(t_V_reg_122.read() == p_read_cast_i_reg_192.read());
}

void Loop_loop_height_pro_2::thread_exitcond_i_i_i_i_fu_181_p2() {
    exitcond_i_i_i_i_fu_181_p2 = (!t_V_4_reg_133.read().is_01() || !cols_V_reg_197.read().is_01())? sc_lv<1>(): sc_lv<1>(t_V_4_reg_133.read() == cols_V_reg_197.read());
}

void Loop_loop_height_pro_2::thread_img_crop_data_stream_1_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(or_cond_i_i_i_i_reg_211.read(), ap_const_lv1_1))) {
        img_crop_data_stream_1_blk_n = img_crop_data_stream_1_full_n.read();
    } else {
        img_crop_data_stream_1_blk_n = ap_const_logic_1;
    }
}

void Loop_loop_height_pro_2::thread_img_crop_data_stream_1_din() {
    img_crop_data_stream_1_din = img_input_data_strea_1_dout.read();
}

void Loop_loop_height_pro_2::thread_img_crop_data_stream_1_write() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(or_cond_i_i_i_i_reg_211.read(), ap_const_lv1_1) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        img_crop_data_stream_1_write = ap_const_logic_1;
    } else {
        img_crop_data_stream_1_write = ap_const_logic_0;
    }
}

void Loop_loop_height_pro_2::thread_img_crop_data_stream_2_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(or_cond_i_i_i_i_reg_211.read(), ap_const_lv1_1))) {
        img_crop_data_stream_2_blk_n = img_crop_data_stream_2_full_n.read();
    } else {
        img_crop_data_stream_2_blk_n = ap_const_logic_1;
    }
}

void Loop_loop_height_pro_2::thread_img_crop_data_stream_2_din() {
    img_crop_data_stream_2_din = img_input_data_strea_2_dout.read();
}

void Loop_loop_height_pro_2::thread_img_crop_data_stream_2_write() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(or_cond_i_i_i_i_reg_211.read(), ap_const_lv1_1) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        img_crop_data_stream_2_write = ap_const_logic_1;
    } else {
        img_crop_data_stream_2_write = ap_const_logic_0;
    }
}

void Loop_loop_height_pro_2::thread_img_crop_data_stream_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(or_cond_i_i_i_i_reg_211.read(), ap_const_lv1_1))) {
        img_crop_data_stream_blk_n = img_crop_data_stream_full_n.read();
    } else {
        img_crop_data_stream_blk_n = ap_const_logic_1;
    }
}

void Loop_loop_height_pro_2::thread_img_crop_data_stream_din() {
    img_crop_data_stream_din = img_input_data_strea_dout.read();
}

void Loop_loop_height_pro_2::thread_img_crop_data_stream_write() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(or_cond_i_i_i_i_reg_211.read(), ap_const_lv1_1) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        img_crop_data_stream_write = ap_const_logic_1;
    } else {
        img_crop_data_stream_write = ap_const_logic_0;
    }
}

void Loop_loop_height_pro_2::thread_img_input_cols_V_c20_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        img_input_cols_V_c20_blk_n = img_input_cols_V_c20_empty_n.read();
    } else {
        img_input_cols_V_c20_blk_n = ap_const_logic_1;
    }
}

void Loop_loop_height_pro_2::thread_img_input_cols_V_c20_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, img_input_cols_V_c20_empty_n.read())))) {
        img_input_cols_V_c20_read = ap_const_logic_1;
    } else {
        img_input_cols_V_c20_read = ap_const_logic_0;
    }
}

void Loop_loop_height_pro_2::thread_img_input_data_strea_1_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        img_input_data_strea_1_blk_n = img_input_data_strea_1_empty_n.read();
    } else {
        img_input_data_strea_1_blk_n = ap_const_logic_1;
    }
}

void Loop_loop_height_pro_2::thread_img_input_data_strea_1_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        img_input_data_strea_1_read = ap_const_logic_1;
    } else {
        img_input_data_strea_1_read = ap_const_logic_0;
    }
}

void Loop_loop_height_pro_2::thread_img_input_data_strea_2_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        img_input_data_strea_2_blk_n = img_input_data_strea_2_empty_n.read();
    } else {
        img_input_data_strea_2_blk_n = ap_const_logic_1;
    }
}

void Loop_loop_height_pro_2::thread_img_input_data_strea_2_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        img_input_data_strea_2_read = ap_const_logic_1;
    } else {
        img_input_data_strea_2_read = ap_const_logic_0;
    }
}

void Loop_loop_height_pro_2::thread_img_input_data_strea_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        img_input_data_strea_blk_n = img_input_data_strea_empty_n.read();
    } else {
        img_input_data_strea_blk_n = ap_const_logic_1;
    }
}

void Loop_loop_height_pro_2::thread_img_input_data_strea_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        img_input_data_strea_read = ap_const_logic_1;
    } else {
        img_input_data_strea_read = ap_const_logic_0;
    }
}

void Loop_loop_height_pro_2::thread_internal_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, exitcond89_i_i_i_i_fu_152_p2.read()))) {
        internal_ap_ready = ap_const_logic_1;
    } else {
        internal_ap_ready = ap_const_logic_0;
    }
}

void Loop_loop_height_pro_2::thread_or_cond_i_i_i_i_fu_175_p2() {
    or_cond_i_i_i_i_fu_175_p2 = (tmp_i_i_i_fu_163_p2.read() & tmp_i_i_i_59_fu_169_p2.read());
}

void Loop_loop_height_pro_2::thread_p_read_cast_i_fu_144_p1() {
    p_read_cast_i_fu_144_p1 = esl_sext<32,12>(extLd_loc_channel.read());
}

void Loop_loop_height_pro_2::thread_r_V_fu_157_p2() {
    r_V_fu_157_p2 = (!t_V_reg_122.read().is_01() || !ap_const_lv32_1.is_01())? sc_lv<32>(): (sc_biguint<32>(t_V_reg_122.read()) + sc_biguint<32>(ap_const_lv32_1));
}

void Loop_loop_height_pro_2::thread_real_start() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, start_full_n.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, start_once_reg.read()))) {
        real_start = ap_const_logic_0;
    } else {
        real_start = ap_start.read();
    }
}

void Loop_loop_height_pro_2::thread_start_out() {
    start_out = real_start.read();
}

void Loop_loop_height_pro_2::thread_start_write() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, start_once_reg.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, real_start.read()))) {
        start_write = ap_const_logic_1;
    } else {
        start_write = ap_const_logic_0;
    }
}

void Loop_loop_height_pro_2::thread_tmp_i_i_i_59_fu_169_p2() {
    tmp_i_i_i_59_fu_169_p2 = (!t_V_reg_122.read().is_01() || !ap_const_lv32_3FC.is_01())? sc_lv<1>(): (sc_biguint<32>(t_V_reg_122.read()) < sc_biguint<32>(ap_const_lv32_3FC));
}

void Loop_loop_height_pro_2::thread_tmp_i_i_i_fu_163_p2() {
    tmp_i_i_i_fu_163_p2 = (!t_V_reg_122.read().is_01() || !ap_const_lv32_3B.is_01())? sc_lv<1>(): (sc_biguint<32>(t_V_reg_122.read()) > sc_biguint<32>(ap_const_lv32_3B));
}

void Loop_loop_height_pro_2::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, img_input_cols_V_c20_empty_n.read())))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, exitcond89_i_i_i_i_fu_152_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            }
            break;
        case 4 : 
            if (!(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_1, exitcond_i_i_i_i_fu_181_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_1, exitcond_i_i_i_i_fu_181_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state5;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            }
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_fsm_state2;
            break;
        default : 
            ap_NS_fsm = "XXXX";
            break;
    }
}

}

